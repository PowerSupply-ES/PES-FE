{"version":3,"file":"676.47e3e00ce77b9fc86fea.js","mappings":"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","sources":["webpack://pes-fe/./src/components/main/MovingImage.tsx","webpack://pes-fe/./src/hooks/home/useMovingImages.ts","webpack://pes-fe/./src/components/main/ScrollImage.tsx","webpack://pes-fe/./src/hooks/home/useScrollImages.ts","webpack://pes-fe/./src/pages/main/mainPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {img_backImage, img_backImage_right} from \"assets/images\";\r\nimport useMovingImages from \"hooks/home/useMovingImages\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\"; // RootState 임포트\r\n\r\n// 홈화면 첫번째 슬라이딩 이미지 애니메이션\r\nconst MovingImage: React.FC = () => {\r\n  const { animationFinished } = useMovingImages(); // 슬라이딩 HOOK\r\n  const { status } = useSelector((state: RootState) => state.sign); // redux에서 가져오기\r\n\r\n  return (\r\n    <div className=\"content0\">\r\n      {/* 바탕이미지 */}\r\n      <img src={img_backImage} className=\"bg-img\" alt=\"\" />\r\n      {/* 오른쪽이미지 */}\r\n      <img\r\n        src={img_backImage_right}\r\n        className=\"moving-img\"\r\n        alt=\"Moving graphic showing animation\"\r\n        style={{\r\n          opacity: `${animationFinished ? 1 : 0}`,\r\n          transition: \"opacity 1s ease-in-out\",\r\n        }}\r\n      />\r\n\r\n      {/* 하단버튼 */}\r\n      <div\r\n        className=\"main_btn\"\r\n        style={{\r\n          opacity: `${animationFinished ? 1 : 0}`,\r\n          transition: \"opacity 1s ease-in-out\",\r\n        }}\r\n      >\r\n        {/* status 값이 있으면 btn1만 렌더링, 없으면 btn1과 btn2 모두 렌더링 */}\r\n        {status ? (\r\n          <>\r\n            <a href=\"/list\" className=\"btn1\">\r\n              바로가기\r\n            </a>\r\n            {/* TODO : 소개페이지 추가하기 */}\r\n            {/* <a href=\"/menual\" className=\"btn3\">\r\n              소개보기\r\n            </a> */}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <a href=\"/list\" className=\"btn1\">\r\n              바로가기\r\n            </a>\r\n            <a href=\"/signin\" className=\"btn2\">\r\n              로그인\r\n            </a>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovingImage;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useMovingImages = () => {\r\n  // 이미지 움직임(progress증가시키면서 움직이기)\r\n  const [animationProgress, setAnimationProgress] = useState<number>(0);\r\n  // 애니메이션 완료 여부\r\n  const [animationFinished, setAnimationFinished] = useState<boolean>(false);\r\n\r\n  // 페이지 로드될 때 애니메이션 효과를 주기 위한 useEffect 사용\r\n  useEffect(() => {\r\n    if (!animationFinished) {\r\n      // 애니메이션 효과를 위해 setInterval 사용\r\n      // setInterval : 일정 시간 간격으로 animationProgress를 업데이트\r\n      const interval = setInterval(() => {\r\n        // 현재 progress 상태를 가져옴\r\n        const currentProgress = animationProgress;\r\n\r\n        // progress를 0.1씩 증가\r\n        const newProgress = currentProgress + 0.1;\r\n\r\n        // 변경된 progress를 상태에 적용\r\n        setAnimationProgress(newProgress);\r\n\r\n        // progress가 거의 1에 도달했을 때 애니메이션 종료\r\n        if (newProgress >= 0.99) {\r\n          setAnimationFinished(true);\r\n          clearInterval(interval); // 애니메이션 종료\r\n        }\r\n      });\r\n\r\n      // 컴포넌트가 언마운트될 때 interval 정리\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [animationProgress, animationFinished]);\r\n\r\n  return { animationFinished };\r\n};\r\n\r\nexport default useMovingImages;\r\n","import React from \"react\";\r\nimport {img_main_2, img_main_3, img_main_4} from \"assets/images\";\r\nimport useScrollImages from \"hooks/home/useScrollImages\";\r\n\r\n// 스크롤에 따른 홈화면 애니메이션 효과\r\nconst ScrollImage: React.FC = () => {\r\n  const { opacity2, opacity3, opacity4 } = useScrollImages();\r\n\r\n  return (\r\n    <div className=\"scroll_container\">\r\n      <div className=\"content2\">\r\n        <img\r\n          src={img_main_2}\r\n          alt=\"introduce Image1\"\r\n          className=\"scroll-img\"\r\n          style={{ opacity: opacity2, transition: \"opacity 2s ease\" }}\r\n        />\r\n      </div>\r\n      <div className=\"content3\">\r\n        <img\r\n          src={img_main_3}\r\n          alt=\"introduce Image2\"\r\n          className=\"scroll-img\"\r\n          style={{ opacity: opacity3, transition: \"opacity 3s ease\" }}\r\n        />\r\n      </div>\r\n      <div className=\"content4\">\r\n        <img\r\n          src={img_main_4}\r\n          alt=\"introduce Image3\"\r\n          className=\"scroll-img\"\r\n          style={{ opacity: opacity4, transition: \"opacity 4s ease\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollImage;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useScrollImages = () => {\r\n  const [opacity2, setOpacity2] = useState<number>(0);\r\n  const [opacity3, setOpacity3] = useState<number>(0);\r\n  const [opacity4, setOpacity4] = useState<number>(0);\r\n\r\n  const handleScroll = () => {\r\n    const scrollPosition = window.scrollY;\r\n    const scrollRange = window.innerHeight / 2;\r\n\r\n    // 스크롤범위 벗어난경우 투명도1\r\n    const newOpacity2 = scrollPosition > scrollRange ? 1 : 0;\r\n    const newOpacity3 = scrollPosition > scrollRange * 2 ? 1 : 0;\r\n    const newOpacity4 = scrollPosition > scrollRange * 3 ? 1 : 0;\r\n    setOpacity2(newOpacity2);\r\n    setOpacity3(newOpacity3);\r\n    setOpacity4(newOpacity4);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return { opacity2, opacity3, opacity4 };\r\n};\r\n\r\nexport default useScrollImages;\r\n","import React from \"react\";\r\nimport {MovingImage, ScrollImage} from \"components/main\";\r\nimport \"styles/css/App.css\";\r\nimport \"styles/css/mainAnimation.css\";\r\n\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <div className=\"mainPage\">\r\n      <div className=\"content\">\r\n        {/* 상단 이미지 애니메이션*/}\r\n        <MovingImage />\r\n\r\n        {/* 하단 이미지 스크롤 애니메이션*/}\r\n        <ScrollImage />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n"],"names":["MovingImage","animationFinished","useMovingImages","animationProgress","setAnimationProgress","useState","setAnimationFinished","useEffect","interval","setInterval","newProgress","clearInterval","status","useSelector","state","sign","_jsxs","className","children","_jsx","src","img_backImage","alt","img_backImage_right","style","opacity","transition","_Fragment","href","ScrollImage","opacity2","opacity3","opacity4","useScrollImages","setOpacity2","setOpacity3","setOpacity4","handleScroll","scrollPosition","window","scrollY","scrollRange","innerHeight","newOpacity3","newOpacity4","addEventListener","removeEventListener","img_main_2","img_main_3","img_main_4","MainPage"],"sourceRoot":""}