{"version":3,"file":"src_pages_notice_noticePostPage_tsx.3346ce299e6598c01254.js","mappings":"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","sources":["webpack://pes-fe/./src/apis/notice/postNotice.ts","webpack://pes-fe/./src/components/common/Common.tsx","webpack://pes-fe/./src/hooks/notice/useNoticePost.ts","webpack://pes-fe/./src/pages/notice/noticePostPage.tsx","webpack://pes-fe/./src/styles/css/notice.css?c227"],"sourcesContent":["import axios from \"axios\";\r\nimport { PostNoticeType } from \"model/noticeType\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\n\r\n// 공지사항 post API 호출\r\nconst postNotice = async (notice: PostNoticeType, navigate:NavigateFunction) => {\r\n  const uri = \"api/notice\";\r\n\r\n  try {\r\n    const response = await axios.post(uri, notice, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status === 201) {\r\n      alert(\"공지사항이 성공적으로 등록되었습니다!\");\r\n      navigate(\"/notice\");\r\n    }\r\n  } catch (error: unknown) {\r\n    // axios에서 발생한 오류인 경우\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        // 서버가 응답을 반환한 경우\r\n        if (error.response.status === 403) {\r\n          alert(\"권한이 없습니다\");\r\n        } else {\r\n          alert(\r\n            `서버 응답 오류: ${error.response.status} ${error.response.statusText}`\r\n          );\r\n        }\r\n      } else if (error.request) {\r\n        // 요청이 이루어졌으나 응답이 없는 경우\r\n        alert(\"서버 응답이 없습니다.\");\r\n      } else {\r\n        // 설정 중 오류 발생\r\n        alert(`요청 실패: ${error.message}`);\r\n      }\r\n    }\r\n    else { // axios와 무관한 오류인 경우\r\n      alert(`알 수 없는 오류 발생: ${(error as Error).message}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport default postNotice;\r\n","import React from \"react\";\r\n// ===== 공용 함수 지정 =====\r\n\r\n// --- Time에서 \"T\" 제거하여 표시하는 함수\r\nexport const transferTime = (time: string | null | undefined) => {\r\n  if (!time) return \"\"; // 시간이 없는 경우 처리\r\n\r\n  return time.replace(\"T\", \" \");\r\n};\r\n\r\n// --- 뒤로가기 함수\r\nexport const goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\n// --- '\\n' 기준으로 줄바꿈하는 함수\r\n// React.ReactNode : JSX반환타입\r\nexport const renderNewlines = (text: string): React.ReactNode => {\r\n  return text.split(\"\\n\").map((line, index) => (\r\n    <React.Fragment key={index}>\r\n      {line}\r\n      <br />\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\n// --- '\\n\\n' 기준으로 줄바꿈하는 함수\r\nexport const renderStyledNewlines = (text: string): React.ReactNode => {\r\n  const lines = text.split(\"\\n\\n\"); // 각 줄을 분할\r\n  return lines.map((line, index) => {\r\n    return (\r\n      <span key={index}>\r\n        {line}\r\n        <br />\r\n      </span>\r\n    );\r\n  });\r\n};\r\n","import { ChangeEvent, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport postNotice from \"apis/notice/postNotice\";\r\nimport { PostNoticeType } from \"model/noticeType\";\r\n\r\n// TODO : hook들 모두 반환타입 지정하기\r\n\r\n// 공지사항 등록 관련 HOOK\r\nconst useNoticePost = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [notice, setNotice] = useState<PostNoticeType>({\r\n    title: \"\",\r\n    content: \"\",\r\n    isImportant: false, //초기값 false로 설정\r\n  });\r\n\r\n  //입력필드 값 변경될때마다 호출\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => { // onChange 이벤트가 발생하는 입력 요소에 대한 이벤트 객체\r\n    const { name, value, type } = e.target;\r\n\r\n    // 입력 요소의 타입이 체크박스이고 checked 속성이 있다면 해당 값에 따라 isImportant 값을 변경\r\n    const newValue = type === \"checkbox\" ? !notice.isImportant : value;\r\n\r\n    setNotice({\r\n      // notice복사, 변경된 필드만 업데이트\r\n      ...notice,\r\n      [name]: newValue,\r\n    });\r\n  };\r\n\r\n  // 폼이 제출될 때 호출\r\n  const handleSubmit = () => {\r\n    postNotice(notice, navigate);\r\n  };\r\n\r\n  return { notice, handleInputChange, handleSubmit };\r\n};\r\n\r\nexport default useNoticePost;\r\n","import React from \"react\";\r\nimport { PiNotePencilFill } from \"react-icons/pi\";\r\nimport \"styles/css/notice.css\";\r\nimport { goBack } from \"components/common/Common\";\r\nimport useNoticePost from \"hooks/notice/useNoticePost\";\r\n\r\nconst NoticePost: React.FC = () => {\r\n  const { notice, handleInputChange, handleSubmit } = useNoticePost();\r\n\r\n  return (\r\n    // 관리자만 접근할 수 있도록 수정하기\r\n    <div className=\"info_body\">\r\n      <div className=\"content_register\">\r\n        {/* 제목 */}\r\n        <div className=\"header\">\r\n          <PiNotePencilFill size={30} />\r\n          <p>공지사항 등록</p>\r\n        </div>\r\n\r\n        {/* 버튼 */}\r\n        <div className=\"btn_back\">\r\n          <button onClick={() => goBack()}>뒤로가기</button>\r\n        </div>\r\n\r\n        {/* 체크박스 */}\r\n        <form className=\"check_container\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"important\"\r\n            name=\"isImportant\"\r\n            checked={notice.isImportant}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label htmlFor=\"important\">중요</label>\r\n        </form>\r\n\r\n        {/* 제목 */}\r\n        <input\r\n          className=\"title_container\"\r\n          onChange={handleInputChange} /* 입력 값이 변경될 때 핸들러 추가 */\r\n          value={notice.title}\r\n          name=\"title\"\r\n          required\r\n          placeholder=\"제목을 입력하세요\"\r\n        ></input>\r\n\r\n        {/* 본문 */}\r\n        <textarea\r\n          className=\"input_container\"\r\n          onChange={handleInputChange} /* 입력 값이 변경될 때 핸들러 추가 */\r\n          value={notice.content}\r\n          name=\"content\"\r\n          required\r\n          placeholder=\"본문을 입력하세요\"\r\n        ></textarea>\r\n\r\n        <div className=\"btn_container\">\r\n          <button\r\n            className=\"btn_submit\"\r\n            onClick={() => {\r\n              handleSubmit();\r\n            }}\r\n          >\r\n            등록하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NoticePost;\r\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["axios","postNotice","notice","navigate","uri","response","post","headers","status","alert","error","isAxiosError","statusText","request","message","React","jsx","_jsx","jsxs","_jsxs","transferTime","time","replace","goBack","window","history","back","renderNewlines","text","split","map","line","index","Fragment","children","renderStyledNewlines","lines","useState","useNavigate","useNoticePost","setNotice","title","content","isImportant","handleInputChange","e","name","value","type","target","newValue","handleSubmit","PiNotePencilFill","NoticePost","className","size","onClick","id","checked","onChange","htmlFor","required","placeholder"],"sourceRoot":""}