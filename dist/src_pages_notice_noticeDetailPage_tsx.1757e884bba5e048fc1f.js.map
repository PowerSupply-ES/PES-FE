{"version":3,"file":"src_pages_notice_noticeDetailPage_tsx.1757e884bba5e048fc1f.js","mappings":"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","sources":["webpack://pes-fe/./src/apis/notice/delNotice.ts","webpack://pes-fe/./src/apis/notice/fetchNotice.ts","webpack://pes-fe/./src/apis/notice/getNoticeDetail.ts","webpack://pes-fe/./src/apis/notice/getNoticeList.ts","webpack://pes-fe/./src/apis/notice/index.ts","webpack://pes-fe/./src/apis/notice/postNotice.ts","webpack://pes-fe/./src/components/common/Common.tsx","webpack://pes-fe/./src/hooks/notice/useNoticeDetail.ts","webpack://pes-fe/./src/pages/notice/noticeDetailPage.tsx","webpack://pes-fe/./src/styles/css/notice.css?c227"],"sourcesContent":["import axios from \"axios\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\n\r\n// 공지사항 삭제 API 요청\r\nconst delNotice = async (\r\n  uri: string, noticeId: number, navigate: NavigateFunction\r\n) => {\r\n  try {\r\n    const response = await axios.delete(`${uri}${noticeId}`);\r\n\r\n    if (response.status === 200) {\r\n      alert(\"공지사항이 성공적으로 삭제되었습니다!\");\r\n      navigate(\"/notice\");\r\n    }\r\n  } catch (error: unknown) {\r\n\r\n    if (axios.isAxiosError(error)) {  // axios 에러인 경우\r\n      if (error.response) {\r\n        // 서버 응답이 있는 경우\r\n        if (error.response.status === 403) {\r\n          alert(\"권한이 없습니다\");\r\n        } else {\r\n          alert(\r\n            `삭제 실패: ${error.response.status} ${error.response.statusText}`\r\n          );\r\n        }\r\n      } else if (error.request) {\r\n        // 요청이 이루어졌으나 응답이 없는 경우\r\n        alert(\"삭제 실패: 요청이 실패했습니다.\");\r\n      } else {\r\n        // 설정 중 오류 발생\r\n        alert(`삭제 실패: ${error.message}`);\r\n      }\r\n    } else {  // Axios 에러가 아닌 경우\r\n      alert(`삭제 실패: ${String(error)}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport default delNotice;\r\n","import axios from \"axios\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\nimport { NoticeDetailType } from \"model/noticeType\";\r\n\r\n// 공지사항 수정 API 요청\r\nconst fetchNotice = async (\r\n  uri: string, noticeId: number , noticeDetail: NoticeDetailType, navigate: NavigateFunction\r\n) => {\r\n  try {\r\n    const response = await axios.patch(`${uri}${noticeId}`, noticeDetail, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      alert(\"공지사항이 성공적으로 수정되었습니다!\");\r\n      navigate(\"/notice\");\r\n    }\r\n  } catch (error: unknown) {\r\n    // axios 에러인 경우\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        // 서버 응답이 있는 경우\r\n        if (error.response.status === 403) {\r\n          alert(\"권한이 없습니다\");\r\n        } else if (error.response.status === 404) {\r\n          alert(\"해당 공지사항이 존재하지 않습니다\");\r\n        } else {\r\n          alert(\r\n            `수정 실패: ${error.response.status} ${error.response.statusText}`\r\n          );\r\n        }\r\n      } else if (error.request) {\r\n        // 요청이 이루어졌으나 응답이 없는 경우\r\n        alert(\"수정 실패: 요청이 실패했습니다.\");\r\n      } else {\r\n        // 설정 중 오류 발생\r\n        alert(`수정 실패: ${error.message}`);\r\n      }\r\n    }else { // Axios 에러가 아닌 경우\r\n      alert(`수정 실패: ${String(error)}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport default fetchNotice;\r\n","import axios from \"axios\";\r\nimport { SetNoticeDetail } from \"model/noticeType\";\r\n\r\n// 공지사항 세부사항 get API\r\nconst getNoticeDetail = async (\r\n  setDetail: SetNoticeDetail,\r\n  noticeId: number,\r\n  uri: string\r\n) => {\r\n  try {\r\n    const response = await axios.get(`${uri}${noticeId}`);\r\n    setDetail(response.data);\r\n  } catch (error: unknown) {\r\n    if (axios.isAxiosError(error)) {\r\n      //axios error인지 확인\r\n      // 서버가 응답을 반환했지만 상태 코드가 오류를 나타내는 경우\r\n      console.error(\r\n        \"Axios 오류 발생:\",\r\n        error.response?.status,\r\n        error.response?.statusText\r\n      );\r\n    } else if (error instanceof Error) {\r\n      //js오류인지 확인\r\n      // 요청이 서버로 전송되었지만 응답을 받지 못한 경우\r\n      console.error(\"일반 오류 발생:\", error.message);\r\n    } else {\r\n      console.error(\"알 수 없는 오류 발생:\", error);\r\n    }\r\n  }\r\n};\r\n\r\nexport default getNoticeDetail;\r\n","import axios from \"axios\";\r\nimport { SetNoticeList } from \"model/noticeType\";\r\n\r\n// 공지사항 리스트 get API 요청\r\nconst getNoticeList = async (setNoticeList: SetNoticeList): Promise<void> => {\r\n  const uri = \"api/notice\";\r\n\r\n  try {\r\n    const response = await axios.get(uri);\r\n\r\n    if (response.status === 204) {\r\n      console.log(\"공지사항이 아직 없습니다!\");\r\n      setNoticeList([]); // 빈 배열로 설정\r\n      return;\r\n    }\r\n    setNoticeList(response.data);\r\n  } catch (error: unknown) {\r\n    if (axios.isAxiosError(error)) {\r\n      //axios error인지 확인\r\n      // 서버가 응답을 반환했지만 상태 코드가 오류를 나타내는 경우\r\n      console.error(\r\n        \"Axios 오류 발생:\",\r\n        error.response?.status,\r\n        error.response?.statusText\r\n      );\r\n    } else if (error instanceof Error) {\r\n      //js오류인지 확인\r\n      // 요청이 서버로 전송되었지만 응답을 받지 못한 경우\r\n      console.error(\"일반 오류 발생:\", error.message);\r\n    } else {\r\n      console.error(\"알 수 없는 오류 발생:\", error);\r\n    }\r\n  }\r\n};\r\n\r\nexport default getNoticeList;\r\n","// apis/notice 디렉토리 export 관리\r\nexport { default as delNotice } from './delNotice';\r\nexport { default as fetchNotice } from './fetchNotice';\r\nexport { default as getNoticeDetail } from './getNoticeDetail';\r\nexport { default as getNoticeList } from './getNoticeList';\r\nexport { default as postNotice } from './postNotice';","import axios from \"axios\";\r\nimport { PostNoticeType } from \"model/noticeType\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\n\r\n// 공지사항 post API 호출\r\nconst postNotice = async (notice: PostNoticeType, navigate:NavigateFunction) => {\r\n  const uri = \"api/notice\";\r\n\r\n  try {\r\n    const response = await axios.post(uri, notice, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status === 201) {\r\n      alert(\"공지사항이 성공적으로 등록되었습니다!\");\r\n      navigate(\"/notice\");\r\n    }\r\n  } catch (error: unknown) {\r\n    // axios에서 발생한 오류인 경우\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        // 서버가 응답을 반환한 경우\r\n        if (error.response.status === 403) {\r\n          alert(\"권한이 없습니다\");\r\n        } else {\r\n          alert(\r\n            `서버 응답 오류: ${error.response.status} ${error.response.statusText}`\r\n          );\r\n        }\r\n      } else if (error.request) {\r\n        // 요청이 이루어졌으나 응답이 없는 경우\r\n        alert(\"서버 응답이 없습니다.\");\r\n      } else {\r\n        // 설정 중 오류 발생\r\n        alert(`요청 실패: ${error.message}`);\r\n      }\r\n    }\r\n    else { // axios와 무관한 오류인 경우\r\n      alert(`알 수 없는 오류 발생: ${(error as Error).message}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport default postNotice;\r\n","import React from \"react\";\r\n// ===== 공용 함수 지정 =====\r\n\r\n// --- Time에서 \"T\" 제거하여 표시하는 함수\r\nexport const transferTime = (time: string | null | undefined) => {\r\n  if (!time) return \"\"; // 시간이 없는 경우 처리\r\n\r\n  return time.replace(\"T\", \" \");\r\n};\r\n\r\n// --- 뒤로가기 함수\r\nexport const goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\n// --- '\\n' 기준으로 줄바꿈하는 함수\r\n// React.ReactNode : JSX반환타입\r\nexport const renderNewlines = (text: string): React.ReactNode => {\r\n  return text.split(\"\\n\").map((line, index) => (\r\n    <React.Fragment key={index}>\r\n      {line}\r\n      <br />\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\n// --- '\\n\\n' 기준으로 줄바꿈하는 함수\r\nexport const renderStyledNewlines = (text: string): React.ReactNode => {\r\n  const lines = text.split(\"\\n\\n\"); // 각 줄을 분할\r\n  return lines.map((line, index) => {\r\n    return (\r\n      <span key={index}>\r\n        {line}\r\n        <br />\r\n      </span>\r\n    );\r\n  });\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport getNoticeDetail from \"apis/notice/getNoticeDetail\";\r\nimport { NoticeDetailType } from \"model/noticeType\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\";\r\n\r\n// user 세부정보 호출 HOOK\r\nconst useNoticeDetail = () => {\r\n  const { memberStatus } : { memberStatus: string | null} = useSelector((state: RootState) => state.user); // redux에서 가져오기\r\n  const [noticeDetail, setDetail] = useState<NoticeDetailType | null>(null); //공지사항 세부정보\r\n  const [isEditing, setIsEditing] = useState<boolean>(false); //수정상태\r\n\r\n  let url = new URL(window.location.href);\r\n  let noticeId: number = parseInt(url.pathname.split(\"/\")[2]); // number 타입으로 넘기기위해 int로 변환\r\n\r\n  const uri = \"/api/notice/\";\r\n\r\n  useEffect(() => {\r\n    getNoticeDetail(setDetail, noticeId, uri); // 공지사항 detail API요청\r\n  }, [noticeId]);\r\n\r\n  // 공지사항 수정 상태 관리\r\n  const toggleEditing = () => {\r\n    setIsEditing((prevState) => !prevState);\r\n  };\r\n\r\n  return {\r\n    memberStatus,\r\n    noticeDetail,\r\n    isEditing,\r\n    toggleEditing,\r\n    setDetail,\r\n    uri,\r\n    noticeId,\r\n  };\r\n};\r\n\r\nexport default useNoticeDetail;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { HiSpeakerphone } from \"react-icons/hi\";\r\nimport \"styles/css/notice.css\";\r\nimport { transferTime, goBack } from \"components/common/Common\";\r\nimport {delNotice, fetchNotice} from \"apis/notice\";\r\nimport useNoticeDetail from \"hooks/notice/useNoticeDetail\";\r\nimport Loading from \"components/common/Loading\";\r\nimport { renderNewlines } from \"components/common/Common\";\r\n\r\nconst NoticeDetail: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    memberStatus,\r\n    noticeDetail,\r\n    isEditing,\r\n    toggleEditing,\r\n    setDetail,\r\n    uri,\r\n    noticeId,\r\n  } = useNoticeDetail();\r\n\r\n   // noticeDetail이 null인 경우\r\n  if (!noticeDetail) {\r\n    return <Loading/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"info_body\">\r\n      <div className=\"content_Detail\">\r\n        {/* 제목 */}\r\n        <div className=\"header\">\r\n          <HiSpeakerphone size={30} />\r\n\r\n          {/* 수정 가능 상태에 따라 보여지는 내용 조절 */}\r\n          {isEditing ? (\r\n            <textarea\r\n              className=\"textarea_header\"\r\n              value={noticeDetail.title}\r\n              onChange={(e) =>\r\n                setDetail((prevState) => {\r\n                  if(prevState){\r\n                    return{\r\n                      ...prevState,\r\n                      title: e.target.value,\r\n                    }\r\n                  }\r\n                  return prevState; // prevState가 null인 경우 예외 처리\r\n                })\r\n              }\r\n            />\r\n          ) : (\r\n            <p>{noticeDetail.title}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* 공지사항 정보 */}\r\n        <div className=\"noticeInfo-container\">\r\n          <ul className=\"noticeInfo\">\r\n            {/* 작성자정보 */}\r\n            <li>\r\n              <p className=\"leftInfo\">작성자</p>\r\n              <p>{noticeDetail.writerGen}기 {noticeDetail.writer}</p>\r\n            </li>\r\n            {/* 시간 정보 */}\r\n            <li>\r\n              <p className=\"leftInfo\">생성시간</p>\r\n              <p>{transferTime(noticeDetail.createdTime)}</p>\r\n            </li>\r\n            <li>\r\n              <p className=\"leftInfo\">수정시간</p>\r\n              <p>{transferTime(noticeDetail.updatedTime)}</p>\r\n            </li>\r\n            {/* 조회수정보 */}\r\n            <li>\r\n              <p className=\"leftInfo\">조회수</p>\r\n              <p>{noticeDetail.noticeHit}회</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        {/* 버튼 */}\r\n        <div className=\"btn_back\">\r\n          <button onClick={() => goBack()}>뒤로가기</button>\r\n        </div>\r\n\r\n        {/* 본문 */}\r\n        <div className=\"text_container\">\r\n          {/* 수정 가능 상태에 따라 보여지는 내용 조절 */}\r\n          {isEditing ? (\r\n            <textarea\r\n              className=\"textarea_content\"\r\n              value={noticeDetail.content}\r\n              onChange={(e) =>\r\n                setDetail((prevState) => {\r\n                  if (prevState) {\r\n                    return {\r\n                      ...prevState,\r\n                      content: e.target.value,\r\n                    };\r\n                  }\r\n                  return prevState; // prevState가 null인 경우 예외처리\r\n                })\r\n              }\r\n            />\r\n          ) : (\r\n            <p className=\"text\">{renderNewlines(noticeDetail.content)}</p> // TODO : 내용초과시 break, scroll기능넣기\r\n          )}\r\n        </div>\r\n\r\n        {/* 관리자용버튼_state에 따라 보여지기 */}\r\n        <div\r\n          className={memberStatus === \"관리자\" ? \"btn_container\" : \"no_button\"}\r\n        >\r\n          {/* 수정 중 상태에 따라 버튼 대체 */}\r\n          {isEditing ? (\r\n            <button\r\n              className=\"btn_modify\"\r\n              onClick={() => fetchNotice(uri, noticeId, noticeDetail, navigate)}\r\n            >\r\n              저장하기\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn_submit\" onClick={toggleEditing}>\r\n              수정하기\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className=\"btn_delete\"\r\n            onClick={() => delNotice(uri, noticeId, navigate)}\r\n          >\r\n            삭제하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NoticeDetail;\r\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["axios","delNotice","uri","noticeId","navigate","response","delete","status","alert","error","isAxiosError","statusText","request","message","String","fetchNotice","noticeDetail","patch","headers","getNoticeDetail","setDetail","get","data","console","Error","getNoticeList","setNoticeList","log","default","postNotice","notice","post","React","jsx","_jsx","jsxs","_jsxs","transferTime","time","replace","goBack","window","history","back","renderNewlines","text","split","map","line","index","Fragment","children","renderStyledNewlines","lines","useEffect","useState","useSelector","useNoticeDetail","memberStatus","state","user","isEditing","setIsEditing","url","URL","location","href","parseInt","pathname","toggleEditing","prevState","useNavigate","HiSpeakerphone","Loading","NoticeDetail","className","size","value","title","onChange","e","target","writerGen","writer","createdTime","updatedTime","noticeHit","onClick","content"],"sourceRoot":""}