{"version":3,"file":"src_pages_problem_problemPage_tsx.b1254f60f8f5a4d76292.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBC,KAAK,IAAIA,KAAK,CAACnD,KAAK,KAAK,SAAS,GAAG,SAAS,GAAGmD,KAAK,CAACnD,KAAK,KAAK,MAAM,GAAG,wBAAwB,GAAG,SAAS;AAClI;AACA;AACA,+BAA+BmD,KAAK,IAAIA,KAAK,CAACnD,KAAK,KAAK,SAAS,GAAG,SAAS,GAC/DmD,KAAK,CAACnD,KAAK,KAAK,MAAM,GAAG,wBAAwB,GACjD,SAAS;AACvB,4BAA4BmD,KAAK,IAAIA,KAAK,CAACnD,KAAK,KAAK,SAAS,GAAG,yBAAyB,GAChFmD,KAAK,CAACnD,KAAK,KAAK,MAAM,GAAG,uBAAuB,GAChD,sBAAsB;AAChC;AACA,iBAAiBmD,KAAK,IAAIA,KAAK,CAACnD,KAAK,KAAK,SAAS,GAAG,yBAAyB,GACjEmD,KAAK,CAACnD,KAAK,KAAK,MAAM,GAAG,uBAAuB,GAChD,sBAAsB;AACpC,4BAA4BmD,KAAK,IAAIA,KAAK,CAACnD,KAAK,KAAK,SAAS,GAAG,yBAAyB,GAC5EmD,KAAK,CAACnD,KAAK,KAAK,MAAM,GAAG,uBAAuB,GAChD,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://pes-fe/./src/apis/problem/getProbContent.ts","webpack://pes-fe/./src/apis/problem/getProbTitle.ts","webpack://pes-fe/./src/apis/problem/postSubmitCode.ts","webpack://pes-fe/./src/components/common/Common.tsx","webpack://pes-fe/./src/hooks/problem/index.ts","webpack://pes-fe/./src/hooks/problem/useProbContent.ts","webpack://pes-fe/./src/hooks/problem/useProbPage.ts","webpack://pes-fe/./src/hooks/problem/useProbTitle.ts","webpack://pes-fe/./src/hooks/problem/useSubmitCode.ts","webpack://pes-fe/./src/pages/problem/problemPage.tsx","webpack://pes-fe/./src/styles/styledComponent/Problem-styled.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// 문제 내용 get 요청\r\nconst getProbContent = async (problemId: number) => {\r\n  try {\r\n    const { data } = await axios.get(`/api2/problem/${problemId}`, {\r\n      withCredentials: true,\r\n    });\r\n    return data;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getProbContent;\r\n","import axios from \"axios\";\r\n\r\n// 문제 제목 get 요청\r\nconst getProbTitle = async (problemId: number) => {\r\n  try {\r\n    const res = await axios.get(`/api2/problemtitle/${problemId}`, {\r\n      withCredentials: true,\r\n    });\r\n    return res.data;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"problemId:\", problemId);\r\n};\r\n\r\nexport default getProbTitle;\r\n","import axios from \"axios\";\r\n\r\n// 코드 제출 post 요청\r\nconst postSubmitCode = async (request: string, problemId: number) => {\r\n  try {\r\n    const response = await axios.post(`/api2/submit/${problemId}`, {\r\n      code: request,\r\n      problemId: problemId,\r\n    });\r\n    return { data: response.data, status: response.status };\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n\r\n    // error가 AxiosError인지 확인\r\n    if (axios.isAxiosError(error)) {\r\n      return { status: error.response ? error.response.status : 500 };\r\n    } else {\r\n      // 예상하지 못한 다른 에러의 경우\r\n      return { status: 500 };\r\n    }\r\n  }\r\n};\r\n\r\nexport default postSubmitCode;\r\n","import React from \"react\";\r\n// ===== 공용 함수 지정 =====\r\n\r\n// --- Time에서 \"T\" 제거하여 표시하는 함수\r\nexport const transferTime = (time: string | null | undefined) => {\r\n  if (!time) return \"\"; // 시간이 없는 경우 처리\r\n\r\n  return time.replace(\"T\", \" \");\r\n};\r\n\r\n// --- 뒤로가기 함수\r\nexport const goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\n// --- '\\n' 기준으로 줄바꿈하는 함수\r\n// React.ReactNode : JSX반환타입\r\nexport const renderNewlines = (text: string): React.ReactNode => {\r\n  return text.split(\"\\n\").map((line, index) => (\r\n    <React.Fragment key={index}>\r\n      {line}\r\n      <br />\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\n// --- '\\n\\n' 기준으로 줄바꿈하는 함수\r\nexport const renderStyledNewlines = (text: string): React.ReactNode => {\r\n  const lines = text.split(\"\\n\\n\"); // 각 줄을 분할\r\n  return lines.map((line, index) => {\r\n    return (\r\n      <span key={index}>\r\n        {line}\r\n        <br />\r\n      </span>\r\n    );\r\n  });\r\n};\r\n","// hooks/problem 디렉토리 export 관리\r\nexport { default as useProbContent } from './useProbContent';\r\nexport { default as useProbTitle } from './useProbTitle';\r\nexport { default as useSubmitCode } from './useSubmitCode';\r\n\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport getProbContent from \"apis/problem/getProbContent\";\r\nimport { ProblemContent } from \"model/problemType\"; \r\n\r\n// 문제 내용 get HOOK\r\nconst useProbContent = (problemId: number): ProblemContent | null => {\r\n  const [problem, setProblem] = useState<ProblemContent | null>(null);\r\n\r\n  const fetchProblem = useCallback(async () => {\r\n    try {\r\n      const response = await getProbContent(problemId);\r\n      setProblem(response);\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n    }\r\n  }, [problemId]);\r\n\r\n  useEffect(() => {\r\n    fetchProblem();\r\n  }, [fetchProblem]);\r\n\r\n  return problem;\r\n};\r\n\r\nexport default useProbContent;\r\n","// 문제 관련 HOOK 반환타입\r\nimport {useProbContent, useProbTitle, useSubmitCode} from \"./index\";\r\nimport { UseProbPageReturnType } from \"model/problemType\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\";\r\n\r\n// 문제 관련 HOOK 관리 - ProblemPage에 사용\r\nconst useProbPage = (problemId: number): UseProbPageReturnType => {\r\n  const title = useProbTitle(problemId); // 문제 제목 get HOOK\r\n  const problem = useProbContent(problemId); // 문제 내용 get HOOK\r\n  const { textHandler, submitCode, detail } = useSubmitCode(problemId); // 문제 post 요청\r\n  const { status } = useSelector((state: RootState) => state.sign); // redux에서 가져오기\r\n\r\n  const isLogin = status;\r\n\r\n  return {\r\n    title,\r\n    problem,\r\n    detail,\r\n    isLogin,\r\n    textHandler,\r\n    submitCode\r\n  };\r\n};\r\n\r\nexport default useProbPage;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport getProbTitle from \"apis/problem/getProbTitle\";\r\nimport { ProblemTitle } from \"model/problemType\"; \r\n\r\n// 문제 제목 get HOOK\r\nconst useProbTitle = (problemId: number): ProblemTitle | null => {\r\n  const [title, setTitle] = useState<ProblemTitle | null>(null);\r\n\r\n  // problemId가 변경되지 않는 한, 동일한 함수로 재사용\r\n  const fetchTitle = useCallback(async () => {\r\n    try {\r\n      const titleData = await getProbTitle(problemId);\r\n      if (titleData) {\r\n        setTitle(titleData); // titleData가 존재할 때만 state 업데이트\r\n      } else {\r\n        setTitle(null);\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n      setTitle(null);\r\n    }\r\n  }, [problemId]);\r\n\r\n  useEffect(() => {\r\n    fetchTitle();\r\n  }, [fetchTitle]);\r\n\r\n  return title;\r\n};\r\n\r\nexport default useProbTitle;\r\n","import { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport postSubmitCode from \"apis/problem/postSubmitCode\";\r\n\r\n// 문제 post 요청\r\nconst useSubmitCode = (problemId: number) => {\r\n  const navigate = useNavigate();\r\n  const text = useRef<string>(\"\"); // 코드 입력을 위한 useRef\r\n  const [detail, setDetail] = useState<string | null>(null); // 틀린 이유 저장하는 state\r\n\r\n  // 수정코드_by성임\r\n  function textHandler(newCode: string) {\r\n    text.current = newCode;\r\n  }\r\n\r\n  const submitCode = async () => {\r\n    if (!text.current) {\r\n      alert(\"코드를 입력해주세요!\");\r\n    } else {\r\n      const { data: response, status } = await postSubmitCode(\r\n        text.current,\r\n        problemId\r\n      );\r\n\r\n      if (!response) {\r\n        alert(\"오류!\");\r\n      } else if (status === 201) {\r\n        console.log(response);\r\n        alert(\"문제를 맞혔습니다! 질의응답 페이지로 이동합니다.\");\r\n        sessionStorage.setItem(\"problemId\", problemId.toString());\r\n        navigate(`/question/${response.answer_id}`);\r\n      } else if (status === 202) {\r\n        setDetail(response.detail);\r\n        alert(\"문제를 틀렸습니다! 다시 풀어보세요.\");\r\n      } else if (status === 500) {\r\n        alert(\r\n          `server가 응답하지 않네요! 관리자에게 상황을 공유해주세요! : ${response.message}`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return { detail, textHandler, submitCode };\r\n};\r\n\r\nexport default useSubmitCode;\r\n","import React, { Suspense } from \"react\";\r\nimport { StyledProblem } from \"styles/styledComponent/Problem-styled\";\r\nimport useProbPage from \"hooks/problem/useProbPage\";\r\nimport { renderNewlines, renderStyledNewlines } from \"components/common/Common\";\r\nimport Loading from \"components/common/Loading\";\r\nconst CodeEditor = React.lazy(() => import(\"components/problem/CodeEditor\"));\r\n\r\nconst ProblemPage: React.FC = () => {\r\n  let url = new URL(window.location.href);\r\n  let problemId = Number(url.pathname.split(\"/\")[2]); // 문자열을 숫자로 변환\r\n\r\n  // 관련 HOOK 호출\r\n  const { title, problem, detail, isLogin, textHandler, submitCode } =\r\n    useProbPage(problemId);\r\n\r\n  // 문제 UI 렌더링 함수\r\n  const renderProbUI = () => {\r\n\r\n    return (\r\n      <StyledProblem state={\"null\"}>\r\n        <div className=\"problem_header\">\r\n          <div className=\"problem_group\">\r\n            <div className=\"problem_id\">문제{problemId}</div>\r\n            <div className=\"header_title\">{title?.problemTitle}</div>\r\n            <div className=\"header_answer_state\">미완료</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"problem_section\">\r\n          <div className=\"content_container\">\r\n            {/* 상단문제 */}\r\n            <div className=\"top\" style={{ whiteSpace: \"pre\" }}>\r\n              <p className=\"underline\">문제</p>\r\n              <div className=\"prob_text\">\r\n                {/* renderNewlines : '\\n' 기준으로 줄바꿈 함수 */}\r\n                {problem?.problemContent &&\r\n                  renderNewlines(problem.problemContent)}\r\n              </div>\r\n            </div>\r\n\r\n            {/* 하단 sample input */}\r\n            <div className=\"bottom\">\r\n              <div className=\"sample_inputs\" style={{ whiteSpace: \"pre\" }}>\r\n                <p className=\"underline\">Sample Inputs</p>\r\n                <div className=\"input_text\">\r\n                  {problem?.sampleInputs &&\r\n                    problem.sampleInputs.map((input, index) => (\r\n                      <React.Fragment key={index}>\r\n                        {/* renderStyledNewlines : '\\n\\n' 기준으로 줄바꿈 함수 */}\r\n                        {renderStyledNewlines(input)}\r\n                      </React.Fragment>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"sample_outputs\" style={{ whiteSpace: \"pre\" }}>\r\n                <p className=\"underline\">Sample Outputs</p>\r\n                <div className=\"output_text\">\r\n                  {problem?.sampleOutputs &&\r\n                    problem.sampleOutputs.map((output, index) => (\r\n                      <React.Fragment key={index}>\r\n                        {renderStyledNewlines(output)}\r\n                      </React.Fragment>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 우측 코드 입력 */}\r\n          <div className=\"code_section\">\r\n            {isLogin ? (\r\n              <>\r\n                {/* 변경코드 by성임 - Lazy Loading 적용 */}\r\n                <Suspense fallback={<Loading/>}>\r\n                  <CodeEditor\r\n                    code={\"\"} // 현재 코드 상태\r\n                    onChange={textHandler} // 코드 변경 핸들러\r\n                    readOnly={false} // 읽기 전용 여부\r\n                  />\r\n                </Suspense>\r\n\r\n                {detail !== null && detail !== undefined && (\r\n                  <div className=\"detail_container\">\r\n                    <h3>틀린 이유</h3>\r\n                    <div className=\"detail_content\">{detail}</div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <textarea\r\n                disabled\r\n                className=\"code_input\"\r\n                placeholder=\"로그인 후 이용해주세요.\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          className={isLogin ? \"submit_button\" : \"submit_button disabled\"}\r\n          onClick={() =>\r\n            //기존코드\r\n            //isLogin && submitCode()\r\n\r\n            //수정코드 by성임\r\n            {\r\n              if (isLogin) {\r\n                if (\r\n                  window.confirm(\"수정이 불가능합니다. 정말 제출하시겠습니까?\")\r\n                ) {\r\n                  submitCode();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        >\r\n          제출\r\n        </button>\r\n      </StyledProblem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {title && problem ? renderProbUI() : <Loading/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProblemPage;\r\n","import styled from \"styled-components\";\r\nimport { StyledProps } from \"model/problemType\"; \r\n\r\nexport const StyledProblem = styled.div<StyledProps>`\r\n    .problem_header {\r\n        width: 80%;\r\n        height: 78px;\r\n        display: flex;\r\n        align-items: center;\r\n        margin-top: 40px;\r\n        margin-bottom: 16px;\r\n        position: relative;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        justify-content: space-between;\r\n    }\r\n    .button_group{\r\n        width: 80%;\r\n        margin: 0 auto 32px;\r\n        justify-content: right;\r\n    }\r\n    .problem_group {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .problem_id {\r\n        width: 80px;\r\n        height: fit-content;\r\n        font-size: 19px;\r\n\r\n        padding: 8px 0;\r\n        font-weight: bold;\r\n        // background-color: #ffffff;\r\n        background-color:#3B3B3B;\r\n        color : #ffffff;\r\n        border:solid 3px #3B3B3B; opacity:80%;\r\n        border-radius : 50px;\r\n        text-align: center;\r\n        margin-right: 20px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n    }\r\n    .header_title {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        text-align: left;\r\n        margin-right: 8px;\r\n    }\r\n    .header_score {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        text-align: left;\r\n        margin-left: 20px;\r\n    }\r\n    .header_answer_state {\r\n        width: fit-content;\r\n        padding: 8px 16px;\r\n        // color: ${props => props.state === \"success\" ? \"#5094F9\" : props.state === \"fail\" ? \"rgba(235, 52, 52, 0.8)\" : \"#6A6B6F\"};\r\n        // background-color: #ffffff;\r\n\r\n        /* border: solid 3px ${props => props.state === \"success\" ? \"#5094F9\" \r\n            : props.state === \"fail\" ? \"rgba(235, 52, 52, 0.8)\" \r\n            : \"#DEDEDE\"};\r\n        background-color: ${props => props.state === \"success\" ? \"#0025cae0; opacity:70%;\"\r\n        : props.state === \"fail\" ? \"rgb(255, 53, 53, 0.9)\" \r\n        : \"#3B3B3B; opacity:70%\"}; */\r\n        \r\n        color: ${props => props.state === \"success\" ? \"#0025cae0; opacity:70%;\" \r\n            : props.state === \"fail\" ? \"rgb(255, 53, 53, 0.9)\" \r\n            : \"#3B3B3B; opacity:70%\"};\r\n        border: solid 3px ${props => props.state === \"success\" ? \"#0025cae0; opacity:70%;\"\r\n            : props.state === \"fail\" ? \"rgb(246, 73, 73, 0.9)\" \r\n            : \"#3B3B3B; opacity:70%\"};\r\n\r\n        font-size: 19px;\r\n        font-weight: bold;\r\n        margin-right: 10px;\r\n        border-radius : 50px;\r\n        box-sizing: border-box;\r\n        box-shadow: 1px 2px #CCC9C9;\r\n    }\r\n    .description {\r\n        width: 1376px;\r\n        font-size: 20px;\r\n        align-items: center;\r\n        margin: auto;\r\n        background-color: beige;\r\n        text-align: left;\r\n    }\r\n\r\n    .problem_section{\r\n        width:80%;\r\n        height:100vh;\r\n        margin: 60px auto 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom:20px;\r\n    }\r\n\r\n    &.problem_header_section {\r\n        z-index: 998;\r\n        position: relative;\r\n    }\r\n\r\n    .code_section{\r\n        flex: 5;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        margin: auto 0;\r\n        height:100%;\r\n    }\r\n\r\n    .content_container {\r\n        width: 40%;\r\n        height: auto;\r\n        justify-content: center;\r\n        flex: 4;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-right: 60px;\r\n        // background-color: #ffffff;\r\n        // border-radius : 20px;\r\n        // box-shadow: 1px 3px #CCC9C9;\r\n        //   overflow-y: auto;\r\n\r\n    }\r\n    .content_container > .top,\r\n    .content_container > .bottom{\r\n        background-color: #ffffff;\r\n        border-radius : 20px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n        overflow-y: auto;\r\n        padding:12px;\r\n        width: 100%;\r\n\r\n        min-height: 240px;\r\n    }\r\n\r\n    // 스크롤바 디자인\r\n    ::-webkit-scrollbar {\r\n    width: 10px;  \r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n    background: #c0c0c0; /* 스크롤바 색상 */\r\n    border-radius: 10px; /* 스크롤바 둥근 테두리 */\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n    background: #e7e6f696;  /*스크롤바 뒷 배경 색상*/\r\n    }\r\n\r\n    .content_container > .top{\r\n\r\n        text-align: left;\r\n        margin: 0 auto 4px;\r\n        border-bottom: solid 1px;\r\n        height: 45%;\r\n    }\r\n    .content_container > .bottom{\r\n        height: 55%;\r\n\r\n    }\r\n    .content_container > .bottom > .sample_inputs {\r\n        width: 90%;\r\n        display:flex;\r\n        flex-direction:column;\r\n        align-items: start;\r\n\r\n        text-align: left;\r\n        margin: auto;\r\n    }\r\n    .underline\r\n    {\r\n        font-size:18px;\r\n        text-decoration:underline;\r\n        text-underline-offset : 6px;\r\n        text-decoration-color: #5094F9; opacity:70%;\r\n\r\n        color:#000000;\r\n     \r\n        font-size: 19px;\r\n        // font-weight: bold;\r\n        margin-bottom: 12px;\r\n    }\r\n    .top > .prob_text{\r\n        font-weight:bold;\r\n    }\r\n    .sample_inputs > .input_text{\r\n        font-weight:bold;\r\n    }\r\n    .sample_outputs > .output_text{\r\n        font-weight:bold;\r\n    }\r\n\r\n    // input요소들 중 순서에 따라 색깔 부여\r\n    .input_text > *:nth-child(1),\r\n    .output_text > *:nth-child(1){\r\n        color: rgb(124, 124, 124);\r\n    }\r\n    .input_text > *:nth-child(2n),\r\n    .output_text > *:nth-child(2n){\r\n        color: #a1a1ff;\r\n    }\r\n    .input_text > *:nth-child(3n),\r\n    .output_text > *:nth-child(3n){\r\n        color: #d783ff;\r\n    }\r\n\r\n    .content_container > .bottom > .sample_outputs {\r\n        width: 90%;\r\n        text-align: left;\r\n        margin: auto;\r\n    }\r\n    .sample_outputs > .underline{\r\n        margin-top:40px;\r\n    }\r\n\r\n\r\n    .code_input {\r\n        width: 100%;\r\n        height: 100%;\r\n        min-height: 564px;\r\n        font-size: 18px;\r\n        // color: #ffffff;\r\n        display: flex;\r\n        justify-content: center;\r\n        background-color: #3e3e3e;\r\n        overflow-y: auto;\r\n\r\n        border-radius : 20px;\r\n        padding: 16px 8px 0 12px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n        box-sizing: border-box;\r\n    }\r\n    .submit_button {\r\n        width: fit-content;\r\n        height: fit-content;\r\n        background-color: #9747FF;\r\n        color: white;\r\n        font-size: 20px;\r\n        border-radius: 5px;\r\n        border: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 80px auto 40px;\r\n        padding: 4px 36px;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n    }\r\n    .submit_button.disabled {\r\n        background-color: #dedede;\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    .code_container {\r\n        width: 1376px;\r\n        height: auto;\r\n        display: flex;\r\n        align-items: center;\r\n        margin: auto;\r\n        border-radius: 5px;\r\n        background-color: beige;\r\n        font-size: 20px;\r\n        white-space: pre-line; \r\n    }\r\n   \r\n    .title {\r\n        width: fit-content;\r\n        display: flex;\r\n        font-size: 24px;\r\n        font-weight: bold;\r\n        margin: 0 auto;\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .result_container {\r\n        width: 1376px;\r\n    height: auto;\r\n    background-color: #eee;\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n    white-space: pre-line; \r\n    text-align: left;\r\n    }\r\n    .loading {\r\n        height: 1500px\r\n    }\r\n    .detail_container {\r\n        width: 100%;\r\n        height: auto;\r\n        justify-content: center;\r\n        text-align: left;\r\n        margin-top: 40px;\r\n    }\r\n    .detail_content {\r\n        min-height: 150px;\r\n        text-align: left;\r\n        padding: 16px 8px 0 12px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n        box-sizing: border-box;\r\n        background-color: rgba(109, 99, 228, 0.3);\r\n        font-size: 20px;\r\n        border-radius: 15px;\r\n    }\r\n`;"],"names":["axios","getProbContent","problemId","data","get","withCredentials","error","console","log","getProbTitle","res","postSubmitCode","request","response","post","code","status","isAxiosError","React","jsx","_jsx","jsxs","_jsxs","transferTime","time","replace","goBack","window","history","back","renderNewlines","text","split","map","line","index","Fragment","children","renderStyledNewlines","lines","default","useProbContent","useProbTitle","useSubmitCode","useState","useEffect","useCallback","problem","setProblem","fetchProblem","useSelector","useProbPage","title","textHandler","submitCode","detail","state","sign","isLogin","setTitle","fetchTitle","titleData","useRef","useNavigate","navigate","setDetail","newCode","current","alert","sessionStorage","setItem","toString","answer_id","message","Suspense","StyledProblem","Loading","_Fragment","CodeEditor","lazy","ProblemPage","url","URL","location","href","Number","pathname","renderProbUI","className","problemTitle","style","whiteSpace","problemContent","sampleInputs","input","sampleOutputs","output","fallback","onChange","readOnly","undefined","disabled","placeholder","onClick","confirm","styled","div","props"],"sourceRoot":""}