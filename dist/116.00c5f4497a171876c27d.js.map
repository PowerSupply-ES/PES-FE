{"version":3,"file":"116.00c5f4497a171876c27d.js","mappings":"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","sources":["webpack://pes-fe/./src/components/mypage/MemberFeed.tsx","webpack://pes-fe/./src/components/mypage/MemberInfo.tsx","webpack://pes-fe/./src/components/mypage/MemberProb.tsx","webpack://pes-fe/./src/components/mypage/MyFeed.tsx","webpack://pes-fe/./src/components/mypage/MyProb.tsx","webpack://pes-fe/./src/apis/manage/getUserDetail.ts","webpack://pes-fe/./src/hooks/manage/useUserDetail.ts","webpack://pes-fe/./src/pages/manage/userDetailPage.tsx","webpack://pes-fe/./src/apis/manage/fetchMem.ts","webpack://pes-fe/./src/apis/manage/deleteMem.ts"],"sourcesContent":["import React from 'react'\r\nimport MyFeed from \"./MyFeed\";\r\nimport { MyFeedProps } from 'model/userType';\r\n\r\n// 사용자 작성 피드백 목록 컴포넌트\r\nconst MemberFeed: React.FC<MyFeedProps> = ({myFeedback, navigate}) => {\r\n  return (\r\n    <div className=\"bottom\">\r\n      <div className=\"feed_top\">\r\n        <div className=\"mypage_btn\">my feedback</div>\r\n        <div className=\"feedNum\">{myFeedback.length}개</div>\r\n      </div>\r\n\r\n      <div className=\"myFeedback\">\r\n        <MyFeed myFeedback={myFeedback} navigate={navigate}></MyFeed>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MemberFeed\r\n","import React from \"react\";\r\nimport { FaCircleUser } from \"react-icons/fa6\";\r\nimport { MemberInfoProps } from \"model/userType\";\r\nimport \"styles/css/mypage.css\";\r\nimport \"styles/css/manage.css\";\r\n\r\n// 사용자 정보 컴포넌트\r\nconst MemberInfo: React.FC<MemberInfoProps> = ({\r\n  memberName,\r\n  memberId,\r\n  memberEmail,\r\n  memberGen,\r\n  memberStatus,\r\n  memberMajor,\r\n  memberPhone\r\n}) => {\r\n  return (\r\n    <div className=\"left\">\r\n      {/* 사용자 정보 */}\r\n      <div className=\"memberInfo\">\r\n        <div className=\"info_name\">\r\n          <FaCircleUser size={40} style={{ color: \"grey\" }}></FaCircleUser>\r\n          <p>{memberName}</p>\r\n          {/* <p>님</p> */}\r\n        </div>\r\n        <div className=\"text\">\r\n          <div>학 번</div>\r\n          <p>{memberId}</p>\r\n        </div>\r\n        <div className=\"text\">\r\n          <div>이메일</div>\r\n          <p>{memberEmail}</p>\r\n        </div>\r\n        <div className=\"text\">\r\n          <div>기 수</div>\r\n          <p>{memberGen}</p>\r\n        </div>\r\n        <div className=\"text\">\r\n          <div>상 태</div>\r\n          <p>{memberStatus}</p>\r\n        </div>\r\n        <div className=\"text\">\r\n          <div>학 과</div>\r\n          <p>{memberMajor}</p>\r\n        </div>\r\n        <div className=\"text\">\r\n          <div>전화 번호</div>\r\n          <p>{memberPhone}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberInfo;\r\n","import React from 'react'\r\nimport MyProb from './MyProb'\r\nimport { MyProbProps } from 'model/userType'\r\n\r\n\r\n// 사용자 푼 문제 목록 컴포넌트\r\nconst MemberProb: React.FC<MyProbProps> = ({ myProb, navigate }) => {\r\n  return (\r\n    <div className=\"top\">\r\n      <div className=\"prob_top\">\r\n        <div className=\"mypage_btn\">내가 푼 문제</div>\r\n        <div className=\"probNum\">{myProb.length}개</div>\r\n      </div>\r\n\r\n      <div className=\"myProblem\">\r\n        <MyProb myProb={myProb} navigate={navigate}></MyProb>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MemberProb\r\n","import React from \"react\";\r\nimport { MyFeedProps } from \"model/userType\";\r\n\r\n// 내 피드백 컴포넌트\r\nconst MyFeed: React.FC<MyFeedProps> = ({ myFeedback, navigate }) => {\r\n  const gotoFeed = (problemId: number) => {\r\n    navigate(`/question/${problemId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"FeedList\">\r\n      {myFeedback.length === 0 ? (\r\n        <div className=\"noFeed\">아직 남긴 피드백이 없어요!</div>\r\n      ) : (\r\n        myFeedback.map((it) => (\r\n          <div className=\"feeds\" key={it.answerId}>\r\n            <p className=\"problemId\">{it.answerId}</p>\r\n\r\n            <p className=\"memberGenName\">\r\n              {it.memberGen}기&nbsp;\r\n              {it.memberName}\r\n            </p>\r\n\r\n            <p className=\"commentContent\" onClick={() => gotoFeed(it.answerId)}>\r\n              {it.commentContent}\r\n            </p>\r\n\r\n            <div\r\n              className={`${\r\n                it.commentPassFail === 1\r\n                  ? \"btn_success\"\r\n                  : it.commentPassFail === 0\r\n                  ? \"btn_fail\"\r\n                  : \"btn_state\"\r\n              }`}\r\n            >\r\n              {it.commentPassFail === 1\r\n                ? \"success\"\r\n                : it.commentPassFail === 0\r\n                ? \"fail\"\r\n                : it.commentPassFail}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyFeed;\r\n","import React from \"react\";\r\nimport { MyProbProps } from \"model/userType\";\r\n\r\n// 내가 푼 문제 컴포넌트\r\nconst MyProb: React.FC<MyProbProps> = ({ myProb, navigate }) => {\r\n  const gotoProb = (problemId: number) => {\r\n    navigate(`/question/${problemId}`);\r\n    // question/answerid\r\n  };\r\n\r\n  return (\r\n    <div className=\"problemList\">\r\n      {myProb.length === 0 ? (\r\n        <div className=\"noProblems\">아직 푼 문제가 없어요!</div>\r\n      ) : (\r\n        myProb.map((it) => (\r\n          <div className=\"problems\" key={it.answerId}>\r\n            <p className=\"problemId\">{it.problemId}</p>\r\n            <p className=\"problemTitle\" onClick={() => gotoProb(it.answerId)}>\r\n              {it.problemTitle}\r\n            </p>\r\n\r\n            <p className=\"finalScore\">{it.finalScore}점</p>\r\n            <p className=\"dash\">/</p>\r\n            <p className=\"problemScore\">{it.problemScore}점</p>\r\n\r\n            <div\r\n              className={`${\r\n                it.answerState === \"success\"\r\n                  ? \"btn_success\"\r\n                  : it.answerState === \"fail\"\r\n                  ? \"btn_fail\"\r\n                  : \"btn_state\"\r\n              }`}\r\n            >\r\n              {it.answerState === \"question\"\r\n                ? \"질문대기\"\r\n                : it.answerState === \"comment\"\r\n                ? \"피드백대기\"\r\n                : it.answerState}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProb;\r\n","import axios from \"axios\";\r\nimport { SetUserDetail, UserDetail } from \"model/userType\";\r\n\r\n// 회원 상세 정보 get API\r\nconst getUserDetail = async (setMemberData: SetUserDetail): Promise<void> => {\r\n  let url = new URL(window.location.href);\r\n  let memberId = url.pathname.split(\"/\")[2];\r\n\r\n  const uri = `/api/admin/member/${memberId}`;\r\n\r\n  try {\r\n    const res = await axios.get<UserDetail>(uri);\r\n    const memDetail = res.data;\r\n\r\n    // `mySolveResponse`와 `myFeedbackResponse`가 없을 경우 기본값 설정\r\n    const userDetail: UserDetail = {\r\n      ...memDetail,\r\n      mySolveResponse: memDetail.mySolveResponse || [], // 기본값으로 빈 배열\r\n      myFeedbackResponse: memDetail.myFeedbackResponse || [], // 기본값으로 빈 배열\r\n    };\r\n\r\n    setMemberData(userDetail);\r\n  } catch (error: unknown) {\r\n    console.error(error);\r\n  }\r\n  // TODO : 예외처리하기\r\n};\r\nexport default getUserDetail;\r\n","import { useState, useEffect } from \"react\";\r\nimport getUserDetail from \"apis/manage/getUserDetail\";\r\nimport { UserDetail } from \"model/userType\"; \r\n\r\nconst useUserDetail = () => {\r\n  const [userData, setUserData] = useState<UserDetail | null>(null);\r\n\r\n  useEffect(() => {\r\n    getUserDetail(setUserData);\r\n  }, []);\r\n\r\n  // TODO : 회원수정, 회원삭제 로직 추가하기\r\n\r\n  return { userData };\r\n};\r\nexport default useUserDetail;\r\n","// 회원상세페이지\r\nimport React from \"react\";\r\nimport \"styles/css/manage.css\";\r\nimport useUserDetail from \"hooks/manage/useUserDetail\";\r\nimport MemberInfo from \"components/mypage/MemberInfo\";\r\nimport MemberProb from \"components/mypage/MemberProb\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MemberFeed from \"components/mypage/MemberFeed\";\r\nimport deleteMem from \"apis/manage/deleteMem\";\r\nimport fetchMem from \"apis/manage/fetchMem\";\r\nimport Loading from \"components/common/Loading\";\r\n\r\n\r\nconst UserDetail: React.FC = () => {\r\n  const { userData } = useUserDetail();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    // TODO: 템플릿 적용 \r\n    <div className=\"content_container\">\r\n      {/* 본문 */}\r\n      <div className=\"manageuser_container\">\r\n\r\n        {/* 유저 정보 */}\r\n        <div className=\"userlist_wrapper\">\r\n          {/* <div className=\"list_container\"> */}\r\n\r\n          {!userData ? (\r\n            <Loading/>\r\n          ) : (\r\n            <div className=\"mypage_content\">\r\n\r\n              {/* 좌측 컴포넌트 - 유저 정보 */}\r\n              <div className=\"userinfo_container\">\r\n                <MemberInfo\r\n                  memberName={userData.memberName}\r\n                  memberId={userData.memberId}\r\n                  memberEmail={userData.memberEmail}\r\n                  memberGen={userData.memberGen}\r\n                  memberStatus={userData.memberStatus}\r\n                  memberMajor={userData.memberMajor}\r\n                  memberPhone={userData.memberPhone}\r\n                />\r\n                <div className=\"manage_btn_container\">\r\n                  {/* TODO : 추후 필요시 추가 */}\r\n                  {/* <button className=\"btn_editmem\">회원 수정</button> */}\r\n                  <button className=\"levelup_btn\" onClick={() => fetchMem(navigate, userData.memberStatus)}>등급변경</button>\r\n                  <button className=\"btn_deletemem\" onClick={() => deleteMem(navigate)}>회원 삭제</button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 우측 컴포넌트 */}\r\n              <div className=\"right\">\r\n                {/* 내가 푼 문제 */}\r\n                <MemberProb myProb={userData.mySolveResponse} navigate={navigate}/>\r\n\r\n                {/* 내 피드백 */}\r\n                <MemberFeed myFeedback={userData.myFeedbackResponse} navigate={navigate}/>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDetail;\r\n","import axios from \"axios\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\n\r\n// 회원 등업 update API\r\nconst fetchMem = async (\r\n  navigate: NavigateFunction,\r\n  memberStatus: string\r\n): Promise<void> => {\r\n  let url = new URL(window.location.href);\r\n  let memberId = url.pathname.split(\"/\")[2];\r\n\r\n  const uri = `/api/admin/member/${memberId}`;\r\n\r\n  // 관리자 vs 재학생 vs 관리자 중 선택하기\r\n  const levelUpLevel =\r\n    memberStatus === \"신입생\"\r\n      ? \"재학생\"\r\n      : memberStatus === \"재학생\"\r\n      ? \"관리자\"\r\n      : memberStatus === \"관리자\"\r\n      ? \"재학생\"\r\n      : \"\";\r\n  const confirmDelete = window.confirm(\r\n    `해당 회원을 ${levelUpLevel} 등급으로 변경하시겠습니까?`\r\n  );\r\n\r\n  // 수정 취소 시\r\n  if (!confirmDelete) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const res = await axios.put(uri, {\r\n      memberStatus: `${levelUpLevel}`,\r\n    });\r\n\r\n    // 성공 시\r\n    if (res.status === 200) {\r\n      alert(\"회원등급이 성공적으로 변경되었습니다.\");\r\n      navigate(\"/manageUser\");\r\n    } else {\r\n      alert(\"회원등급 변경에 실패했습니다. 다시 시도해 주세요1.\");\r\n    }\r\n  } catch (error: unknown) {\r\n    // axios에러 && response있는 경우\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      const statusCode = error.response.status;\r\n\r\n      // 403: 권한 없음 (관리자가 아님)\r\n      if (statusCode === 403) {\r\n        alert(\"권한이 없습니다. 관리자 계정으로 로그인 해주세요.\");\r\n      }\r\n      // 404: 해당 memberId가 없음\r\n      else if (statusCode === 404) {\r\n        alert(\"해당 회원을 찾을 수 없습니다. memberId를 확인해 주세요.\");\r\n      }\r\n      // 그 외 서버 오류\r\n      else {\r\n        alert(\"서버오류가 발생했습니다.\");\r\n      }\r\n    } else {\r\n      // 서버 응답이 없거나 다른 문제가 발생한 경우\r\n      console.error(error);\r\n      alert(\"네트워크 오류가 발생했습니다. 다시 시도해 주세요.\");\r\n    }\r\n  }\r\n};\r\n\r\nexport default fetchMem;\r\n","import axios from \"axios\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\n\r\n// 회원 delete API\r\nconst deleteMem = async (navigate: NavigateFunction): Promise<void> => {\r\n  let url = new URL(window.location.href);\r\n  let memberId = url.pathname.split(\"/\")[2];\r\n\r\n  const uri = `/api/admin/member/${memberId}`;\r\n\r\n  const confirmDelete = window.confirm(\"정말 해당 회원을 삭제하시겠습니까?\");\r\n\r\n  // 삭제 취소 시\r\n  if (!confirmDelete) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const res = await axios.delete(uri);\r\n\r\n    // 성공 시\r\n    if (res.status === 200) {\r\n      alert(\"회원이 성공적으로 삭제되었습니다.\");\r\n      navigate(\"/manageUser\"); // 삭제 후 목록 페이지로 이동\r\n    }\r\n  } catch (error: unknown) {\r\n    // axios에러 && response있는 경우\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      const statusCode = error.response.status;\r\n\r\n      // 403: 권한 없음 (관리자가 아님)\r\n      if (statusCode === 403) {\r\n        alert(\"권한이 없습니다. 관리자 계정으로 로그인 해주세요.\");\r\n      }\r\n      // 404: 해당 memberId가 없음\r\n      else if (statusCode === 404) {\r\n        alert(\"해당 회원을 찾을 수 없습니다. memberId를 확인해 주세요.\");\r\n      }\r\n      // 그 외 서버 오류\r\n      else {\r\n        alert(\"회원 삭제에 실패했습니다. 다시 시도해 주세요.\");\r\n      }\r\n    } else {\r\n      // 서버 응답이 없거나 다른 문제가 발생한 경우\r\n      console.error(error);\r\n      alert(\"네트워크 오류가 발생했습니다. 다시 시도해 주세요.\");\r\n    }\r\n  }\r\n};\r\n\r\nexport default deleteMem;\r\n"],"names":["_ref","myFeedback","navigate","_jsxs","className","children","_jsx","length","MyFeed","memberName","memberId","memberEmail","memberGen","memberStatus","memberMajor","memberPhone","FaCircleUser","size","style","color","myProb","MyProb","map","it","answerId","onClick","gotoFeed","problemId","commentContent","commentPassFail","gotoProb","problemTitle","finalScore","problemScore","answerState","useUserDetail","userData","setUserData","useState","useEffect","async","uri","URL","window","location","href","pathname","split","memDetail","axios","data","setMemberData","mySolveResponse","myFeedbackResponse","error","console","getUserDetail","UserDetail","useNavigate","MemberInfo","levelUpLevel","confirm","status","alert","response","statusCode","fetchMem","deleteMem","MemberProb","MemberFeed","Loading"],"sourceRoot":""}