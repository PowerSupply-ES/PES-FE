{"version":3,"file":"src_pages_sign_signUpPage_tsx.15bddb2e76934414872f.js","mappings":"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","sources":["webpack://pes-fe/./src/apis/sign/postSignup.ts","webpack://pes-fe/./src/components/sign/Copyright.tsx","webpack://pes-fe/./src/components/sign/SignupTemp.tsx","webpack://pes-fe/./src/hooks/sign/useSignup.ts","webpack://pes-fe/./src/pages/sign/signUpPage.tsx","webpack://pes-fe/./src/styles/css/intro.css?e8a4"],"sourcesContent":["import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { SignupFormData, SignupResponseData } from \"model/userType\";\r\n\r\n\r\nconst postSignup = async (\r\n  formData: SignupFormData,\r\n  isEmailValid: (email: string) => boolean\r\n): Promise<SignupResponseData | void> => {\r\n  // 이메일 형식이 유효한지 체크\r\n  if (!isEmailValid(formData.memberEmail)) {\r\n    alert(\"이메일 형식이 아닙니다\");\r\n    return;\r\n  }\r\n\r\n  // 이름이 문자로만 입력되었는지 체크\r\n  if (!/^[a-zA-Z가-힣]+$/.test(formData.memberName)) {\r\n    alert(\"이름은 문자로 입력해주세요\");\r\n    return;\r\n  }\r\n  // TODO : 전화번호 형식이 맞는지 체크\r\n  // TODO : 아이디가 숫자로만 입력되었는지 체크\r\n\r\n  const uri = \"api/signup\";\r\n\r\n  // 회원가입 요청 api\r\n  try {\r\n    const res: AxiosResponse<SignupResponseData> = await axios.post(uri, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error: unknown) {\r\n    if (axios.isAxiosError(error)) {\r\n      // AxiosError인 경우\r\n      const axiosError = error as AxiosError;\r\n      if (axiosError.response) {\r\n        if (axiosError.response.status === 400) {\r\n          throw new Error(\"이미 사용 중인 이메일입니다.\");\r\n        }\r\n        throw new Error(`${axiosError.response.status} ${axiosError.response.statusText}`);\r\n      }\r\n    }\r\n    // AxiosError가 아닌 경우\r\n    throw new Error(\"네트워크 오류가 발생했습니다\");\r\n  }\r\n};\r\n\r\nexport default postSignup;\r\n","import { CopyrightProps } from \"model/userType\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\n\r\n// 하단 copyright\r\nconst Copyright: React.FC<CopyrightProps> = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Goto HOME © \"}\r\n      <Link color=\"inherit\" href=\"https://pes23.com/\">\r\n        pes23.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","// MUI이용 회원가입 form\r\nimport React from \"react\";\r\nimport logo from \"assets/images/sign_logo.webp\";\r\nimport Copyright from \"./Copyright\";\r\nimport useSignup from \"hooks/sign/useSignup\";\r\n// import InputMask from \"react-input-mask\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nconst SignupTemp: React.FC = () => {\r\n  const { formData, handleSubmit, handleInputChange } = useSignup();\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, width: 56, height: 56 }} src={logo} />\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  value={formData.memberName}\r\n                  id=\"memberName\"\r\n                  label=\"이름\"\r\n                  name=\"memberName\"\r\n                  autoComplete=\"memberName\"\r\n                  fullWidth\r\n                  required\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"이름을 입력해주세요\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  value={formData.memberEmail}\r\n                  type=\"email\"\r\n                  id=\"memberEmail\"\r\n                  label=\"이메일\"\r\n                  name=\"memberEmail\"\r\n                  autoComplete=\"memberEmail\"\r\n                  fullWidth\r\n                  required\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"이메일을 입력해주세요(@형식)\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  value={formData.memberId}\r\n                  id=\"memberId\"\r\n                  label=\"아이디(학번)\"\r\n                  name=\"memberId\"\r\n                  autoComplete=\"memberId\"\r\n                  fullWidth\r\n                  required\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"학번을 입력해주세요\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  value={formData.memberPw}\r\n                  type=\"password\"\r\n                  id=\"memberPw\"\r\n                  label=\"비밀번호\"\r\n                  name=\"memberPw\"\r\n                  autoComplete=\"memberPw\"\r\n                  fullWidth\r\n                  required\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"비밀번호를 입력해주세요\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                {/* 전화번호 형식 지정 - 호환성 문제로 삭제*/}\r\n                {/* <InputMask\r\n                  mask=\"010-9999-9999\"\r\n                  value={formData.memberPhone}\r\n                  onChange={handleInputChange}\r\n                > \r\n                  {(inputProps) => (\r\n                    <TextField\r\n                      {...inputProps}\r\n                      label=\"전화번호\"\r\n                      name=\"memberPhone\"\r\n                      autoComplete=\"tel\"\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  )}\r\n                </InputMask>\r\n                */}\r\n                <TextField\r\n                value={formData.memberPhone}\r\n                id=\"memberPhone\"\r\n                label=\"전화번호\"\r\n                name=\"memberPhone\"\r\n                autoComplete=\"tel\"\r\n                fullWidth\r\n                required\r\n                onChange={handleInputChange}\r\n                placeholder=\"전화번호를 입력해주세요\"\r\n              />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  value={formData.memberGen}\r\n                  id=\"memberGen\"\r\n                  label=\"기수\"\r\n                  name=\"memberGen\"\r\n                  autoComplete=\"memberGen\"\r\n                  fullWidth\r\n                  required\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"24년 기준 35기\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  value={formData.memberMajor}\r\n                  id=\"memberMajor\"\r\n                  label=\"학과\"\r\n                  name=\"memberMajor\"\r\n                  autoComplete=\"memberMajor\"\r\n                  required\r\n                  fullWidth\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"ex)ㅇㅇ학과\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signin\" variant=\"body2\">\r\n                  아이디가 있나요? 로그인\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SignupTemp;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport postSignup from \"apis/sign/postSignup\";\r\nimport { SignupFormData } from \"model/userType\";\r\n\r\n// 회원가입 관련 HOOK\r\nconst useSignup = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState<SignupFormData>({\r\n    memberId: \"\",\r\n    memberEmail: \"\",\r\n    memberPw: \"\",\r\n    memberName: \"\",\r\n    memberGen: 0,\r\n    memberMajor: \"\",\r\n    memberPhone: \"\",\r\n  });\r\n\r\n  // 이메일 형식 검사\r\n  const isEmailValid = (email: string) => {\r\n    // 이메일이 .net 또는 .com 으로 끝나는지 확인\r\n    // some() : 하나라도 일치하면 true반환\r\n    const validEndings = [\".net\", \".com\"];\r\n    const hasValidEnding = validEndings.some((ending) => \r\n      email.endsWith(ending)\r\n    );\r\n\r\n    return hasValidEnding;\r\n  };\r\n\r\n  // 회원가입 폼이 제출될 때 호출\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();  // 기본 제출 동작 막기\r\n\r\n    try {\r\n      const responseData = await postSignup(formData, isEmailValid);\r\n      \r\n      // responseData가 undefined 아닌지 확인\r\n      if (responseData && responseData.message) {\r\n        const resultMessage = responseData.message;\r\n        alert(resultMessage);\r\n        navigate(\"/signin\");\r\n      }\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        alert(error.message);\r\n      } else {\r\n        alert(\"알 수 없는 오류가 발생했습니다.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //입력필드 값 변경될때마다 호출\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({\r\n      // formData복사, 변경된 필드만 업데이트\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { formData, handleSubmit, handleInputChange };\r\n};\r\nexport default useSignup;\r\n","import React from \"react\";\r\nimport \"styles/css/intro.css\";\r\nimport SignupTemp from \"components/sign/SignupTemp\";\r\n\r\nconst Signup: React.FC = () => {\r\n  return (\r\n    <div className=\"sign-wrapper2\">\r\n      <SignupTemp />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["axios","postSignup","formData","isEmailValid","memberEmail","alert","test","memberName","uri","res","post","headers","data","error","isAxiosError","axiosError","response","status","Error","statusText","Typography","Link","jsx","_jsx","jsxs","_jsxs","Copyright","props","variant","color","align","children","href","Date","getFullYear","React","logo","useSignup","Avatar","Button","CssBaseline","TextField","Grid","Box","Container","createTheme","ThemeProvider","defaultTheme","SignupTemp","handleSubmit","handleInputChange","theme","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","width","height","src","noValidate","onSubmit","mt","container","spacing","item","xs","value","id","label","name","autoComplete","fullWidth","required","onChange","placeholder","autoFocus","type","memberId","memberPw","memberPhone","sm","memberGen","memberMajor","mb","justifyContent","useState","useNavigate","navigate","setFormData","email","validEndings","hasValidEnding","some","ending","endsWith","e","preventDefault","responseData","message","resultMessage","target","Signup","className"],"sourceRoot":""}