{"version":3,"file":"src_pages_solution_solutionPage_tsx.80eb57ce1713ec467a6f.js","mappings":"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","sources":["webpack://pes-fe/./src/apis/problem/getProbTitle.ts","webpack://pes-fe/./src/apis/solution/getSoluList.ts","webpack://pes-fe/./src/components/solution/SolvingList.tsx","webpack://pes-fe/./src/hooks/solution/index.ts","webpack://pes-fe/./src/hooks/solution/useSoluList.ts","webpack://pes-fe/./src/hooks/solution/useSoluProb.ts","webpack://pes-fe/./src/pages/solution/solutionPage.tsx","webpack://pes-fe/./src/styles/css/solution.css?0bd1"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// 문제 제목 get 요청\r\nconst getProbTitle = async (problemId: number) => {\r\n  try {\r\n    const res = await axios.get(`/api2/problemtitle/${problemId}`, {\r\n      withCredentials: true,\r\n    });\r\n    return res.data;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"problemId:\", problemId);\r\n};\r\n\r\nexport default getProbTitle;\r\n","import axios from \"axios\";\r\nimport { SolutionList } from \"model/userType\";\r\n\r\n// 풀이 get API\r\nconst getSoluList = async (problemId: number): Promise<SolutionList[]> => {\r\n  const uri = \"/api/answerlist/\";\r\n\r\n  try {\r\n    const response = await axios.get<SolutionList[]>(`${uri}${problemId}`);\r\n    console.log(\"서버응답:\", response.data);\r\n    return response.data;\r\n  } catch (error: unknown) {\r\n    console.error(\"데이터 가져오기 실패:\", error);\r\n    return []; // 오류 발생 시 빈 배열 반환\r\n  }\r\n};\r\n\r\nexport default getSoluList;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SolvingListProps } from \"model/userType\";\r\n\r\n\r\n// 풀이list 컴포넌트\r\nconst SolvingList: React.FC<SolvingListProps> = ({ solveData }) => {\r\n  const navigate = useNavigate();\r\n\r\n  // 해당 풀이로 이동\r\n  const gotoProblem = (answerId : number) => {\r\n    console.log(\"answerId: \", answerId);\r\n    navigate(`/question/${answerId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"solving_list\">\r\n      {solveData.map(\r\n        (it) =>\r\n          // answerState가 \"question\"과 일치하지 않을 때에만 렌더링( 수정: answerId -> answerState )\r\n          it.answerState !== \"question\" && (\r\n            <div className=\"solving\" key={it.answerId}>\r\n              {/* 풀이컴포넌트 좌측 요소 */}\r\n              <div className=\"left\">\r\n                <div className=\"userGen\">\r\n                  {it.memberGen}\r\n                  <p>기 </p>\r\n                </div>\r\n                <div className=\"userName\">{it.memberName}</div>\r\n              </div>\r\n\r\n              {/* 풀이컴포넌트 우측 요소 */}\r\n              <div className=\"right\">\r\n                <div className=\"process_num\">{it.commentCount}/2</div>\r\n                <div\r\n                  className={`${\r\n                    it.answerState === \"success\"\r\n                      ? \"btn_success\"\r\n                      : it.answerState === \"fail\"\r\n                      ? \"btn_fail\"\r\n                      : \"btn_state\"\r\n                  }`}\r\n                >\r\n                  {it.answerState}\r\n                </div>\r\n\r\n                <button\r\n                  className=\"btn_goto_challenge\"\r\n                  onClick={() => gotoProblem(it.answerId)}\r\n                >\r\n                  풀이보기\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SolvingList;\r\n","// hooks/solution 디렉토리 export 관리\r\nexport { default as useSoluList } from './useSoluList';\r\nexport { default as useSoluProb } from './useSoluProb';","import { useState, useEffect, useCallback } from \"react\";\r\nimport { SolutionList } from \"model/userType\";\r\nimport getSoluList from \"apis/solution/getSoluList\";\r\n\r\n// 풀이 get HOOk\r\nconst useSoluList = (problemId: number): SolutionList[] => {\r\n  const [solveData, setSolveData] = useState<SolutionList[]>([]);\r\n\r\n  // 풀이 get API\r\n  const sendGetSolve = useCallback(async () => {\r\n    try {\r\n      const res = await getSoluList(problemId);\r\n      setSolveData(res);\r\n    } catch (error: unknown) {\r\n      console.error(\"데이터 가져오기 실패:\", error);\r\n    }\r\n  }, [problemId]);\r\n\r\n  useEffect(() => {\r\n    sendGetSolve();\r\n  }, [sendGetSolve]);\r\n\r\n  return solveData;\r\n};\r\n\r\nexport default useSoluList;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport getProbTitle from \"apis/problem/getProbTitle\";\r\nimport { SoluProb } from \"model/problemType\"; \r\n// 문제제목 get HOOk\r\nconst useSoluProb = (problemId: number): SoluProb | undefined => {\r\n  const [problemData, setProblemData] = useState<SoluProb | undefined>(undefined);\r\n\r\n  // 문제제목 get API\r\n  const sendGetProblem = useCallback(async () => {\r\n    try {\r\n      const res = await getProbTitle(problemId);\r\n      setProblemData(res);\r\n    } catch (error) {\r\n      // TODO : 예외처리 자세히\r\n      console.error(\"데이터 가져오기 실패:\", error);\r\n    }\r\n  }, [problemId]);\r\n\r\n  useEffect(() => {\r\n    sendGetProblem();\r\n  }, [sendGetProblem]);\r\n\r\n  return problemData;\r\n};\r\n\r\nexport default useSoluProb;\r\n","import \"styles/css/solution.css\";\r\nimport SolvingList from \"components/solution/SolvingList\";\r\nimport {useSoluProb, useSoluList} from \"hooks/solution\";\r\nimport Loading from \"components/common/Loading\";\r\n\r\nconst SolutionPage = () => {\r\n  // TODO : split한 problemId와 solveData.problemId 구분하기\r\n  let url = new URL(window.location.href);\r\n  let problemId = (url.pathname.split(\"/\")[2]);\r\n  sessionStorage.setItem(\"problemId\", problemId);\r\n\r\n  // 인수 전달을 위한 problem 타입 가공\r\n  const problemIdParsed = Number(problemId);\r\n  // 문제 get API HOOk\r\n  const problemData = useSoluProb(problemIdParsed);\r\n  // 풀이 get API HOOk\r\n  const solveData = useSoluList(problemIdParsed);\r\n\r\n  // 조건부 렌더링\r\n  if (!problemData || !solveData.length) {\r\n    return <Loading/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"solution_container\">\r\n      <div className=\"solution_bar\">\r\n        <div className=\"solution\">\r\n          <div className=\"left\">\r\n            <div className=\"solution_num\">{problemData.problemId}</div>\r\n            <div className=\"solution_title\">{problemData.problemTitle}</div>\r\n          </div>\r\n\r\n          <div className=\"prob_score\">\r\n            {problemData.problemScore}\r\n            <p>점</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pass_num\"></div>\r\n\r\n      {/* 풀이 list */}\r\n      <SolvingList solveData={solveData}></SolvingList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SolutionPage;\r\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["axios","getProbTitle","problemId","res","get","withCredentials","data","error","console","log","getSoluList","uri","response","React","useNavigate","jsx","_jsx","jsxs","_jsxs","SolvingList","_ref","solveData","navigate","gotoProblem","answerId","className","children","map","it","answerState","memberGen","memberName","commentCount","onClick","default","useSoluList","useSoluProb","useState","useEffect","useCallback","setSolveData","sendGetSolve","problemData","setProblemData","undefined","sendGetProblem","Loading","SolutionPage","url","URL","window","location","href","pathname","split","sessionStorage","setItem","problemIdParsed","Number","length","problemTitle","problemScore"],"sourceRoot":""}