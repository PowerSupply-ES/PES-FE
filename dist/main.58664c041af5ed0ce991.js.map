{"version":3,"file":"main.58664c041af5ed0ce991.js","mappings":"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","sources":["webpack://pes-fe/./src/apis/common/postLogout.ts","webpack://pes-fe/./src/components/common/Loading.tsx","webpack://pes-fe/./src/components/manage/UserList.tsx","webpack://pes-fe/./src/components/manage/MenuContent.tsx","webpack://pes-fe/./src/components/manage/OptionsMenu.tsx","webpack://pes-fe/./src/components/manage/MenuButton.tsx","webpack://pes-fe/./src/components/header/MenuBar.tsx","webpack://pes-fe/./src/hooks/menu/useMenu.ts","webpack://pes-fe/./src/components/header/HeaderForAny.tsx","webpack://pes-fe/./src/components/header/HeaderForUser.tsx","webpack://pes-fe/./src/apis/navbar/getUserInfo.ts","webpack://pes-fe/./src/components/footer/Footer.tsx","webpack://pes-fe/./src/components/header/Header.tsx","webpack://pes-fe/./src/components/manage/SideMenu.tsx","webpack://pes-fe/./src/components/manage/TemplateFrame.tsx","webpack://pes-fe/./src/components/manage/ManageMenu.tsx","webpack://pes-fe/./src/components/common/AdminRoute.tsx","webpack://pes-fe/./src/App.tsx","webpack://pes-fe/./src/stores/reducers/userReducer.ts","webpack://pes-fe/./src/stores/store.ts","webpack://pes-fe/./src/index.tsx","webpack://pes-fe/./src/stores/actions/userAction.ts","webpack://pes-fe/external var \"React\"","webpack://pes-fe/external var \"ReactDOM\"","webpack://pes-fe/external var \"axios\""],"sourcesContent":["import axios from \"axios\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutAction } from \"stores/actions/userAction\"; // logout 액션 추가\r\nimport { Dispatch } from \"redux\";\r\n\r\n//로그아웃 api호출 함수\r\nconst postLogout = async (\r\n  navigate: NavigateFunction,\r\n  dispatch: Dispatch\r\n): Promise<void> => {\r\n  const uri = \"/api/logout\";\r\n  console.log(\"logout!!\");\r\n\r\n  try {\r\n    const response = await axios.post(uri, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    dispatch(logoutAction()); // 로그인 액션 디스패치\r\n\r\n    // 로컬 스토리지 클리어\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    alert(response.data.message);\r\n\r\n    navigate(\"/\");\r\n    window.location.reload(); // 페이지 새로 고침\r\n  } catch (error: unknown) {\r\n    // axios 에러인 경우\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        // 서버가 응답을 반환했지만 오류 상태 코드\r\n        console.error(\r\n          \"로그아웃 실패:\",\r\n          error.response.status,\r\n          error.response.statusText\r\n        );\r\n        alert(`로그아웃 실패: 서버 응답 에러 (${error.response.status})`);\r\n        navigate(\"/\");\r\n      } else if (error.request) {\r\n        // 요청이 서버로 전송되었지만 응답을 받지 못한 경우\r\n        console.error(\"로그아웃 실패: 요청이 실패했습니다.\");\r\n        alert(\"로그아웃 실패: 서버 응답 없음.\");\r\n      } else {\r\n        // 요청 설정 중 오류 발생\r\n        console.error(\"로그아웃 실패:\", error.message);\r\n        alert(\"로그아웃 실패: 요청 설정 에러.\");\r\n      }\r\n    } else {\r\n      // axios 외의 다른 일반적인 에러 처리\r\n      console.error(\"로그아웃 실패 (일반 에러):\", (error as Error).message);\r\n      alert(\"로그아웃 실패: 알 수 없는 오류가 발생했습니다.\");\r\n    }\r\n  }\r\n};\r\n\r\nexport default postLogout;\r\n","// 로딩 페이지\r\nimport {FadeLoader} from 'react-spinners';\r\nimport styled from \"styled-components\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <LoadingPage>\r\n      <FadeLoader\r\n        color=\"#a1d2fa\"\r\n        cssOverride={{}}\r\n        height={15}\r\n        loading\r\n        margin={2}\r\n        radius={2}\r\n        speedMultiplier={1}\r\n        width={5}\r\n        />\r\n    </LoadingPage>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n\r\nconst LoadingPage = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  margin: auto;\r\n`;","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"styles/css/manage.css\";\r\nimport { UserListProps } from \"model/userType\";\r\n// 회원목록 컴포넌트\r\nconst UserList: React.FC<UserListProps> = ({ memberData }) => {\r\n  const navigate = useNavigate();\r\n\r\n  // 페이지 이동\r\n  const gotoDetail = (memberId: string) => {\r\n    sessionStorage.setItem(\"memberId\", memberId);\r\n    navigate(`/manageUser/${memberId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {memberData.map((mem) => (\r\n        <ul className=\"list_wrapper\" key={mem.memberId}>\r\n          {/* memberStatus에 따라 색상부여 */}\r\n          <li\r\n            className={\r\n              mem.memberStatus === \"신입생\"\r\n                ? \"title_state_new\"\r\n                : mem.memberStatus === \"재학생\"\r\n                ? \"title_state_old\"\r\n                : mem.memberStatus === \"관리자\"\r\n                ? \"title_state_manage\"\r\n                : \"\"\r\n            }\r\n          >\r\n            {mem.memberStatus}\r\n          </li>\r\n          <li className=\"title_name\">{mem.memberName}</li>\r\n          <li className=\"title_stunum\">{mem.memberId}</li>\r\n          <li className=\"title_studep\">{mem.memberMajor}</li>\r\n          <li className=\"title_none\">\r\n            <button\r\n              className=\"info_btn\"\r\n              onClick={() => gotoDetail(mem.memberId)}\r\n            >\r\n              정보\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","// 관리자 SideMenu 탭 MUI 컴포넌트\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Stack from '@mui/material/Stack';\r\nimport HomeRoundedIcon from '@mui/icons-material/HomeRounded';\r\nimport AnalyticsRoundedIcon from '@mui/icons-material/AnalyticsRounded';\r\nimport PeopleRoundedIcon from '@mui/icons-material/PeopleRounded';\r\nimport AssignmentRoundedIcon from '@mui/icons-material/AssignmentRounded';\r\nimport InfoRoundedIcon from '@mui/icons-material/InfoRounded';\r\n// import HelpRoundedIcon from '@mui/icons-material/HelpRounded';\r\n// import SettingsRoundedIcon from '@mui/icons-material/SettingsRounded';\r\n\r\n\r\n// 탭 메뉴 목록\r\nconst mainListItems = [\r\n  { text: '회원 관리', icon: <PeopleRoundedIcon />, path: '/manageUser'},\r\n  { text: '문제 관리', icon: <AssignmentRoundedIcon />, path: '/manageProb'},\r\n  { text: '피드백 관리', icon: <AnalyticsRoundedIcon />, path: '/manageFeed'},\r\n];\r\nconst secondaryListItems = [\r\n  { text: 'Home', icon: <HomeRoundedIcon />, path: '/'  },\r\n  // { text: 'Settings', icon: <SettingsRoundedIcon /> },\r\n  { text: 'About', icon: <InfoRoundedIcon /> }, // TODO : 경로 추가\r\n  //{ text: 'Info', icon: <HelpRoundedIcon /> },\r\n];\r\n\r\nexport default function MenuContent() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // TODO : 공통부분 컴포넌트로 제작\r\n  return (\r\n    <Stack sx={{ flexGrow: 1, p: 1, justifyContent: 'space-between' }}>\r\n      <List dense>\r\n        {mainListItems.map((item, index) => (\r\n          <ListItem key={index} disablePadding sx={{ display: 'block' }}>\r\n            <ListItemButton \r\n              selected={location.pathname === item.path} // 현재 경로와 메뉴 경로 비교\r\n              sx={{ \r\n                minHeight: 52,\r\n                px: 2, // 좌우 패딩\r\n                \r\n              }}\r\n              onClick={() => {\r\n                if (item.path) {\r\n                  navigate(item.path); // 경로가 있으면 해당 경로로 이동\r\n                }\r\n              }}>\r\n              \r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <List dense>\r\n        {secondaryListItems.map((item, index) => (\r\n          <ListItem key={index} disablePadding sx={{ display: 'block' }}>\r\n            <ListItemButton\r\n              selected={location.pathname === item.path}\r\n              sx={{ \r\n                minHeight: 52,\r\n                px: 2,\r\n                \r\n              }}\r\n              onClick={() => {\r\n                if (item.path) {\r\n                  navigate(item.path);\r\n                }\r\n              }}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Stack>\r\n  );\r\n}","// 관리자 SideMenu 하단 옵션 컴포넌트\r\nimport { MouseEvent, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport postLogout from 'apis/common/postLogout';\r\nimport {MenuButton} from './index';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Divider, { dividerClasses } from '@mui/material/Divider';\r\nimport Menu from '@mui/material/Menu';\r\nimport MuiMenuItem from '@mui/material/MenuItem';\r\nimport { paperClasses } from '@mui/material/Paper';\r\nimport { listClasses } from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon, { listItemIconClasses } from '@mui/material/ListItemIcon';\r\nimport LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\nimport MoreVertRoundedIcon from '@mui/icons-material/MoreVertRounded';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MenuItem = styled(MuiMenuItem)({\r\n  margin: '2px 0',\r\n});\r\n\r\nexport default function OptionsMenu() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <MenuButton\r\n        aria-label=\"Open menu\"\r\n        onClick={handleClick}\r\n        sx={{ borderColor: 'transparent' }}\r\n      >\r\n        <MoreVertRoundedIcon />\r\n      </MenuButton>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        id=\"menu\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        onClick={handleClose}\r\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        sx={{\r\n          [`& .${listClasses.root}`]: {\r\n            padding: '4px',\r\n          },\r\n          [`& .${paperClasses.root}`]: {\r\n            padding: 0,\r\n          },\r\n          [`& .${dividerClasses.root}`]: {\r\n            margin: '4px -4px',\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleClose}>Add another account</MenuItem>\r\n        {/* <MenuItem onClick={handleClose}>Settings</MenuItem> */}\r\n        <Divider />\r\n        <MenuItem\r\n          // 로그아웃\r\n          onClick={() => postLogout(navigate, dispatch)}\r\n          sx={{\r\n            [`& .${listItemIconClasses.root}`]: {\r\n              ml: 'auto',\r\n              minWidth: 0,\r\n            },\r\n          }}\r\n          >\r\n          <ListItemText >Logout</ListItemText>\r\n          <ListItemIcon>\r\n            <LogoutRoundedIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}","// 관리자 버튼 클릭 MUI 컴포넌트\r\nimport Badge, { badgeClasses } from '@mui/material/Badge';\r\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\r\n\r\nexport interface MenuButtonProps extends IconButtonProps {\r\n  showBadge?: boolean;\r\n}\r\n\r\nexport default function MenuButton({\r\n  showBadge = false,\r\n  ...props\r\n}: MenuButtonProps) {\r\n  return (\r\n    <Badge\r\n      color=\"error\"\r\n      variant=\"dot\"\r\n      invisible={!showBadge}\r\n      sx={{ [`& .${badgeClasses.badge}`]: { right: 2, top: 2 } }}\r\n    >\r\n      <IconButton size=\"small\" {...props} />\r\n    </Badge>\r\n  );\r\n}","import React from \"react\";\r\nimport useMenu from \"hooks/menu/useMenu\";\r\nimport { CssBaseline, Box, Tabs, Tab, createTheme, ThemeProvider } from \"@mui/material\";\r\n\r\n// MUI 테마 생성\r\nconst theme = createTheme();\r\n\r\nconst MenuBar: React.FC = () => {\r\n  // 훅 사용\r\n  const { index, toggleTab } = useMenu();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Box sx={{ flexGrow: 1, mt: 2, overflow: \"hidden\" }}>\r\n        <Tabs\r\n          aria-label=\"Pipeline\"\r\n          value={index}\r\n          onChange={(event, value) => {\r\n            // value가 string | number | null이므로, 10진수로 변환\r\n            if (value !== undefined && value !== null) {\r\n              const numericValue =\r\n                typeof value === \"number\" ? value : parseInt(value, 10);\r\n              // number타입일때 탭이동\r\n              if (!isNaN(numericValue)) {\r\n                toggleTab(numericValue);\r\n              }\r\n            }\r\n          }}\r\n          sx={{ display: 'flex', justifyContent: 'flex-start', pt: 1 }}\r\n        >\r\n          <Tab label=\"문제\" value={1} sx={getTabStyle(index, 1)} />\r\n          <Tab label=\"공지사항\" value={2} sx={getTabStyle(index, 2)} />\r\n        </Tabs>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n// Tab의 스타일 설정 함수\r\nconst getTabStyle = (currentIndex: number | false, tabIndex: number) => ({\r\n  flex: 'initial',\r\n  fontSize: '26px',\r\n  color: currentIndex === tabIndex ? 'primary.main' : 'inherit',\r\n  '&::after': {\r\n    content: '\"\"',\r\n    display: currentIndex === tabIndex ? 'block' : 'none',\r\n    height: '2.5px',\r\n    borderTopLeftRadius: '3px',\r\n    borderTopRightRadius: '3px',\r\n    backgroundColor: 'primary.main',\r\n    marginTop: '8px',\r\n  },\r\n});\r\n\r\nexport default MenuBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\n// 메뉴바 페이지 이동 HOOK\r\nconst useMenu = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [index, setIndex] = useState<number | false>(false); // 탭 value값\r\n\r\n  // 탭 이동\r\n  const toggleTab = (value: number) => {\r\n    setIndex(value);\r\n\r\n    if (value === 1) {\r\n      navigate(\"/list\");\r\n    } else if (value === 2) {\r\n      navigate(\"/notice\");\r\n    }\r\n  };\r\n\r\n  // 탭 이동 훅\r\n  useEffect(() => {\r\n    // 경로가 '/'일 때 아무 탭도 선택되지 않도록 설정\r\n    if (location.pathname === \"/\") {\r\n      setIndex(false);\r\n    } else if (location.pathname === \"/list\") {\r\n      setIndex(1);\r\n    } else if (location.pathname === \"/notice\") {\r\n      setIndex(2);\r\n    } else {\r\n      setIndex(false); // 기타 경로일 경우 기본값으로 설정\r\n    }\r\n  }, [location.pathname, index]);\r\n\r\n  return { index, toggleTab };\r\n};\r\n\r\nexport default useMenu;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MenuBar from \"components/header/MenuBar\";\r\n\r\n// 로그인x 경우 넷바\r\nconst HeaderForAny: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <a className=\"logout\" href=\"/signin\"  style={{ textDecoration: 'none', color: '#555555' }}>\r\n        로그인\r\n      </a>\r\n\r\n      <div className=\"navbar\">\r\n        <p className=\"logo\" onClick={() => navigate(\"/\")}>\r\n          PES\r\n        </p>\r\n        <MenuBar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderForAny;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaCircleUser } from \"react-icons/fa6\";\r\nimport { UserInfo } from \"model/userType\";\r\nimport MenuBar from \"components/header/MenuBar\";\r\nimport postLogout from \"apis/common/postLogout\";\r\nimport getUserInfo from \"apis/navbar/getUserInfo\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// 로그인o 경우 넷바\r\nconst HeaderForUser: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState<boolean>(false);\r\n\r\n  // user 정보 관리\r\n  const [memberData, setMemberData] = useState<UserInfo>({\r\n    memberName: \"\",\r\n    memberScore: 0,\r\n    memberStatus: \"\",\r\n    memberGen: 0,\r\n    hasNewNotices: false,\r\n  });\r\n\r\n  // 상단바 드롭다운 클릭\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((state) => !state);\r\n  };\r\n\r\n  // 넷바 사용자 정보 요청\r\n  useEffect(() => {\r\n    getUserInfo({ navigate, setMemberData, dispatch });\r\n  }, [navigate]);\r\n\r\n  // 로그아웃 호출 함수\r\n  const handleLogoutClick = () => {\r\n    console.log(\"로그아웃\");\r\n    postLogout(navigate, dispatch); // dispatch 전달\r\n  };\r\n\r\n  return (\r\n    //토글버튼 클릭 시\r\n    <div className=\"container\">\r\n      <div className=\"btns\">\r\n        {/* <div className='userLevel'>level</div> */}\r\n        <button className=\"userId\" onClick={toggleDropdown}>\r\n          {memberData.memberName}님\r\n          {isDropdownOpen && (\r\n            <div className=\"dropdown-content\">\r\n              <FaCircleUser\r\n                size={60}\r\n                style={{ color: \"lightgray\" }}\r\n              ></FaCircleUser>\r\n\r\n              <div className=\"memberName\">{memberData.memberName}님</div>\r\n\r\n              <div className=\"navbarInfo\">\r\n                <div className=\"memberStatus\">{memberData.memberStatus}</div>\r\n                <div className=\"memberGen\">{memberData.memberGen}기</div>\r\n                <div className=\"memberScore\">\r\n                  현재<p>{memberData.memberScore}</p>점\r\n                </div>\r\n              </div>\r\n              <div className=\"navbar_bottom\">\r\n                <a className=\"btn_mypage\" href=\"/mypage\">\r\n                  마이페이지\r\n                </a>\r\n                {/* TODO : button으로 수정 */}\r\n                <a onClick={handleLogoutClick} className=\"btn_top_logout\">\r\n                  로그아웃\r\n                </a>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"navbar\">\r\n        <p className=\"logo\" onClick={() => navigate(\"/\")}>\r\n          PES\r\n        </p>\r\n        <MenuBar />\r\n\r\n        {/* TODO : 새로운 공지사항 있을때 아이콘 표시 */}\r\n        {/* {memberData.hasNewNotices ? \r\n        (<button className='noticeAlertBtn' onClick={()=>navigate('/notice')}>N</button>) \r\n        : (<></>)\r\n        } */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderForUser;\r\n","import axios from \"axios\";\r\nimport { UserInfo, GetUserInfoProps } from \"model/userType\";\r\nimport { userInfoAction } from \"stores/actions/userAction\";\r\n\r\n// 상단바 user 정보 API 요청\r\nconst getUserInfo = async ({\r\n  navigate,\r\n  setMemberData,\r\n  dispatch,\r\n}: GetUserInfoProps) => {\r\n  const uri = \"/api/exp\";\r\n  const memberEmail = sessionStorage.getItem(\"memberEmail\");\r\n\r\n  try {\r\n    const response = await axios.get<UserInfo>(uri, {\r\n      params: { memberEmail },\r\n    });\r\n\r\n    // 데이터 처리\r\n    const data = response.data;\r\n    setMemberData(data);\r\n\r\n    dispatch(\r\n      // sessionStorage 저장에서 Redux 저장으로 변경\r\n      userInfoAction({\r\n        memberName: data.memberName,\r\n        memberStatus: data.memberStatus,\r\n        hasNewNotices: data.hasNewNotices,\r\n        memberScore: data.memberScore,\r\n        memberGen: data.memberGen,\r\n      })\r\n    );\r\n  } catch (error: unknown) {\r\n    // Axios에러인 경우\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        // 서버 응답이 있는 경우\r\n        if (error.response.status === 403) {\r\n          alert(\"로그인이 만료됐습니다!\");\r\n          localStorage.clear();\r\n          navigate(\"/signin\");\r\n        } else {\r\n          console.error(\r\n            \"데이터 가져오기 실패:\",\r\n            error.response.status,\r\n            error.response.statusText\r\n          );\r\n        }\r\n      } else if (error.request) {\r\n        // 요청이 이루어졌으나 응답이 없는 경우\r\n        console.error(\"데이터 가져오기 실패: 요청이 실패했습니다.\");\r\n      } else {\r\n        // 설정 중 오류 발생\r\n        console.error(\"데이터 가져오기 실패:\", error.message);\r\n      }\r\n    } else {\r\n      // Axios 에러가 아닌 경우\r\n      console.error(\"데이터 가져오기 실패:\", (error as Error).message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default getUserInfo;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FaMapMarkerAlt, FaGithub } from \"react-icons/fa\";\r\nimport { IoIosMail } from \"react-icons/io\";\r\nimport { BiLogoInstagramAlt } from \"react-icons/bi\";\r\nimport postLogout from \"apis/common/postLogout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\";\r\n\r\nconst Footer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { status } = useSelector((state: RootState) => state.sign); // redux에서 가져오기\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <p className=\"logo\">PES</p>\r\n        <div className=\"info\">\r\n          <div className=\"phone\">\r\n            <IoIosMail size={24} /> <p>123qpq@naver.com</p>\r\n          </div>\r\n          <div className=\"address\">\r\n            <FaMapMarkerAlt size={20} />\r\n            <p>경북 경산시 대학로 280 생산기술연구원 G15 213호</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <p className=\"about\">About The Club</p>\r\n        <p className=\"info1\">영남대학교 로봇공학과 동아리 PowerSupply의</p>\r\n        <p className=\"info2\">교육시스템 개발팀 PES</p>\r\n        <div className=\"sns\">\r\n          <a\r\n            href=\"https://www.instagram.com/team.pes23/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <BiLogoInstagramAlt size={36} />\r\n          </a>\r\n          <a\r\n            href=\"https://github.com/PowerSupply-ES\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FaGithub size={30} />\r\n          </a>\r\n        </div>\r\n\r\n        {/* 로그아웃 상태시 안보이게 */}\r\n        {status ? (\r\n          <div onClick={() => postLogout(navigate, dispatch)} className=\"footer_logout\">\r\n            로그아웃\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { HeaderForAny, HeaderForUser } from \"components/header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\"; // RootState 임포트\r\nimport Footer from \"components/footer/Footer\";\r\nimport \"styles/css/topDropdown.css\";\r\nimport \"styles/css/footer.css\";\r\nimport \"styles/css/navbar.css\";\r\n\r\ninterface HeaderProps {}\r\n\r\nconst Header: React.FC<HeaderProps> = () => {\r\n  \r\n  const { status } = useSelector((state: RootState) => state.sign); // useSelector에서 RootState를 사용하여 sign 상태의 status를 가져옴\r\n\r\n  return (\r\n    <div>\r\n      {/* 로그인이 완료되었는지에 따라 다른 Header를 렌더링 */}\r\n      {status ? <HeaderForUser /> : <HeaderForAny />}\r\n      <Outlet />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// 관리자 SideMenu MUI 컴포넌트\r\nimport {MenuContent, OptionsMenu} from \"./index\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport MuiDrawer, { drawerClasses } from \"@mui/material/Drawer\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\n// import Divider from \"@mui/material/Divider\";\r\n// import SelectContent from \"./SelectContent\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Drawer = styled(MuiDrawer)({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  boxSizing: \"border-box\",\r\n  mt: 10,\r\n  [`& .${drawerClasses.paper}`]: {\r\n    width: drawerWidth,\r\n    boxSizing: \"border-box\",\r\n  },\r\n});\r\n\r\nexport default function SideMenu() {\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      sx={{\r\n        display: { xs: \"none\", md: \"block\" },\r\n        [`& .${drawerClasses.paper}`]: {\r\n          backgroundColor: \"background.paper\",\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          mt: \"40px\",\r\n          p: 1.5,\r\n        }}\r\n      >\r\n        {/* <SelectContent /> */}\r\n      </Box>\r\n      {/* <Divider /> */}\r\n\r\n      {/* 메뉴탭 */}\r\n      <MenuContent />\r\n\r\n      {/* user 정보 */}\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{\r\n          p: 2,\r\n          gap: 1,\r\n          alignItems: \"center\",\r\n          borderTop: \"1px solid\",\r\n          borderColor: \"divider\",\r\n        }}\r\n      >\r\n        {/* TODO: Avatar 대체 */}\r\n        <Avatar\r\n          sizes=\"small\"\r\n          alt=\"Riley Carter\"\r\n          // src=\"/static/images/avatar/7.jpg\"\r\n          sx={{ width: 36, height: 36 }}\r\n        />\r\n        <Box sx={{ mr: \"auto\" }}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{ fontWeight: 500, lineHeight: \"16px\" }}\r\n          >\r\n            {/* TODO: 관리자이름으로 대체 */}\r\n            관리자\r\n          </Typography>\r\n          <Typography variant=\"caption\" sx={{ color: \"text.secondary\" }}>\r\n            {/* TODO: 관리자이메일로 대체 */}\r\n            csi9926@gmail.com\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* 하단 옵션선택 */}\r\n        <OptionsMenu />\r\n      </Stack>\r\n    </Drawer>\r\n  );\r\n}\r\n","// 관리자 페이지 MUI 템플릿\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport { TemplateFrameProps } from \"model/userType\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport ArrowBackRoundedIcon from \"@mui/icons-material/ArrowBackRounded\";\r\n// import FormControl from \"@mui/material/FormControl\";\r\n// import IconButton from \"@mui/material/IconButton\";\r\n// import getDashboardTheme from './theme/getDashboardTheme';\r\n\r\n\r\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\r\n  position: \"relative\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  flexShrink: 0,\r\n  borderBottom: \"1px solid\",\r\n  borderColor: theme.palette.divider,\r\n  backgroundColor: theme.palette.background.paper,\r\n  boxShadow: \"none\",\r\n  backgroundImage: \"none\",\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  flex: \"0 0 auto\",\r\n}));\r\n\r\n\r\nexport default function TemplateFrame({ children }: TemplateFrameProps) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\r\n        {/* navbar */}\r\n        <StyledAppBar>\r\n          <Toolbar\r\n            variant=\"dense\"\r\n            disableGutters\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"98%\",\r\n              p: \"8px 12px\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"text\"\r\n              size=\"small\"\r\n              aria-label=\"Back to MyPage\"\r\n              startIcon={<ArrowBackRoundedIcon />}\r\n              component=\"a\"\r\n              onClick={() => navigate(\"/mypage\")}\r\n              sx={{ display: { xs: \"none\", sm: \"flex\" } }}\r\n            >\r\n              Back to MyPage\r\n            </Button>\r\n\r\n            {/* <IconButton\r\n              size=\"small\"\r\n              aria-label=\"Back to templates\"\r\n              component=\"a\"\r\n              sx={{ display: { xs: 'auto', sm: 'none' } }}\r\n            >\r\n              <ArrowBackRoundedIcon />\r\n            </IconButton> */}\r\n          </Toolbar>\r\n        </StyledAppBar>\r\n\r\n        {/* container - menu탭, 본문 */}\r\n        <Box sx={{ display: \"flex\", flexGrow: 1 }}>\r\n          <SideMenu />\r\n          <Box\r\n            sx={{ flexGrow: 1, overflow: \"auto\", width: \"calc(100% - 240px)\" }}\r\n          >\r\n            {children}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TemplateFrame from \"./TemplateFrame\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\n// ManageMenu props 타입 정의\r\ninterface ManageMenuProps {};\r\n\r\n// 관리자모드 사이드바 공통컴포넌트 \r\nconst ManageMenu: React.FC<ManageMenuProps> = () => {\r\n  return (\r\n    // MUI 템플릿 적용\r\n    <TemplateFrame>\r\n      <Outlet />\r\n    </TemplateFrame>\r\n  );\r\n};\r\n\r\nexport default ManageMenu;\r\n","// 관리자 이외 접근 보호용 컴포넌트\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\";\r\n\r\nconst AdminRoute = ({ children }: { children: JSX.Element }) => {\r\n  const { memberStatus } = useSelector((state: RootState) => state.user); // redux에서 가져오기\r\n\r\n  const isAdmin = memberStatus === '관리자';\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // 관리자가 아닐 경우 이전 페이지로 이동\r\n    if (!isAdmin) {\r\n      alert(\"권한이 없습니다!\");\r\n      navigate(-1);\r\n    }\r\n  }, [isAdmin, navigate]);\r\n\r\n  // 관리자인 경우 children 컴포넌트 그대로 렌더링\r\n  return isAdmin ? children : null;\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React, { Suspense } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Header from \"components/header/Header\";\r\nimport ManageMenu from \"components/manage/ManageMenu\";\r\nimport AdminRoute from \"components/common/AdminRoute\";\r\nimport Loading from \"components/common/Loading\";\r\n\r\n// 동적 임포트\r\nconst ListPage = React.lazy(() => import(\"pages/list/listPage\"));\r\nconst ProblemPage = React.lazy(() => import(\"pages/problem/problemPage\"));\r\nconst QuestionPage = React.lazy(() => import(\"pages/question/questionPage\"));\r\nconst Signin = React.lazy(() => import(\"pages/sign/signInPage\"));\r\nconst Signup = React.lazy(() => import(\"pages/sign/signUpPage\"));\r\nconst MainPage = React.lazy(() => import(\"pages/main/mainPage\"));\r\nconst Mypage = React.lazy(() => import(\"pages/mypage/mypage\"));\r\nconst SolutionPage = React.lazy(() => import(\"pages/solution/solutionPage\"));\r\n// const Menual = React.lazy(() => import(\"pages/menual/menualPage\"));\r\nconst NoticePage = React.lazy(() => import(\"pages/notice/noticePage\"));\r\nconst NoticePost = React.lazy(() => import(\"pages/notice/noticePostPage\"));\r\nconst NoticeDetail = React.lazy(() => import(\"pages/notice/noticeDetailPage\"));\r\nconst UserListPage = React.lazy(() => import(\"pages/manage/userListPage\"));\r\nconst UserProbPage = React.lazy(() => import(\"pages/manage/userProbPage\"));\r\nconst UserFeedPage = React.lazy(() => import(\"pages/manage/userFeedPage\"));\r\nconst UserDetailPage = React.lazy(() => import(\"pages/manage/userDetailPage\"));\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\" style={{ backgroundColor: \"#f5f5f5\" }}>\r\n      {\" \"}\r\n      {/* 글로벌 스타일 적용 */}\r\n      <Suspense fallback={<Loading />}>\r\n        {\" \"}\r\n        {/* 동적 로드된 컴포넌트(React.lazy)가 로드되는 동안 보여줄 로딩 화면 */}\r\n        <Routes>\r\n          {/* Topbar */}\r\n          <Route path=\"/\" element={<Header />}>\r\n            <Route path=\"\" element={<MainPage />} />\r\n            <Route path=\"/signin\" element={<Signin />} />\r\n            <Route path=\"/signup\" element={<Signup />} />\r\n            <Route path=\"/mypage\" element={<Mypage />} />\r\n            {/* <Route path=\"/menual\" element={<Menual />} /> */}\r\n            <Route path=\"/notice\" element={<NoticePage />} />\r\n            <Route path=\"/postNotice\" element={<NoticePost />} />\r\n\r\n            <Route path=\"/solution/:id\" element={<SolutionPage />} />\r\n            <Route path=\"/list\" element={<ListPage />} />\r\n            <Route path=\"/problem/:id\" element={<ProblemPage />} />\r\n            <Route path=\"/question/:id\" element={<QuestionPage />} />\r\n            <Route path=\"/notice/:id\" element={<NoticeDetail />} />\r\n            <Route path=\"/manageUser/:id\" element={<UserDetailPage />} />\r\n          </Route>\r\n\r\n          {/* 관리자 메뉴 - AdminRoute로 보호*/}\r\n          <Route path=\"/\" element={<ManageMenu />}>\r\n            <Route\r\n              path=\"/manageUser\"\r\n              element={\r\n                <AdminRoute>\r\n                  <UserListPage />\r\n                </AdminRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/manageProb\"\r\n              element={\r\n                <AdminRoute>\r\n                  <UserProbPage />\r\n                </AdminRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/manageFeed\"\r\n              element={\r\n                <AdminRoute>\r\n                  <UserFeedPage />\r\n                </AdminRoute>\r\n              }\r\n            />\r\n          </Route>\r\n        </Routes>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/* user관련 reducer 관리 */\r\nimport { UserAction } from \"stores/actions/userAction\";\r\nimport { UserInfo } from \"model/userType\";\r\n\r\n// initialSignin 타입\r\nexport type SignState = {\r\n  status: boolean;\r\n  memberId: string | null;\r\n};\r\n// sign 기본 상태\r\nconst initialSignin: SignState = {\r\n  status: false,\r\n  memberId: \"\",\r\n};\r\n\r\n// userInfo 기본 상태\r\nconst initialInfo: UserInfo = {\r\n  memberName: \"\",\r\n  memberStatus: \"\",\r\n  hasNewNotices: false,\r\n  memberGen: 0,\r\n  memberScore: 0,\r\n};\r\n\r\n// sign Reducer\r\nexport const signReducer = (\r\n  currentState: SignState = initialSignin,\r\n  action: UserAction\r\n): SignState => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return { ...currentState, status: true, memberId: action.payload };\r\n    case \"LOGOUT\":\r\n      return { ...currentState, status: false, memberId: null };\r\n    default:\r\n      return currentState;\r\n  }\r\n};\r\n\r\n// userInfo Reducer\r\nexport const userInfoReducer = (\r\n  currentState: UserInfo = initialInfo,\r\n  action: UserAction\r\n): UserInfo => {\r\n  switch (action.type) {\r\n    case \"SET_USER_INFO\":\r\n      return { ...currentState, ...action.payload };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...currentState,\r\n        memberName: \"\",\r\n        memberStatus: \"\",\r\n        hasNewNotices: false,\r\n        memberGen: 0,\r\n        memberScore: 0,\r\n      };\r\n    default:\r\n      return currentState;\r\n  }\r\n};\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// Provider: state값 전달역할 /useSelector: 어떤 state값 쓸지 선택 / useDispatch: state값 변경\r\nimport { signReducer, userInfoReducer } from \"stores/reducers/userReducer\";\r\nimport { SignState } from \"stores/reducers/userReducer\"; // SignState 타입 import\r\nimport { UserInfo } from \"model/userType\"; // UserInfo 타입 import\r\n\r\n// 전체 state 타입 정의\r\nexport type RootState = {\r\n  sign: SignState;\r\n  user: UserInfo;\r\n};\r\n\r\n// redux-persist 설정\r\nconst persistConfig = {\r\n  key: \"root\", // 로컬스토리지에 저장되는 키 이름\r\n  storage, // localStorage 사용\r\n  whitelist: [\"sign\", \"user\"], // 어떤 리듀서 persist할지\r\n};\r\n\r\n// Reducers 한꺼번에 관리\r\nconst rootReducer = combineReducers({\r\n  sign: signReducer,\r\n  user: userInfoReducer,\r\n});\r\n\r\n// redux-persist로 rootReducer 감싸기\r\n// TODO: any type 변경하기\r\nconst persistedReducer = persistReducer<any,any>(persistConfig, rootReducer);\r\n\r\n// Redux DevTools 설정\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\r\nconst store = createStore(persistedReducer, devTools && devTools());\r\n\r\n// persistStore 생성\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport store, { persistor } from \"stores/store\";\r\nimport Loading from \"components/common/Loading\";\r\n\r\nconst rootElement = document.getElementById(\"root\") as HTMLElement;\r\nconst root = ReactDOM.createRoot(rootElement);\r\n\r\nroot.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={<Loading />} persistor={persistor}> {/* Redux 상태가 복원되기 전까지 보여줄 로딩 화면 */}\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\n","/* user 관련 액션 관리 */\r\nimport { UserInfo } from \"model/userType\";\r\n\r\n// 로그인\r\nexport const loginAction = (memberId: string) => ({\r\n  type: \"LOGIN\" as const,\r\n  payload: memberId,\r\n});\r\n\r\n// 로그아웃\r\nexport const logoutAction = () => ({\r\n  type: \"LOGOUT\" as const,\r\n});\r\n\r\n// 사용자 정보\r\nexport const userInfoAction = (userInfo: UserInfo) => ({\r\n  type: \"SET_USER_INFO\" as const,\r\n  payload: userInfo,\r\n});\r\n\r\n\r\n// 액션 타입 정의\r\nexport type UserAction =\r\n| { type: \"LOGIN\"; payload: string }\r\n| { type: \"LOGOUT\" }\r\n| { type: \"SET_USER_INFO\"; payload: UserInfo };","module.exports = React;","module.exports = ReactDOM;","module.exports = axios;"],"names":["async","navigate","dispatch","console","log","response","axios","headers","logoutAction","localStorage","clear","sessionStorage","alert","data","message","window","location","reload","error","status","statusText","request","Loading","_jsx","LoadingPage","children","FadeLoader","color","cssOverride","height","loading","margin","radius","speedMultiplier","width","styled","div","_ref","memberData","useNavigate","_Fragment","map","mem","_jsxs","className","memberStatus","memberName","memberId","memberMajor","onClick","gotoDetail","setItem","mainListItems","text","icon","PeopleRoundedIcon","path","AssignmentRoundedIcon","AnalyticsRoundedIcon","secondaryListItems","HomeRoundedIcon","InfoRoundedIcon","MenuContent","useLocation","Stack","sx","flexGrow","p","justifyContent","List","dense","item","index","ListItem","disablePadding","display","ListItemButton","selected","pathname","minHeight","px","ListItemIcon","ListItemText","primary","MenuItem","MuiMenuItem","OptionsMenu","useDispatch","anchorEl","setAnchorEl","useState","open","Boolean","handleClose","MenuButton","event","currentTarget","borderColor","MoreVertRoundedIcon","Menu","id","onClose","transformOrigin","horizontal","vertical","anchorOrigin","listClasses","root","padding","paperClasses","dividerClasses","Divider","postLogout","listItemIconClasses","ml","minWidth","LogoutRoundedIcon","fontSize","showBadge","props","Badge","variant","invisible","badgeClasses","badge","right","top","IconButton","size","theme","createTheme","getTabStyle","currentIndex","tabIndex","flex","content","borderTopLeftRadius","borderTopRightRadius","backgroundColor","marginTop","MenuBar","toggleTab","useMenu","setIndex","useEffect","value","ThemeProvider","CssBaseline","Box","mt","overflow","Tabs","onChange","numericValue","parseInt","isNaN","pt","Tab","label","HeaderForAny","href","style","textDecoration","HeaderForUser","isDropdownOpen","setIsDropdownOpen","setMemberData","memberScore","memberGen","hasNewNotices","memberEmail","getItem","params","userInfoAction","getUserInfo","toggleDropdown","state","FaCircleUser","handleLogoutClick","Footer","useSelector","sign","IoIosMail","FaMapMarkerAlt","target","rel","BiLogoInstagramAlt","FaGithub","Header","Outlet","Drawer","MuiDrawer","flexShrink","boxSizing","drawerClasses","paper","SideMenu","xs","md","direction","gap","alignItems","borderTop","Avatar","sizes","alt","mr","Typography","fontWeight","lineHeight","StyledAppBar","AppBar","position","borderBottom","palette","divider","background","boxShadow","backgroundImage","zIndex","drawer","TemplateFrame","_ref2","flexDirection","Toolbar","disableGutters","Button","startIcon","ArrowBackRoundedIcon","component","sm","ManageMenu","user","isAdmin","ListPage","React","ProblemPage","QuestionPage","Signin","Signup","MainPage","Mypage","SolutionPage","NoticePage","NoticePost","NoticeDetail","UserListPage","UserProbPage","UserFeedPage","UserDetailPage","App","Suspense","fallback","Routes","Route","element","AdminRoute","initialSignin","initialInfo","persistConfig","key","storage","whitelist","rootReducer","combineReducers","currentState","arguments","length","undefined","action","type","payload","persistedReducer","persistReducer","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","persistor","persistStore","rootElement","document","getElementById","ReactDOM","render","Provider","PersistGate","BrowserRouter","loginAction","userInfo","module","exports"],"sourceRoot":""}