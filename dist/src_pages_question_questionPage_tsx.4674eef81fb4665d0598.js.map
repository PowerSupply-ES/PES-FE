{"version":3,"file":"src_pages_question_questionPage_tsx.4674eef81fb4665d0598.js","mappings":";;;;;;;;;;;;;;AAA0B;;AAE1B;AACA,MAAMC,cAAc,GAAG,MAAOC,SAAiB,IAAK;EAClD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,gDAAS,CAAC,iBAAiBE,SAAS,EAAE,EAAE;MAC7DG,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOF,IAAI;EACb,CAAC,CAAC,OAAOG,KAAc,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,iEAAeL,cAAc;;;;;;;;;;;;;;;ACdH;;AAE1B;AACA,MAAMQ,YAAY,GAAG,MAAOP,SAAiB,IAAK;EAChD,IAAI;IACF,MAAMQ,GAAG,GAAG,MAAMV,gDAAS,CAAC,sBAAsBE,SAAS,EAAE,EAAE;MAC7DG,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOK,GAAG,CAACP,IAAI;EACjB,CAAC,CAAC,OAAOG,KAAc,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;EACAC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEN,SAAS,CAAC;AACtC,CAAC;AAED,iEAAeO,YAAY;;;;;;;;;;;;;;;ACfD;;AAE1B;AACA,MAAME,cAAc,GAAG,MAAAA,CAAOC,OAAe,EAAEV,SAAiB,KAAK;EACnE,IAAI;IACF,MAAMW,QAAQ,GAAG,MAAMb,iDAAU,CAAC,gBAAgBE,SAAS,EAAE,EAAE;MAC7Da,IAAI,EAAEH,OAAO;MACbV,SAAS,EAAEA;IACb,CAAC,CAAC;IACF,OAAO;MAAEC,IAAI,EAAEU,QAAQ,CAACV,IAAI;MAAEa,MAAM,EAAEH,QAAQ,CAACG;IAAO,CAAC;EACzD,CAAC,CAAC,OAAOV,KAAc,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;;IAElB;IACA,IAAIN,yDAAkB,CAACM,KAAK,CAAC,EAAE;MAC7B,OAAO;QAAEU,MAAM,EAAEV,KAAK,CAACO,QAAQ,GAAGP,KAAK,CAACO,QAAQ,CAACG,MAAM,GAAG;MAAI,CAAC;IACjE,CAAC,MAAM;MACL;MACA,OAAO;QAAEA,MAAM,EAAE;MAAI,CAAC;IACxB;EACF;AACF,CAAC;AAED,iEAAeL,cAAc;;;;;;;;;;;;;;;ACvBH;;AAE1B;AACA,MAAMO,OAAO,GAAG,MAAOC,QAAgB,IAAsB;EAC3D,IAAI;IACF,MAAM;MAAEhB,IAAI,EAAEU;IAAS,CAAC,GAAG,MAAMb,gDAAS,CAAC,kBAAkBmB,QAAQ,EAAE,EAAE;MACvEd,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAc,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,iEAAeY,OAAO;;;;;;;;;;;;;;;ACfI;AAG1B;AACA,MAAME,OAAO,GAAG,MAAOD,QAAgB,IAAK;EAC1C,IAAI;IACF,MAAMT,GAAG,GAAG,MAAMV,gDAAS,CAAoB,gBAAgBmB,QAAQ,EAAE,EAAE;MACzEd,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOK,GAAG,CAACP,IAAI;EACjB,CAAC,CAAC,OAAOG,KAAc,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,iEAAec,OAAO;;;;;;;;;;;;;;;AChBI;AAG1B;AACA,MAAMC,OAAO,GAAG,MAAOF,QAAgB,IAA8B;EACnE,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMb,gDAAS,CAC9B,eAAemB,QAAQ,EAAE,EACzB;MACEd,eAAe,EAAE;IACnB,CACF,CAAC;IACD,OAAOQ,QAAQ,CAACV,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAc,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,iEAAee,OAAO;;;;;;;;;;;;;;;;;;;;;;ACnBtB;AAC+C;AACA;AACA;AACQ;;;;;;;;;;;;;;;;ACJ7B;;AAE1B;AACA,MAAME,WAAW,GAAG,MAAAA,CAClBJ,QAAgB,EAChBM,SAAiB,EACjBC,SAAiB,KACC;EAClB,IAAI;IACF,MAAM1B,iDAAU,CAAC,eAAemB,QAAQ,EAAE,EAAE;MAC1CM,SAAS;MACTC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOpB,KAAc,EAAE;IACvBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,iEAAeiB,WAAW;;;;;;;;;;;;;;;ACnBmB;;AAE7C;AACA,MAAMC,QAAQ,GAAG,MAAAA,CACfL,QAAgB,EAChBQ,OAAe,EACfC,QAAgB,KACW;EAC3B,IAAI;IACF,OAAO,MAAM5B,iDAAU,CAAC,gBAAgBmB,QAAQ,EAAE,EAAE;MAClDQ,OAAO;MAAE;MACTE,eAAe,EAAED;IACnB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOtB,KAAc,EAAE;IACvBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,iEAAekB,QAAQ;;;;;;;;;;;;;;;;;;;ACnBG;AAC1B;;AAEA;AAAA;AACO,MAAMW,YAAY,GAAIC,IAA+B,IAAK;EAC/D,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;;EAEtB,OAAOA,IAAI,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;AAC/B,CAAC;;AAED;AACO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;AACvB,CAAC;;AAED;AACA;AACO,MAAMC,cAAc,GAAIC,IAAY,IAAsB;EAC/D,OAAOA,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtCb,uDAAA,CAACJ,uDAAc;IAAAmB,QAAA,GACZH,IAAI,eACLd,sDAAA,SAAK,CAAC;EAAA,GAFae,KAGL,CACjB,CAAC;AACJ,CAAC;;AAED;AACO,MAAMG,oBAAoB,GAAIP,IAAY,IAAsB;EACrE,MAAMQ,KAAK,GAAGR,IAAI,CAACC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EAClC,OAAOO,KAAK,CAACN,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAChC,oBACEb,uDAAA;MAAAe,QAAA,GACGH,IAAI,eACLd,sDAAA,SAAK,CAAC;IAAA,GAFGe,KAGL,CAAC;EAEX,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;;;ACrCsC;AACmB;AAEV;AAAA;AAChD,MAAMQ,UAAU,gBAAGzB,iDAAU,CAAC,MAAM,0QAAuC,CAAC,CAAC,CAAC;;AAE9E;AACA,MAAM2B,QAAiC,GAAGC,IAAA,IAOpC;EAAA,IAPqC;IACzCC,UAAU;IACVC,UAAU;IACV7C,IAAI;IACJ8C,GAAG;IACHC,OAAO;IACP5D;EACF,CAAC,GAAAwD,IAAA;EACC,oBACExB,uDAAA;IAAK6B,SAAS,EAAC,yBAAyB;IAAAd,QAAA,gBAGtCjB,sDAAA;MAAK+B,SAAS,EAAC,gBAAgB;MAAAd,QAAA,eAG7BjB,sDAAA,CAACoB,2CAAQ;QAACY,QAAQ,eAAEhC,sDAAA,CAACqB,iEAAO,IAAC,CAAE;QAAAJ,QAAA,eAC7BjB,sDAAA,CAACuB,UAAU;UACTU,QAAQ,EAAEH,OAAQ;UAClBI,QAAQ,EAAE,IAAK;UACfnD,IAAI,EAAEA;QAAK,CACZ;MAAC,CACM;IAAC,CACR,CAAC,eAGNiB,sDAAA;MAAK+B,SAAS,EAAC,oBAAoB;MAAAd,QAAA,EAChCY,GAAG,CAACM,WAAW,KAAK,UAAU;MAAA;MAAO;MACpC;MACAjC,uDAAA,CAAAoB,uDAAA;QAAAL,QAAA,gBACEf,uDAAA;UAAK6B,SAAS,EAAC,iBAAiB;UAAAd,QAAA,gBAC9Bf,uDAAA;YAAK6B,SAAS,EAAC,iBAAiB;YAAAd,QAAA,gBAC9BjB,sDAAA;cAAK+B,SAAS,EAAC,aAAa;cAAAd,QAAA,EAAC;YAAI,CAAK,CAAC,eACvCjB,sDAAA;cAAK+B,SAAS,EAAC,cAAc;cAAAd,QAAA,EAAEY,GAAG,CAACO;YAAkB,CAAM,CAAC;UAAA,CACzD,CAAC,eACNpC,sDAAA;YAAU+B,SAAS,EAAC,cAAc;YAACE,QAAQ,EAAEN;UAAW,CAAE,CAAC;QAAA,CACxD,CAAC,eAENzB,uDAAA;UAAK6B,SAAS,EAAC,iBAAiB;UAAAd,QAAA,gBAC9Bf,uDAAA;YAAK6B,SAAS,EAAC,iBAAiB;YAAAd,QAAA,gBAC9BjB,sDAAA;cAAK+B,SAAS,EAAC,aAAa;cAAAd,QAAA,EAAC;YAAI,CAAK,CAAC,eACvCjB,sDAAA;cAAK+B,SAAS,EAAC,cAAc;cAAAd,QAAA,EAAEY,GAAG,CAACQ;YAAkB,CAAM,CAAC;UAAA,CACzD,CAAC,eACNrC,sDAAA;YAAU+B,SAAS,EAAC,cAAc;YAACE,QAAQ,EAAEL;UAAW,CAAE,CAAC;QAAA,CACxD,CAAC;MAAA,CACN,CAAC;MAAA;MAEH;MACA;MACA;MACA;MACA1B,uDAAA,CAAAoB,uDAAA;QAAAL,QAAA,gBACEf,uDAAA;UAAK6B,SAAS,EAAC,iBAAiB;UAAAd,QAAA,gBAC9BjB,sDAAA;YAAK+B,SAAS,EAAC,aAAa;YAAAd,QAAA,EAAC;UAAI,CAAK,CAAC,eACvCjB,sDAAA;YAAK+B,SAAS,EAAC,cAAc;YAAAd,QAAA,EAAEY,GAAG,CAACO;UAAkB,CAAM,CAAC;QAAA,CACzD,CAAC,eAGNpC,sDAAA;UAAK+B,SAAS,EAAC,sBAAsB;UAAAd,QAAA,EAClCP,wEAAc,CAACmB,GAAG,CAACpC,SAAS;QAAC,CAC3B,CAAC,eAENS,uDAAA;UAAK6B,SAAS,EAAC,iBAAiB;UAAAd,QAAA,gBAC9BjB,sDAAA;YAAK+B,SAAS,EAAC,aAAa;YAAAd,QAAA,EAAC;UAAI,CAAK,CAAC,eACvCjB,sDAAA;YAAK+B,SAAS,EAAC,cAAc;YAAAd,QAAA,EAAEY,GAAG,CAACQ;UAAkB,CAAM,CAAC;QAAA,CACzD,CAAC,eACNrC,sDAAA;UAAK+B,SAAS,EAAC,sBAAsB;UAAAd,QAAA,EAClCP,wEAAc,CAACmB,GAAG,CAACnC,SAAS;QAAC,CAC3B,CAAC;MAAA,CACN;IACH,CACE,CAAC;EAAA,CACH,CAAC;AAEV,CAAC;AAED,iEAAe+B,QAAQ;;;;;;;;;;;;;;;;;;;AClFiB;AACY;AACM;AACY;AAAA;AAKtE;AACA,MAAMgB,UAAqC,GAAGf,IAAA,IAAoC;EAAA,IAAnC;IAAEgB,KAAK;IAAEC,QAAQ;IAAEzE;EAAU,CAAC,GAAAwD,IAAA;EAC3E,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,+CAAQ,CAAU,KAAK,CAAC;;EAEpE;EACA,MAAM;IAAEQ,KAAK;IAAEC;EAAQ,CAAC,GAAGR,qEAAW,CAACrE,SAAS,IAAI,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAM8E,cAAc,GAAGA,CAAA,KAAM;IAC3BH,iBAAiB,CAAEI,SAAS,IAAM,CAACA,SAAU,CAAC;EAChD,CAAC;;EAGD;EACA,MAAMC,SAAS,GAAGJ,KAAK,GAAGA,KAAK,CAACK,YAAY,GAAG,OAAO;EACtD,MAAMC,cAAc,GAAGL,OAAO,GAAGA,OAAO,CAACK,cAAc,GAAG,UAAU;EACpE,MAAMC,YAAY,GAAGN,OAAO,GAAGA,OAAO,CAACM,YAAY,GAAG,EAAE;EACxD,MAAMC,aAAa,GAAGP,OAAO,GAAGA,OAAO,CAACO,aAAa,GAAG,EAAE;;EAE1D;EACA,IAAIpF,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,CAAC,CAAC,EAAE;IAC1C,oBACE8B,sDAAA,CAACwC,gFAAa;MAACT,SAAS,EAAC,wBAAwB;MAACW,KAAK,EAAEA,KAAM;MAAAzB,QAAA,eAC7DjB,sDAAA;QAAK+B,SAAS,EAAC,gBAAgB;QAAAd,QAAA,eAC7Bf,uDAAA;UAAK6B,SAAS,EAAC,eAAe;UAAAd,QAAA,gBAC5BjB,sDAAA;YAAK+B,SAAS,EAAC,YAAY;YAAAd,QAAA,EAAC;UAAI,CAAK,CAAC,eACtCjB,sDAAA;YAAK+B,SAAS,EAAC,cAAc;YAAAd,QAAA,EAAC;UAAK,CAAK,CAAC,eACzCjB,sDAAA;YAAK+B,SAAS,EAAC,qBAAqB;YAAAd,QAAA,EAAC;UAAI,CAAK,CAAC;QAAA,CAC5C;MAAC,CACH;IAAC,CACO,CAAC;EAEpB;EACA;EACA,oBACEf,uDAAA,CAACsC,gFAAa;IAACT,SAAS,EAAC,wBAAwB;IAACW,KAAK,EAAEA,KAAM;IAAAzB,QAAA,gBAC7DjB,sDAAA;MAAK+B,SAAS,EAAC,gBAAgB;MAAAd,QAAA,eAC7Bf,uDAAA;QAAK6B,SAAS,EAAC,eAAe;QAAAd,QAAA,gBAC5Bf,uDAAA;UAAK6B,SAAS,EAAC,YAAY;UAAAd,QAAA,GAAC,cACxB,EAAC/C,SAAS,KAAK,IAAI,GAAGA,SAAS,GAAG,OAAO;QAAA,CACxC,CAAC,eACN8B,sDAAA;UAAK+B,SAAS,EAAC,cAAc;UAAAd,QAAA,EAAEiC;QAAS,CAAM,CAAC,eAC/ClD,sDAAA;UAAK+B,SAAS,EAAC,qBAAqB;UAAAd,QAAA,EACjCyB,KAAK,KAAK,SAAS,GAChB,IAAI,GACJA,KAAK,KAAK,MAAM,GAChB,IAAI,GACJ;QAAK,CACN,CAAC;MAAA,CACH;IAAC,CACH,CAAC,eAENxC,uDAAA;MAAK6B,SAAS,EAAC,cAAc;MAAAd,QAAA,gBAC3Bf,uDAAA;QAAQ6B,SAAS,EAAC,gBAAgB;QAACwB,OAAO,EAAEP,cAAe;QAAA/B,QAAA,GAAC,0BAE1D,EAAC2B,cAAc,iBACb1C,uDAAA;UAAK6B,SAAS,EAAC,kBAAkB;UAAAd,QAAA,gBAE/BjB,sDAAA;YAAK+B,SAAS,EAAC,SAAS;YAACyB,KAAK,EAAE;cAAEC,UAAU,EAAE;YAAM,CAAE;YAAAxC,QAAA,EAEnDP,wEAAc,CAAC0C,cAAc;UAAC,CAC5B,CAAC,eAENlD,uDAAA;YAAK6B,SAAS,EAAC,eAAe;YAAAd,QAAA,gBAC5BjB,sDAAA;cAAAiB,QAAA,EAAI;YAAc,CAAI,CAAC,EACtBoC,YAAY,CAACxC,GAAG,CAAC,CAAC6C,KAAK,EAAE3C,KAAK,kBAC3Bf,sDAAA,CAACF,uDAAc;cAAAmB,QAAA,EACZP,wEAAc,CAACgD,KAAK;YAAC,GADH3C,KAEL,CACjB,CAAC;UAAA,CACD,CAAC,eAENb,uDAAA;YAAK6B,SAAS,EAAC,gBAAgB;YAACyB,KAAK,EAAE;cAAEC,UAAU,EAAE;YAAM,CAAE;YAAAxC,QAAA,gBAC3DjB,sDAAA;cAAAiB,QAAA,EAAI;YAAe,CAAI,CAAC,EACvBqC,aAAa,CAACzC,GAAG,CAAC,CAAC8C,MAAM,EAAE5C,KAAK,kBAC7Bf,sDAAA,CAACF,uDAAc;cAAAmB,QAAA,EACZP,wEAAc,CAACiD,MAAM;YAAC,GADJ5C,KAEL,CACjB,CAAC;UAAA,CACD,CAAC;QAAA,CACH,CACN;MAAA,CACK,CAAC,EACR,CAAC2B,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,MAAM,kBACvC1C,sDAAA;QACE+B,SAAS,EAAC,iBAAiB;QAC3BwB,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAC,aAAazE,SAAS,EAAE,CAAE;QAAA+C,QAAA,EACnD;MAED,CAAQ,CACT;IAAA,CACE,CAAC;EAAA,CACO,CAAC;AAEpB,CAAC;AAED,iEAAewB,UAAU;;;;;;;;;;;;;;;;;;ACxG4B;AACI;AACe;AAAA;AAGxE;AACA,MAAMoB,cAA6C,GAAGnC,IAAA,IAShD;EAAA,IATiD;IACrDiB,QAAQ;IACR5D,IAAI;IACJ8C,GAAG;IACHa,KAAK;IACLZ,OAAO;IACPgC,OAAO;IACPC,mBAAmB;IAAE;IACrBC;EACF,CAAC,GAAAtC,IAAA;EAEC;EACA,MAAMxD,SAAS,GAAG+F,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAE7D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/B,+CAAQ,CAAS,EAAE,CAAC;;EAElD;EACA,MAAMgC,mBAAmB,GAAIC,CAAmC,IAAK;IACnEF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAEzB,IAAI,CAACZ,OAAO,IAAI,CAACM,OAAO,EAAE;MAAE;MAC1BO,KAAK,CAAC,aAAa,CAAC;IACtB,CAAC,MAAM;MACL,MAAMC,WAAW,GAAGrE,MAAM,CAACsE,OAAO,CAChC,0BACF,CAAC;MAED,IAAID,WAAW,EAAE;QACfZ,UAAU,CAACF,OAAO,EAAEM,OAAO,CAAC,CAAC,CAAC;MAChC;IACF;EACF,CAAC;EAED,oBACElE,uDAAA,CAAC0D,kFAAc;IAAC7B,SAAS,EAAC,wBAAwB;IAAAd,QAAA,gBAEhDjB,sDAAA,CAACyC,2DAAU;MAACC,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACzE,SAAS,EAAEA;IAAU,CAAC,CAAC,MAAE,EAGtE2D,GAAG,iBACF7B,sDAAA,CAACyB,yDAAQ;MACPE,UAAU,EAAEoC,mBAAoB;MAChCnC,UAAU,EAAE0C,mBAAoB;MAChCvF,IAAI,EAAEA,IAAK;MACX8C,GAAG,EAAEA,GAAI;MACTC,OAAO,EAAEA,OAAQ;MACjB5D,SAAS,EAAEA;IAAU,CACtB,CACF,EAEAwE,KAAK,KAAK,UAAU,KAAK,CAACb,GAAG,CAACpC,SAAS,IAAI,CAACoC,GAAG,CAACnC,SAAS,CAAC,iBACzDM,sDAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAd,QAAA,eAC5BjB,sDAAA;QAAQ+B,SAAS,EAAC,eAAe;QAACwB,OAAO,EAAEmB,YAAa;QAAAzD,QAAA,EAAC;MAEzD,CAAQ;IAAC,CACN,CACN;EAAA,CACa,CAAC;AAErB,CAAC;AAED,iEAAe4C,cAAc;;;;;;;;;;;;;;;;;;ACvEW;AACkB;AACc;AAAA;AAGxE;AACA,MAAMiB,UAAqC,GAAGpD,IAAA,IASxC;EAAA,IATyC;IAAG;IAChDiB,QAAQ;IACRD,KAAK;IACLoB,OAAO;IACPC,mBAAmB;IACnBgB,YAAY;IACZC,SAAS;IACTC,SAAS;IACTC;EACF,CAAC,GAAAxD,IAAA;EACC,MAAM,CAACyD,YAAY,EAAEC,eAAe,CAAC,GAAG9C,+CAAQ,CAAS,sBAAsB,CAAC;EAChF,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,+CAAQ,CAAS,0BAA0B,CAAC;EACpF,MAAM,CAACiD,cAAc,EAAEC,iBAAiB,CAAC,GAAGlD,+CAAQ,CAAgB,IAAI,CAAC;;EAEzE;EACA,MAAMmD,eAAe,GAAGA,CAAA,KAAM;IAC5BH,eAAe,CAAC,0BAA0B,CAAC,CAAC,CAAC;IAC7CF,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BN,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACzCE,eAAe,CAAC,wBAAwB,CAAC,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMK,YAAY,GAAIC,MAAc,IAAK;IACvCJ,iBAAiB,CAACI,MAAM,CAAC;EAC3B,CAAC;;EAGD;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAAC/B,OAAO,IAAI,CAACA,OAAO,EAAE;MACxBa,KAAK,CAAC,aAAa,CAAC;MACpB;IACF;IACA,IAAI,CAACY,cAAc,EAAE;MACnBZ,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACF;IAEA,MAAMC,WAAW,GAAGrE,MAAM,CAACsE,OAAO,CAAC,0BAA0B,CAAC;IAC9D,IAAID,WAAW,EAAE;MACfM,YAAY,CAACpB,OAAO,EAAEgC,QAAQ,CAACP,cAAc,EAAE,EAAE,CAAC,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAMQ,aAAa,GAAGf,SAAS,GAAGgB,MAAM,CAACC,MAAM,CAACjB,SAAS,CAAC,GAAG,EAAE;EAE/D,oBACE9E,uDAAA,CAAC0D,kFAAc;IAAC7B,SAAS,EAAC,oBAAoB;IAAAd,QAAA,gBAC5CjB,sDAAA;MACEwD,KAAK,EAAE;QACL0C,MAAM,EAAE,CAAC;QACTC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,MAAM;QACvBC,SAAS,EAAE;MACb;IAAE,CACC,CAAC,eAENnG,uDAAA;MAAK6B,SAAS,EAAC,kBAAkB;MAAAd,QAAA,GAE9B8D,YAAY,KAAK,KAAK,IACrBgB,aAAa,CAACO,MAAM,IAAI,CAAC,IACzB5D,KAAK,KAAK,SAAS,iBACjB1C,sDAAA;QAAK+B,SAAS,EAAC,sBAAsB;QAACwB,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAC,GAAG,CAAE;QAAA1B,QAAA,EAAC;MAEpE,CAAK,CACN,EAGF8E,aAAa,CAACO,MAAM,GAAG,CAAC,IACvBP,aAAa,CAAClF,GAAG,CAAC,CAAC0F,QAAQ,EAAExF,KAAK,kBAChCb,uDAAA;QAAK6B,SAAS,EAAC,oBAAoB;QAAAd,QAAA,GAChCsF,QAAQ,CAAC1G,eAAe,KAAK,CAAC,gBAC7BG,sDAAA;UAAK+B,SAAS,EAAC,sBAAsB;UAAAd,QAAA,EAAC;QAAI,CAAK,CAAC,gBAEhDjB,sDAAA;UAAK+B,SAAS,EAAC,sBAAsB;UAAAd,QAAA,EAAC;QAAI,CAAK,CAChD,eACDf,uDAAA;UAAK6B,SAAS,EAAC,iBAAiB;UAAAd,QAAA,gBAC9BjB,sDAAA;YAAK+B,SAAS,EAAC,gBAAgB;YAAAd,QAAA,EAAE,YAAYF,KAAK,GAAG,CAAC;UAAE,CAAM,CAAC,eAC/Db,uDAAA;YAAK6B,SAAS,EAAC,iBAAiB;YAAAd,QAAA,GAAEsF,QAAQ,CAACC,SAAS,EAAC,QAAC;UAAA,CAAK,CAAC,eAC5DxG,sDAAA;YAAK+B,SAAS,EAAC,iBAAiB;YAAAd,QAAA,EAAEsF,QAAQ,CAACE;UAAU,CAAM,CAAC;QAAA,CACzD,CAAC,eAGNzG,sDAAA;UAAK+B,SAAS,EAAC,0BAA0B;UAAAd,QAAA,EACtCP,wEAAc,CAAC6F,QAAQ,CAACG,cAAc;QAAC,CACrC,CAAC;MAAA,GAfiC3F,KAgBpC,CACN,CAAC,EAGH,CAACgE,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK,KAAK,KAChDgB,aAAa,CAACO,MAAM,IAAI,CAAC,IACzB5D,KAAK,KAAK,SAAS,iBACjBxC,uDAAA;QAAK6B,SAAS,EAAC,cAAc;QAAAd,QAAA,gBAC3BjB,sDAAA;UAAK+B,SAAS,EAAC,iBAAiB;UAAAd,QAAA,eAC9BjB,sDAAA;YAAK+B,SAAS,EAAC,gBAAgB;YAAAd,QAAA,EAAC;UAAQ,CAAK;QAAC,CAC3C,CAAC,eACNjB,sDAAA;UACE+B,SAAS,EAAC,wBAAwB;UAClC4E,WAAW,EAAC,gEAAc;UAC1B1E,QAAQ,EAAE8B;QAAoB,CAC/B,CAAC,eAEF7D,uDAAA;UAAK6B,SAAS,EAAC,yBAAyB;UAAAd,QAAA,gBACtCf,uDAAA;YAAK6B,SAAS,EAAC,kBAAkB;YAAAd,QAAA,gBAC/BjB,sDAAA;cACE+B,SAAS,EAAC;cACV;cAAA;cACAyB,KAAK,EAAE;gBAAEoD,KAAK,EAAEzB;cAAa,CAAE;cAC/B5B,OAAO,EAAEA,CAAA,KAAM;gBACboC,YAAY,CAAC,GAAG,CAAC;gBACjBF,eAAe,CAAC,CAAC;cACnB,CAAE;cAAAxE,QAAA,EACH;YAED,CAAK,CAAC,eACNjB,sDAAA;cACE+B,SAAS,EAAC;cACV;cAAA;cACAyB,KAAK,EAAE;gBAAEoD,KAAK,EAAEvB;cAAa,CAAE;cAC/B9B,OAAO,EAAEA,CAAA,KAAM;gBACboC,YAAY,CAAC,GAAG,CAAC;gBACjBD,eAAe,CAAC,CAAC;cACnB,CAAE;cAAAzE,QAAA,EACH;YAED,CAAK,CAAC;UAAA,CACH,CAAC,eACNjB,sDAAA;YAAG+B,SAAS,EAAC,gBAAgB;YAAAd,QAAA,EAAC;UAAqB,CAAG,CAAC;QAAA,CACpD,CAAC,eACNjB,sDAAA;UAAQ+B,SAAS,EAAC,iBAAiB;UAACwB,OAAO,EAAEsC,aAAc;UAAA5E,QAAA,EAAC;QAE5D,CAAQ,CAAC;MAAA,CACN,CACN;IAAA,CACA,CAAC,EAEL8E,aAAa,CAACO,MAAM,IAAI,CAAC,iBACxBpG,uDAAA;MAAK6B,SAAS,EAAC,kBAAkB;MAAAd,QAAA,gBAC/BjB,sDAAA;QACE+B,SAAS,EACPkD,SAAS,IAAI,CAAC,IAAIc,aAAa,CAACO,MAAM,GAAG,CAAC,GACtC,gBAAgB,GAChB,aACL;QACD/C,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAC,GAAG,CAAE;QAAA1B,QAAA,EAE5BgE,SAAS,IAAI,CAAC,IAAIc,aAAa,CAACO,MAAM,GAAG,CAAC,GACvC,2BAA2BrB,SAAS,MAAM,GAC1C,yBAAyBA,SAAS;MAAM,CACzC,CAAC,eACNjF,sDAAA;QAAAiB,QAAA,EAAG;MAAe,CAAG,CAAC;IAAA,CACnB,CACN;EAAA,CACa,CAAC;AAErB,CAAC;AAED,iEAAe6D,UAAU;;;;;;;;;;;;;;;;;;AC1KzB;AACiD;AACI;AACQ;;;;;;;;;;;;;;;;;;;ACH7D;AAC6D;AACJ;;;;;;;;;;;;;;;;;ACFA;AACA;AAGzD;AACA,MAAM+B,cAAc,GAAI3I,SAAiB,IAA4B;EACnE,MAAM,CAAC6E,OAAO,EAAEmE,UAAU,CAAC,GAAG5E,+CAAQ,CAAwB,IAAI,CAAC;EAEnE,MAAM6E,YAAY,GAAGF,kDAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMpI,QAAQ,GAAG,MAAMZ,uEAAc,CAACC,SAAS,CAAC;MAChDgJ,UAAU,CAACrI,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOP,KAAc,EAAE;MACvBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf8I,gDAAS,CAAC,MAAM;IACdG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,OAAOpE,OAAO;AAChB,CAAC;AAED,iEAAe8D,cAAc;;;;;;;;;;;;;;;ACxB7B;AACoE;AAE1B;AAG1C;AACA,MAAMtE,WAAW,GAAIrE,SAAiB,IAA4B;EAChE,MAAM4E,KAAK,GAAGgE,oDAAY,CAAC5I,SAAS,CAAC,CAAC,CAAC;EACvC,MAAM6E,OAAO,GAAG8D,sDAAc,CAAC3I,SAAS,CAAC,CAAC,CAAC;EAC3C,MAAM;IAAEmJ,WAAW;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAGR,qDAAa,CAAC7I,SAAS,CAAC,CAAC,CAAC;EACtE,MAAM;IAAEc;EAAO,CAAC,GAAGoI,wDAAW,CAAE1E,KAAgB,IAAKA,KAAK,CAAC8E,IAAI,CAAC,CAAC,CAAC;;EAElE,MAAMC,OAAO,GAAGzI,MAAM;EAEtB,OAAO;IACL8D,KAAK;IACLC,OAAO;IACPwE,MAAM;IACNE,OAAO;IACPJ,WAAW;IACXC;EACF,CAAC;AACH,CAAC;AAED,iEAAe/E,WAAW;;;;;;;;;;;;;;;;ACzB+B;AACJ;AAGrD;AACA,MAAMuE,YAAY,GAAI5I,SAAiB,IAA0B;EAC/D,MAAM,CAAC4E,KAAK,EAAE4E,QAAQ,CAAC,GAAGpF,+CAAQ,CAAsB,IAAI,CAAC;;EAE7D;EACA,MAAMqF,UAAU,GAAGV,kDAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAMW,SAAS,GAAG,MAAMnJ,qEAAY,CAACP,SAAS,CAAC;MAC/C,IAAI0J,SAAS,EAAE;QACbF,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC;MACvB,CAAC,MAAM;QACLF,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,CAAC,OAAOpJ,KAAc,EAAE;MACvBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBoJ,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,CAACxJ,SAAS,CAAC,CAAC;EAEf8I,gDAAS,CAAC,MAAM;IACdW,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,OAAO7E,KAAK;AACd,CAAC;AAED,iEAAegE,YAAY;;;;;;;;;;;;;;;;;AC9Bc;AACM;AACU;;AAEzD;AACA,MAAMC,aAAa,GAAI7I,SAAiB,IAAK;EAC3C,MAAMyE,QAAQ,GAAGmF,6DAAW,CAAC,CAAC;EAC9B,MAAMnH,IAAI,GAAGkH,6CAAM,CAAS,EAAE,CAAC,CAAC,CAAC;EACjC,MAAM,CAACN,MAAM,EAAEQ,SAAS,CAAC,GAAGzF,+CAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAE3D;EACA,SAAS+E,WAAWA,CAACW,OAAe,EAAE;IACpCrH,IAAI,CAACsH,OAAO,GAAGD,OAAO;EACxB;EAEA,MAAMV,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC3G,IAAI,CAACsH,OAAO,EAAE;MACjBtD,KAAK,CAAC,aAAa,CAAC;IACtB,CAAC,MAAM;MACL,MAAM;QAAExG,IAAI,EAAEU,QAAQ;QAAEG;MAAO,CAAC,GAAG,MAAML,uEAAc,CACrDgC,IAAI,CAACsH,OAAO,EACZ/J,SACF,CAAC;MAED,IAAI,CAACW,QAAQ,EAAE;QACb8F,KAAK,CAAC,KAAK,CAAC;MACd,CAAC,MAAM,IAAI3F,MAAM,KAAK,GAAG,EAAE;QACzBT,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;QACrB8F,KAAK,CAAC,6BAA6B,CAAC;QACpCT,cAAc,CAACgE,OAAO,CAAC,WAAW,EAAEhK,SAAS,CAACiK,QAAQ,CAAC,CAAC,CAAC;QACzDxF,QAAQ,CAAC,aAAa9D,QAAQ,CAACuJ,SAAS,EAAE,CAAC;MAC7C,CAAC,MAAM,IAAIpJ,MAAM,KAAK,GAAG,EAAE;QACzB+I,SAAS,CAAClJ,QAAQ,CAAC0I,MAAM,CAAC;QAC1B5C,KAAK,CAAC,sBAAsB,CAAC;MAC/B,CAAC,MAAM,IAAI3F,MAAM,KAAK,GAAG,EAAE;QACzB2F,KAAK,CACH,yCAAyC9F,QAAQ,CAACwJ,OAAO,EAC3D,CAAC;MACH;IACF;EACF,CAAC;EAED,OAAO;IAAEd,MAAM;IAAEF,WAAW;IAAEC;EAAW,CAAC;AAC5C,CAAC;AAED,iEAAeP,aAAa;;;;;;;;;;;;;;;;;;AC7C6B;AAC/B;AACqD;AAG/E;AACA,MAAMuB,eAAe,GAAGA,CACtBnJ,QAAgB,EAChBoJ,QAA0C,EAC1CrK,SAAiB,KACS;EAC1B,MAAM,CAACwE,KAAK,EAAE8F,QAAQ,CAAC,GAAGlG,+CAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACvD,IAAI,EAAE+C,OAAO,CAAC,GAAGQ,+CAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACT,GAAG,EAAE4G,MAAM,CAAC,GAAGnG,+CAAQ,CAAwB,IAAI,CAAC;EAC3D,MAAM,CAAC0C,SAAS,EAAE0D,YAAY,CAAC,GAAGpG,+CAAQ,CAAoB,EAAE,CAAC;EACjE,MAAM,CAAC2C,SAAS,EAAE0D,YAAY,CAAC,GAAGrG,+CAAQ,CAAS,CAAC,CAAC;;EAErD;EACA,MAAMsG,QAAQ,GAAG3B,kDAAW,CAAC,YAAY;IACvC,IAAI;MACF,MAAMlI,IAAI,GAAG,MAAMG,sDAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;MACtC,IAAGJ,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK8J,SAAS,EAAC;QACrC/G,OAAO,CAAC/C,IAAI,CAAC;MACf;IAEF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACa,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM2J,YAAY,GAAG7B,kDAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMpI,QAAQ,GAAG,MAAMQ,sDAAO,CAACF,QAAQ,CAAC;MACxCsJ,MAAM,CAAC5J,QAAQ,CAAC;MAChB2J,QAAQ,CAAC3J,QAAQ,CAACsD,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,OAAO7D,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACa,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM6E,UAAU,GAAG,MAAAA,CAAOvE,SAAiB,EAAEC,SAAiB,KAAK;IACjE,IAAI;MACF,MAAMH,0DAAW,CAACJ,QAAQ,EAAEM,SAAS,EAAEC,SAAS,CAAC;MACjDiF,KAAK,CAAC,mBAAmB,CAAC;MAC1BpE,MAAM,CAACwI,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAO1K,KAAc,EAAE;MACvB;MACA,IAAIN,yDAAkB,CAACM,KAAK,CAAC,EAAE;QAC7B,MAAMU,MAAM,GAAGV,KAAK,CAACO,QAAQ,GAAGP,KAAK,CAACO,QAAQ,CAACG,MAAM,GAAG,IAAI;QAE5D,IAAIA,MAAM,KAAK,GAAG,EAAE;UAClB2F,KAAK,CAAC,mBAAmB,CAAC;QAC5B,CAAC,MAAM,IAAI3F,MAAM,KAAK,GAAG,EAAE;UACzB2F,KAAK,CAAC,qBAAqB,CAAC;QAC9B,CAAC,MAAM;UACLpG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC;QAC7C;MACF,CAAC,MAAM;QACL;QACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAAC;MAC3C;IACF;EACF,CAAC;;EAED;EACA,MAAM2K,WAAW,GAAGhC,kDAAW,CAAC,YAAY;IAC1C,IAAI;MACF,MAAMpI,QAAQ,GAAG,MAAMO,sDAAO,CAACD,QAAQ,CAAC,CAAC,CAAC;MAC1C,IAAI8F,SAAS,GAAG,CAAC;MACjByD,YAAY,CAAC7J,QAAQ,CAAC;MACtB,KAAK,IAAIqK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrK,QAAQ,CAACyH,MAAM,EAAE4C,CAAC,EAAE,EAAE;QACxC,IAAIrK,QAAQ,CAACqK,CAAC,CAAC,CAACrJ,eAAe,KAAK,CAAC,EAAE;UACrCoF,SAAS,EAAE;QACb;MACF;MACA0D,YAAY,CAAC1D,SAAS,CAAC;IACzB,CAAC,CAAC,OAAO3G,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACa,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM+F,YAAY,GAAG,MAAAA,CAAOvF,OAAe,EAAEC,QAAgB,KAAK;IAChE,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMW,uDAAQ,CAACL,QAAQ,EAAEQ,OAAO,EAAEC,QAAQ,CAAC;MAC5DqJ,WAAW,CAAC,CAAC;MACbV,QAAQ,CAAC1J,QAAQ,CAACG,MAAM,CAAC;MACzBuB,MAAM,CAACwI,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAO1K,KAAc,EAAE;MACvB,IAAIN,yDAAkB,CAACM,KAAK,CAAC,EAAE;QAC7B;QACA,MAAMU,MAAM,GAAGV,KAAK,CAACO,QAAQ,EAAEG,MAAM;QACrC,IAAIA,MAAM,KAAK,GAAG,EAAE;UAClB;UACA2F,KAAK,CAAC,WAAW,CAAC;QACpB,CAAC,MAAM,IAAI3F,MAAM,KAAK,GAAG,EAAE;UACzB2F,KAAK,CAAC,cAAc,CAAC;QACvB,CAAC,MAAM;UACLpG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAAC;QAC1C;MACF,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAAC;MAC3C;IACF;EACF,CAAC;EAED0I,gDAAS,CAAC,MAAM;IACd4B,QAAQ,CAAC,CAAC;IACVE,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACF,QAAQ,EAAEE,YAAY,CAAC,CAAC;;EAE5B;EACA9B,gDAAS,CAAC,MAAM;IACd,IAAItE,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,MAAM,EAAE;MAClEuG,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACvG,KAAK,EAAEuG,WAAW,CAAC,CAAC;EAExB,OAAO;IACLlK,IAAI;IACJ8C,GAAG;IACHa,KAAK;IACLsC,SAAS;IACTC,SAAS;IACT2D,QAAQ;IACRE,YAAY;IACZ9E,UAAU;IACVkB,YAAY;IACZpD;EACF,CAAC;AACH,CAAC;AAED,iEAAewG,eAAe;;;;;;;;;;;;;;;;;;;;;;;ACtIkC;AACjB;AACc;AACG;AACR;AACR;AACN;AAAA;AACA;;AAE1C,MAAMa,YAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMxG,QAAQ,GAAGmF,6DAAW,CAAC,CAAC;;EAE9B;EACA,IAAIsB,GAAG,GAAG,IAAIC,GAAG,CAAC9I,MAAM,CAACwI,QAAQ,CAACO,IAAI,CAAC;EACvC,IAAInK,QAAQ,GAAG8E,MAAM,CAACmF,GAAG,CAACG,QAAQ,CAAC3I,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAM1C,SAAS,GAAG+F,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;;EAE7D;EACA,MAAM,CAACL,OAAO,EAAE0F,UAAU,CAAC,GAAGlH,+CAAQ,CAAS,EAAE,CAAC;;EAElD;EACA,MAAMyB,mBAAmB,GAAIQ,CAAmC,IAAK;IACnEiF,UAAU,CAACjF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM8D,QAAQ,GAAIkB,cAAsB,IAAK;IAC3C,IAAIA,cAAc,KAAK,GAAG,EAAE;MAC1B9E,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,MAAM,IAAI8E,cAAc,KAAK,GAAG,EAAE;MACjC9E,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAM;IACJ5F,IAAI;IACJ8C,GAAG;IACHa,KAAK;IACLsC,SAAS;IACTC,SAAS;IACTC,YAAY;IACZlB,UAAU;IACVlC;EACF,CAAC,GAAGwG,0EAAe,CAACnJ,QAAQ,EAAEoJ,QAAQ,EAAErK,SAAS,CAAC;;EAElD;EACA,MAAM;IAAE6G;EAAa,CAAC,GAAGqC,wDAAW,CAAE1E,KAAgB,IAAKA,KAAK,CAACgH,IAAI,CAAC,CAAC,CAAC;;EAExE1C,gDAAS,CAAC,MAAM;IACd,IAAIjC,YAAY,KAAK,IAAI,EAAE;MACzBJ,KAAK,CAAC,iBAAiB,CAAC;MACxBhC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACoC,YAAY,EAAElD,GAAG,EAAEc,QAAQ,CAAC,CAAC;EAEjC,IAAId,GAAG,KAAK,IAAI,EAAE;IAChB,oBAAO7B,sDAAA,CAACqB,iEAAO,IAAE,CAAC;EACpB;EAEA;IAAA;IACE;IACArB,sDAAA;MACE+B,SAAS,EACPW,KAAK,KAAK,SAAS,GACf,aAAa,GACbA,KAAK,KAAK,MAAM,GAChB,UAAU,GACV,UACL;MAAAzB,QAAA,eAEDjB,sDAAA;QAAAiB,QAAA,EAEGY,GAAG,gBACF3B,uDAAA,CAAAoB,uDAAA;UAAAL,QAAA,gBACEjB,sDAAA,CAAC6D,0EAAc;YACblB,QAAQ,EAAEA,QAAS;YACnB5D,IAAI,EAAEA,IAAK;YACX8C,GAAG,EAAEA,GAAI;YACTa,KAAK,EAAEA,KAAM;YACbZ,OAAO,EAAEA,OAAQ;YACjBgC,OAAO,EAAEA,OAAQ;YACjBC,mBAAmB,EAAEA,mBAAoB;YACzCC,UAAU,EAAEA;UAAW,CACxB,CAAC,eAEFhE,sDAAA,CAAC8E,sEAAU;YACTnC,QAAQ,EAAEA,QAAS;YACnBoC,YAAY,EAAEA,YAAa;YAC3BC,SAAS,EAAEA,SAAU;YACrBC,SAAS,EAAEA,SAAU;YACrBvC,KAAK,EAAEA,KAAM;YACbwC,YAAY,EAAEA,YAAa;YAC3BpB,OAAO,EAAEA,OAAQ;YACjBC,mBAAmB,EAAEA;UAAoB,CAC1C,CAAC;QAAA,CACF,CAAC,gBAEH/D,sDAAA,CAACqB,iEAAO,IAAE;MACX,CACE;IAAC,CACH;EAAC;AAEV,CAAC;AAED,iEAAe8H,YAAY;;;;;;;;;;;;;;AC3GY;AAGhC,MAAM3G,aAAa,GAAGmH,yDAAM,CAACC,GAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBC,KAAK,IAAIA,KAAK,CAACnH,KAAK,KAAK,SAAS,GAAG,SAAS,GAAGmH,KAAK,CAACnH,KAAK,KAAK,MAAM,GAAG,wBAAwB,GAAG,SAAS;AAClI;AACA;AACA,+BAA+BmH,KAAK,IAAIA,KAAK,CAACnH,KAAK,KAAK,SAAS,GAAG,SAAS,GAC/DmH,KAAK,CAACnH,KAAK,KAAK,MAAM,GAAG,wBAAwB,GACjD,SAAS;AACvB,4BAA4BmH,KAAK,IAAIA,KAAK,CAACnH,KAAK,KAAK,SAAS,GAAG,yBAAyB,GAChFmH,KAAK,CAACnH,KAAK,KAAK,MAAM,GAAG,uBAAuB,GAChD,sBAAsB;AAChC;AACA,iBAAiBmH,KAAK,IAAIA,KAAK,CAACnH,KAAK,KAAK,SAAS,GAAG,yBAAyB,GACjEmH,KAAK,CAACnH,KAAK,KAAK,MAAM,GAAG,uBAAuB,GAChD,sBAAsB;AACpC,4BAA4BmH,KAAK,IAAIA,KAAK,CAACnH,KAAK,KAAK,SAAS,GAAG,yBAAyB,GAC5EmH,KAAK,CAACnH,KAAK,KAAK,MAAM,GAAG,uBAAuB,GAChD,sBAAsB;AACplTsC;AAIhC,MAAMkB,cAAc,GAAG+F,yDAAM,CAACC,GAAwaAAcC,KAAK,IACbA,KAAK,CAACC,UAAU,GAAG,oBAAoB,GAAG,sBAAsB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAcD,KAAK,IACbA,KAAK,CAACC,UAAU,GAAG,wBAAwsources":["webpack://pes-fe/./src/apis/problem/getProbContent.ts","webpack://pes-fe/./src/apis/problem/getProbTitle.ts","webpack://pes-fe/./src/apis/problem/postSubmitCode.ts","webpack://pes-fe/./src/apis/question/getCode.ts","webpack://pes-fe/./src/apis/question/getFeed.ts","webpack://pes-fe/./src/apis/question/getQues.ts","webpack://pes-fe/./src/apis/question/index.ts","webpack://pes-fe/./src/apis/question/postAnswers.ts","webpack://pes-fe/./src/apis/question/postFeed.ts","webpack://pes-fe/./src/components/common/Common.tsx","webpack://pes-fe/./src/components/question/ProbCode.tsx","webpack://pes-fe/./src/components/question/ProbHeader.tsx","webpack://pes-fe/./src/components/question/RenderAnswerUI.tsx","webpack://pes-fe/./src/components/question/RenderFeed.tsx","webpack://pes-fe/./src/components/question/index.ts","webpack://pes-fe/./src/hooks/problem/index.ts","webpack://pes-fe/./src/hooks/problem/useProbContent.ts","webpack://pes-fe/./src/hooks/problem/useProbPage.ts","webpack://pes-fe/./src/hooks/problem/useProbTitle.ts","webpack://pes-fe/./src/hooks/problem/useSubmitCode.ts","webpack://pes-fe/./src/hooks/question/useQuestionHook.ts","webpack://pes-fe/./src/pages/question/questionPage.tsx","webpack://pes-fe/./src/styles/styledComponent/Problem-styled.tsx","webpack://pes-fe/./src/styles/styledComponent/Question-styled.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// 문제 내용 get 요청\r\nconst getProbContent = async (problemId: number) => {\r\n  try {\r\n    const { data } = await axios.get(`/api2/problem/${problemId}`, {\r\n      withCredentials: true,\r\n    });\r\n    return data;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getProbContent;\r\n","import axios from \"axios\";\r\n\r\n// 문제 제목 get 요청\r\nconst getProbTitle = async (problemId: number) => {\r\n  try {\r\n    const res = await axios.get(`/api2/problemtitle/${problemId}`, {\r\n      withCredentials: true,\r\n    });\r\n    return res.data;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"problemId:\", problemId);\r\n};\r\n\r\nexport default getProbTitle;\r\n","import axios from \"axios\";\r\n\r\n// 코드 제출 post 요청\r\nconst postSubmitCode = async (request: string, problemId: number) => {\r\n  try {\r\n    const response = await axios.post(`/api2/submit/${problemId}`, {\r\n      code: request,\r\n      problemId: problemId,\r\n    });\r\n    return { data: response.data, status: response.status };\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n\r\n    // error가 AxiosError인지 확인\r\n    if (axios.isAxiosError(error)) {\r\n      return { status: error.response ? error.response.status : 500 };\r\n    } else {\r\n      // 예상하지 못한 다른 에러의 경우\r\n      return { status: 500 };\r\n    }\r\n  }\r\n};\r\n\r\nexport default postSubmitCode;\r\n","import axios from \"axios\";\r\n\r\n// 사용자가 작성한 코드 불러오기 (get)\r\nconst getCode = async (answerId: number): Promise<string> => {\r\n  try {\r\n    const { data: response } = await axios.get(`/api2/question/${answerId}`, {\r\n      withCredentials: true,\r\n    });\r\n    return response.code;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default getCode;\r\n","import axios from \"axios\";\r\nimport { CommentListType } from \"model/questionType\";\r\n\r\n// 댓글 불러오기 (get)\r\nconst getFeed = async (answerId: number) => {\r\n  try {\r\n    const res = await axios.get<CommentListType[]>(`/api/comment/${answerId}`, {\r\n      withCredentials: true,\r\n    });\r\n    return res.data;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default getFeed;\r\n","import axios from \"axios\";\r\nimport { QuesAnswerType } from \"model/questionType\";\r\n\r\n// 질문, 답변 블러오기 (get)\r\nconst getQues = async (answerId: number): Promise<QuesAnswerType> => {\r\n  try {\r\n    const response = await axios.get<QuesAnswerType>(\r\n      `/api/answer/${answerId}`,\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error: unknown) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default getQues;\r\n","// apis/question 디렉토리 export 관리\r\nexport { default as getCode } from './getCode';\r\nexport { default as getFeed } from './getFeed';\r\nexport { default as getQues } from './getQues';\r\nexport { default as postAnswers } from './postAnswers';\r\nexport { default as postFeed } from './postFeed';","import axios from \"axios\";\r\n\r\n// 질문 답변하기 (post)\r\nconst postAnswers = async (\r\n  answerId: number,\r\n  answerFst: string,\r\n  answerSec: string\r\n): Promise<void> => {\r\n  try {\r\n    await axios.post(`/api/answer/${answerId}`, {\r\n      answerFst,\r\n      answerSec,\r\n    });\r\n  } catch (error: unknown) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default postAnswers;\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\n// 댓글 달기 (post)\r\nconst postFeed = async (\r\n  answerId: number,\r\n  comment: string,\r\n  selected: number\r\n): Promise<AxiosResponse> => {\r\n  try {\r\n    return await axios.post(`/api/comment/${answerId}`, {\r\n      comment, // 댓글\r\n      commentPassFail: selected,\r\n    });\r\n  } catch (error: unknown) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default postFeed;\r\n","import React from \"react\";\r\n// ===== 공용 함수 지정 =====\r\n\r\n// --- Time에서 \"T\" 제거하여 표시하는 함수\r\nexport const transferTime = (time: string | null | undefined) => {\r\n  if (!time) return \"\"; // 시간이 없는 경우 처리\r\n\r\n  return time.replace(\"T\", \" \");\r\n};\r\n\r\n// --- 뒤로가기 함수\r\nexport const goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\n// --- '\\n' 기준으로 줄바꿈하는 함수\r\n// React.ReactNode : JSX반환타입\r\nexport const renderNewlines = (text: string): React.ReactNode => {\r\n  return text.split(\"\\n\").map((line, index) => (\r\n    <React.Fragment key={index}>\r\n      {line}\r\n      <br />\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\n// --- '\\n\\n' 기준으로 줄바꿈하는 함수\r\nexport const renderStyledNewlines = (text: string): React.ReactNode => {\r\n  const lines = text.split(\"\\n\\n\"); // 각 줄을 분할\r\n  return lines.map((line, index) => {\r\n    return (\r\n      <span key={index}>\r\n        {line}\r\n        <br />\r\n      </span>\r\n    );\r\n  });\r\n};\r\n","import React, {Suspense } from \"react\";\r\nimport { renderNewlines } from \"components/common/Common\";\r\nimport { ProbCodeProps } from \"model/questionType\";\r\nimport Loading from \"components/common/Loading\";\r\nconst CodeEditor = React.lazy(() => import(\"components/problem/CodeEditor\")); // Lazy Loading 적용\r\n\r\n// 작성했던 코드 출력 컴포넌트\r\nconst ProbCode: React.FC<ProbCodeProps> = ({\r\n  FstHandler,\r\n  SecHandler,\r\n  code,\r\n  qnA,\r\n  setCode,\r\n  problemId\r\n}) => {\r\n  return (\r\n    <div className=\"code_question_container\">\r\n\r\n      {/* 좌측 코드에디터 컴포넌트 */}\r\n      <div className=\"code_container\">\r\n\r\n        {/* 에디터로 수정_by성임 - Lazy Loading 적용*/}\r\n        <Suspense fallback={<Loading/>}>\r\n          <CodeEditor\r\n            onChange={setCode}\r\n            readOnly={true}\r\n            code={code}\r\n          />\r\n        </Suspense>\r\n      </div>\r\n\r\n      {/* 우측 질문답변 컴포넌트 */}\r\n      <div className=\"question_container\">\r\n        {qnA.answerState === \"question\" ? (   // 기존 : !qnA.answerState || !qnA.answerSec\r\n          // answerState: question (qnA만 있음, 답변해야 하는 상태)\r\n          <>\r\n            <div className=\"question_layout\">\r\n              <div className=\"question_header\">\r\n                <div className=\"question_id\">질문 1</div>\r\n                <div className=\"header_title\">{qnA.questionContentFst}</div>\r\n              </div>\r\n              <textarea className=\"answer_input\" onChange={FstHandler} />\r\n            </div>\r\n\r\n            <div className=\"question_layout\">\r\n              <div className=\"question_header\">\r\n                <div className=\"question_id\">질문 2</div>\r\n                <div className=\"header_title\">{qnA.questionContentSec}</div>\r\n              </div>\r\n              <textarea className=\"answer_input\" onChange={SecHandler} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          // < answerState 참고 >\r\n          // answerState: comment (qnA O / qnA.answerFst, qnA.answerSec O / feedback 0개 or 1개)\r\n          // answerState: success\r\n          // answerState: fail\r\n          <>\r\n            <div className=\"question_header\">\r\n              <div className=\"question_id\">질문 1</div>\r\n              <div className=\"header_title\">{qnA.questionContentFst}</div>\r\n            </div>\r\n\r\n            {/* 줄바꿈 반영하기_ by성임 */}\r\n            <div className=\"answer_input display\">\r\n              {renderNewlines(qnA.answerFst)}\r\n            </div>\r\n\r\n            <div className=\"question_header\">\r\n              <div className=\"question_id\">질문 2</div>\r\n              <div className=\"header_title\">{qnA.questionContentSec}</div>\r\n            </div>\r\n            <div className=\"answer_input display\">\r\n              {renderNewlines(qnA.answerSec)}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProbCode;\r\n","import React, { useState } from \"react\";\r\nimport useProbPage from \"hooks/problem/useProbPage\";\r\nimport { renderNewlines } from \"components/common/Common\";\r\nimport { StyledProblem } from \"styles/styledComponent/Problem-styled\";\r\nimport { ProbHeaderProps } from \"model/problemType\";\r\n\r\n\r\n\r\n// 문제 헤더 컴포넌트\r\nconst ProbHeader: React.FC<ProbHeaderProps> = ({ state, navigate, problemId }) => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState<boolean>(false);\r\n\r\n  // problem 제목, 내용 HOOK 호출 - null이나 undefined일때 -1전달\r\n  const { title, problem } = useProbPage(problemId ?? -1);\r\n\r\n  // 문제보기 dropdown 상태관리 함수\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState ) => !prevState );\r\n  }\r\n\r\n\r\n  // title과 problem이 null일 경우 기본값 설정 - TODO: 중복 수정하기\r\n  const titleText = title ? title.problemTitle : \"제목 없음\";\r\n  const problemContent = problem ? problem.problemContent : \"문제 내용 없음\";\r\n  const sampleInputs = problem ? problem.sampleInputs : [];\r\n  const sampleOutputs = problem ? problem.sampleOutputs : [];\r\n\r\n  // problemId가 null이거나 -1인 경우 예외처리\r\n  if (problemId === null || problemId === -1) {\r\n    return (\r\n      <StyledProblem className=\"problem_header_section\" state={state}>\r\n        <div className=\"problem_header\">\r\n          <div className=\"problem_group\">\r\n            <div className=\"problem_id\">알수없음</div>\r\n            <div className=\"header_title\">제목 없음</div>\r\n            <div className=\"header_answer_state\">알수없음</div>\r\n          </div>\r\n        </div>\r\n      </StyledProblem>\r\n    );\r\n  }\r\n  // 정상적인 경우\r\n  return (\r\n    <StyledProblem className=\"problem_header_section\" state={state}>\r\n      <div className=\"problem_header\">\r\n        <div className=\"problem_group\">\r\n          <div className=\"problem_id\">\r\n            문제{problemId !== null ? problemId : \"정보 없음\"}\r\n          </div>\r\n          <div className=\"header_title\">{titleText}</div>\r\n          <div className=\"header_answer_state\">\r\n            {state === \"success\"\r\n              ? \"성공\"\r\n              : state === \"fail\"\r\n              ? \"실패\"\r\n              : \"미완료\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button_group\">\r\n        <button className=\"button_problem\" onClick={toggleDropdown}>\r\n          문제보기\r\n          {isDropdownOpen && (\r\n            <div className=\"dropdown_content\">\r\n              {/* 띄워쓰기 표현_ by성임*/}\r\n              <div className=\"content\" style={{ whiteSpace: \"pre\" }}>\r\n                {/* renderStyledNewlines: '\\n' 기준으로 줄바꿈 함수 */}\r\n                {renderNewlines(problemContent)}\r\n              </div>\r\n\r\n              <div className=\"sample_inputs\">\r\n                <h3>Sample Inputs:</h3>\r\n                {sampleInputs.map((input, index) => (\r\n                    <React.Fragment key={index}>\r\n                      {renderNewlines(input)}\r\n                    </React.Fragment>\r\n                  ))}\r\n              </div>\r\n\r\n              <div className=\"sample_outputs\" style={{ whiteSpace: \"pre\" }}>\r\n                <h3>Sample Outputs:</h3>\r\n                {sampleOutputs.map((output, index) => (\r\n                    <React.Fragment key={index}>\r\n                      {renderNewlines(output)}\r\n                    </React.Fragment>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </button>\r\n        {(state === \"success\" || state === \"fail\") && (\r\n          <button\r\n            className=\"button_solution\"\r\n            onClick={() => navigate(`/solution/${problemId}`)}\r\n          >\r\n            다른 풀이 보기\r\n          </button>\r\n        )}\r\n      </div>\r\n    </StyledProblem>\r\n  );\r\n};\r\n\r\nexport default ProbHeader;\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport {ProbHeader, ProbCode} from \"components/question\";\r\nimport { StyledQuestion } from \"styles/styledComponent/Question-styled\";\r\nimport { RenderAnswerUIProps } from \"model/questionType\";\r\n\r\n// 답변(answer) 렌더링 컴포넌트\r\nconst RenderAnswerUI: React.FC<RenderAnswerUIProps> = ({\r\n  navigate,\r\n  code,\r\n  qnA,\r\n  state,\r\n  setCode,\r\n  textFst,\r\n  handleTextFstChange, // 질문1 입력 핸들러\r\n  postAnswer,\r\n}) => {\r\n\r\n  // problemId 가져오기 - 이동하기\r\n  const problemId = Number(sessionStorage.getItem(\"problemId\"));\r\n\r\n  const [textSec, setTextSec] = useState<string>(\"\");\r\n\r\n  // 질문2 입력 핸들러\r\n  const handleTextSecChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setTextSec(e.target.value);\r\n  };\r\n\r\n  // 답변 제출 함수\r\n  const submitAnswer = () => {\r\n\r\n    if (!textFst || !textSec) { // 수정: !textSec.current -> !textSec\r\n      alert(\"내용을 입력해주세요!\");\r\n    } else {\r\n      const isConfirmed = window.confirm(\r\n        \"수정이 불가능합니다. 정말 제출하시겠습니까?\"\r\n      );\r\n\r\n      if (isConfirmed) {\r\n        postAnswer(textFst, textSec); // 수정: textFst.current, textSec.current -> textFst.current.value, textSec\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledQuestion className=\"problem_answer_section\">\r\n      {/* 문제 헤더 컴포넌트 */}\r\n      <ProbHeader state={state} navigate={navigate} problemId={problemId}/>  {/* 수정: code -> state*/}\r\n      \r\n      {/* 코드 출력 컴포넌트 */}\r\n      {qnA && (\r\n        <ProbCode\r\n          FstHandler={handleTextFstChange}\r\n          SecHandler={handleTextSecChange}\r\n          code={code}\r\n          qnA={qnA}\r\n          setCode={setCode}\r\n          problemId={problemId}\r\n        />\r\n      )}\r\n\r\n      {state === \"question\" && (!qnA.answerFst || !qnA.answerSec) && (\r\n        <div className=\"btn_container\">\r\n          <button className=\"button answer\" onClick={submitAnswer}>\r\n            답변하기\r\n          </button>\r\n        </div>\r\n      )}\r\n    </StyledQuestion>\r\n  );\r\n};\r\n\r\nexport default RenderAnswerUI;\r\n","import React, { useState } from \"react\";\r\nimport { renderNewlines } from \"components/common/Common\";\r\nimport { StyledQuestion } from \"styles/styledComponent/Question-styled\";\r\nimport { RenderFeedProps } from \"model/questionType\"; \r\n\r\n// feedback 렌더링 컴포넌트\r\nconst RenderFeed: React.FC<RenderFeedProps> = ({  // RenderFeed props 타입\r\n  navigate,\r\n  state,\r\n  textFst,\r\n  handleTextFstChange,\r\n  memberStatus,\r\n  feedbacks,\r\n  passCount,\r\n  postFeedback\r\n}) => {\r\n  const [buttonColor1, setButtonColor1] = useState<string>(\"rgba(4, 202, 0, 0.6)\");\r\n  const [buttonColor2, setButtonColor2] = useState<string>(\"rgba(244, 117, 117, 0.6)\");\r\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n\r\n  // pass버튼 클릭 핸들러\r\n  const passButtonClick = () => {\r\n    setButtonColor2(\"rgba(244, 117, 117, 0.6)\"); // 다른 버튼 색상 초기화\r\n    setButtonColor1(\"rgba(4, 202, 0, 1)\"); // 현재 버튼 색깔 변경\r\n  };\r\n\r\n  // fail버튼 클릭 핸들러\r\n  const failButtonClick = () => {\r\n    setButtonColor1(\"rgba(4, 202, 0, 0.6)\"); // 다른 버튼 색상 초기화\r\n    setButtonColor2(\"rgba(244, 117, 117, 1)\"); // 현재 버튼 색깔 변경\r\n  };\r\n\r\n  // pass, fail 선택 핸들러\r\n  const handleOption = (option: string) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n\r\n  // 댓글 제출 함수 - TODO : return확인 요함\r\n  const submitComment = () => {\r\n    if (!textFst || !textFst) {\r\n      alert(\"내용을 입력해주세요!\");\r\n      return;\r\n    }\r\n    if (!selectedOption) {\r\n      alert(\"통과 여부를 선택해주세요!\");\r\n      return;\r\n    } \r\n    \r\n    const isConfirmed = window.confirm(\"수정이 불가능합니다. 정말 제출하시겠습니까?\");\r\n    if (isConfirmed) {\r\n      postFeedback(textFst, parseInt(selectedOption, 10));\r\n    }\r\n  };\r\n\r\n  // 객체 값을 배열로 변환\r\n  const feedbackArray = feedbacks ? Object.values(feedbacks) : [];\r\n\r\n  return (\r\n    <StyledQuestion className=\"feedback_section_1\">\r\n      <hr\r\n        style={{\r\n          height: 2,\r\n          border: \"none\",\r\n          backgroundColor: \"gray\",\r\n          marginTop: 100,\r\n        }}\r\n      ></hr>\r\n\r\n      <div className=\"feedback_section\">\r\n        {/* 신입생 : comment상태일때, feedback 없을때 */}\r\n        {memberStatus === \"신입생\" &&\r\n          feedbackArray.length <= 0 &&\r\n          state === \"comment\" && (\r\n            <div className=\"feedback_waiting_bar\" onClick={() => navigate(`/`)}>\r\n              피드백을 기다리는 중입니다...\r\n            </div>\r\n          )}\r\n\r\n        {/* 신입생 : feedback 있을때 */}\r\n        {feedbackArray.length > 0 &&\r\n          feedbackArray.map((feedback, index) => (\r\n            <div className=\"feedback_container\" key={index}>\r\n              {feedback.commentPassFail === 1 ? (\r\n                <div className=\"feedback_result_pass\">PASS</div>\r\n              ) : (\r\n                <div className=\"feedback_result_fail\">FAIL</div>\r\n              )}\r\n              <div className=\"question_header\">\r\n                <div className=\"feedback_index\">{`Feedback ${index + 1}`}</div>\r\n                <div className=\"feedback_writer\">{feedback.writerGen}기</div>\r\n                <div className=\"feedback_writer\">{feedback.writerName}</div>\r\n              </div>\r\n\r\n              {/* 줄바꿈 반영하기_ by성임 */}\r\n              <div className=\"feedback_content display\">\r\n                {renderNewlines(feedback.commentContent)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n        {/* 재학생_ feedback 선택 */}\r\n        {(memberStatus === \"재학생\" || memberStatus === \"관리자\") &&\r\n          feedbackArray.length <= 1 &&\r\n          state === \"comment\" && (\r\n            <div className=\"feed_section\">\r\n              <div className=\"question_header\">\r\n                <div className=\"feedback_index\">Feedback</div>\r\n              </div>\r\n              <textarea\r\n                className=\"feedback_content input\"\r\n                placeholder=\"피드백을 입력해주세요.\"\r\n                onChange={handleTextFstChange}\r\n              />\r\n              {/* PASS FAIL 선택 */}\r\n              <div className=\"feedback_select_section\">\r\n                <div className=\"button_container\">\r\n                  <div\r\n                    className=\"select_button pass\"\r\n                    // isSelected={selectedOption === \"1\"}\r\n                    style={{ color: buttonColor1 }}\r\n                    onClick={() => {\r\n                      handleOption(\"1\");\r\n                      passButtonClick();\r\n                    }}\r\n                  >\r\n                    PASS\r\n                  </div>\r\n                  <div\r\n                    className=\"select_button fail\"\r\n                    // isSelected={selectedOption === \"0\"}\r\n                    style={{ color: buttonColor2 }}\r\n                    onClick={() => {\r\n                      handleOption(\"0\");\r\n                      failButtonClick();\r\n                    }}\r\n                  >\r\n                    FAIL\r\n                  </div>\r\n                </div>\r\n                <p className=\"select_comment\">PASS 혹은 FAIL을 선택해주세요.</p>\r\n              </div>\r\n              <button className=\"feedback_button\" onClick={submitComment}>\r\n                답변하기\r\n              </button>\r\n            </div>\r\n          )}\r\n      </div>\r\n\r\n      {feedbackArray.length >= 2 && (\r\n        <div className=\"result_container\">\r\n          <div\r\n            className={\r\n              passCount >= 1 && feedbackArray.length > 1\r\n                ? \"result success\"\r\n                : \"result fail\"\r\n            }\r\n            onClick={() => navigate(`/`)}\r\n          >\r\n            {passCount >= 1 && feedbackArray.length > 1\r\n              ? `축하합니다! 성공적으로 통과했습니다!  ( ${passCount}/2 )`\r\n              : `질문테스트에 통과하지 못했습니다.  ( ${passCount}/2 )`}\r\n          </div>\r\n          <p>클릭시 홈화면으로 이동합니다</p>\r\n        </div>\r\n      )}\r\n    </StyledQuestion>\r\n  );\r\n};\r\n\r\nexport default RenderFeed;\r\n","// components/question 디렉토리 export 관리\r\nexport { default as ProbCode } from './ProbCode';\r\nexport { default as ProbHeader } from './ProbHeader';\r\nexport { default as RenderAnswerUI } from './RenderAnswerUI';\r\nexport { default as RenderFeed } from './RenderFeed';\r\n","// hooks/problem 디렉토리 export 관리\r\nexport { default as useProbContent } from './useProbContent';\r\nexport { default as useProbTitle } from './useProbTitle';\r\nexport { default as useSubmitCode } from './useSubmitCode';\r\n\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport getProbContent from \"apis/problem/getProbContent\";\r\nimport { ProblemContent } from \"model/problemType\";\r\n\r\n// 문제 내용 get HOOK\r\nconst useProbContent = (problemId: number): ProblemContent | null => {\r\n  const [problem, setProblem] = useState<ProblemContent | null>(null);\r\n\r\n  const fetchProblem = useCallback(async () => {\r\n    try {\r\n      const response = await getProbContent(problemId);\r\n      setProblem(response);\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n    }\r\n  }, [problemId]);\r\n\r\n  useEffect(() => {\r\n    fetchProblem();\r\n  }, [fetchProblem]);\r\n\r\n  return problem;\r\n};\r\n\r\nexport default useProbContent;\r\n","// 문제 관련 HOOK 반환타입\r\nimport {useProbContent, useProbTitle, useSubmitCode} from \"./index\";\r\nimport { UseProbPageReturnType } from \"model/problemType\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\";\r\n\r\n// 문제 관련 HOOK 관리 - ProblemPage에 사용\r\nconst useProbPage = (problemId: number): UseProbPageReturnType => {\r\n  const title = useProbTitle(problemId); // 문제 제목 get HOOK\r\n  const problem = useProbContent(problemId); // 문제 내용 get HOOK\r\n  const { textHandler, submitCode, detail } = useSubmitCode(problemId); // 문제 post 요청\r\n  const { status } = useSelector((state: RootState) => state.sign); // redux에서 가져오기\r\n\r\n  const isLogin = status;\r\n\r\n  return {\r\n    title,\r\n    problem,\r\n    detail,\r\n    isLogin,\r\n    textHandler,\r\n    submitCode\r\n  };\r\n};\r\n\r\nexport default useProbPage;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport getProbTitle from \"apis/problem/getProbTitle\";\r\nimport { ProblemTitle } from \"model/problemType\";\r\n\r\n// 문제 제목 get HOOK\r\nconst useProbTitle = (problemId: number): ProblemTitle | null => {\r\n  const [title, setTitle] = useState<ProblemTitle | null>(null);\r\n\r\n  // problemId가 변경되지 않는 한, 동일한 함수로 재사용\r\n  const fetchTitle = useCallback(async () => {\r\n    try {\r\n      const titleData = await getProbTitle(problemId);\r\n      if (titleData) {\r\n        setTitle(titleData); // titleData가 존재할 때만 state 업데이트\r\n      } else {\r\n        setTitle(null);\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error(error);\r\n      setTitle(null);\r\n    }\r\n  }, [problemId]);\r\n\r\n  useEffect(() => {\r\n    fetchTitle();\r\n  }, [fetchTitle]);\r\n\r\n  return title;\r\n};\r\n\r\nexport default useProbTitle;\r\n","import { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport postSubmitCode from \"apis/problem/postSubmitCode\";\r\n\r\n// 문제 post 요청\r\nconst useSubmitCode = (problemId: number) => {\r\n  const navigate = useNavigate();\r\n  const text = useRef<string>(\"\"); // 코드 입력을 위한 useRef\r\n  const [detail, setDetail] = useState<string | null>(null); // 틀린 이유 저장하는 state\r\n\r\n  // 수정코드_by성임\r\n  function textHandler(newCode: string) {\r\n    text.current = newCode;\r\n  }\r\n\r\n  const submitCode = async () => {\r\n    if (!text.current) {\r\n      alert(\"코드를 입력해주세요!\");\r\n    } else {\r\n      const { data: response, status } = await postSubmitCode(\r\n        text.current,\r\n        problemId\r\n      );\r\n\r\n      if (!response) {\r\n        alert(\"오류!\");\r\n      } else if (status === 201) {\r\n        console.log(response);\r\n        alert(\"문제를 맞혔습니다! 질의응답 페이지로 이동합니다.\");\r\n        sessionStorage.setItem(\"problemId\", problemId.toString());\r\n        navigate(`/question/${response.answer_id}`);\r\n      } else if (status === 202) {\r\n        setDetail(response.detail);\r\n        alert(\"문제를 틀렸습니다! 다시 풀어보세요.\");\r\n      } else if (status === 500) {\r\n        alert(\r\n          `server가 응답하지 않네요! 관리자에게 상황을 공유해주세요! : ${response.message}`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return { detail, textHandler, submitCode };\r\n};\r\n\r\nexport default useSubmitCode;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport {getFeed, getCode, getQues, postAnswers, postFeed} from \"apis/question\";\r\nimport { CommentListType, QuesAnswerType, UseQuestionHookResult } from \"model/questionType\";\r\n\r\n// 질문테스트(question) 관련 HOOK들 관리\r\nconst useQuestionHook = (\r\n  answerId: number,\r\n  getAlert: (responseStatus: number) => void,\r\n  problemId: number\r\n): UseQuestionHookResult => {\r\n  const [state, setState] = useState<string>(\"\");\r\n  const [code, setCode] = useState<string>(\"\");\r\n  const [qnA, setQnA] = useState<QuesAnswerType | null>(null);\r\n  const [feedbacks, setFeedbacks] = useState<CommentListType[]>([]);\r\n  const [passCount, setPassCount] = useState<number>(0);\r\n\r\n  // 사용자 코드 get HOOK\r\n  const getCodes = useCallback(async () => {\r\n    try {\r\n      const code = await getCode(answerId); // get API 호출\r\n      if(code !== null && code !== undefined){\r\n        setCode(code);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [answerId]);\r\n\r\n  // 질문, 답변 get HOOK\r\n  const getQuestions = useCallback(async () => {\r\n    try {\r\n      const response = await getQues(answerId);\r\n      setQnA(response);\r\n      setState(response.answerState || \"\"); // 기본값으로 빈 문자열 설정\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [answerId]);\r\n\r\n  // 답변 post HOOK\r\n  const postAnswer = async (answerFst: string, answerSec: string) => {\r\n    try {\r\n      await postAnswers(answerId, answerFst, answerSec);\r\n      alert(\"성공적으로 답변을 등록했습니다.\");\r\n      window.location.reload();\r\n    } catch (error: unknown) {\r\n      // error가 AxiosError인지 확인\r\n      if (axios.isAxiosError(error)) {\r\n        const status = error.response ? error.response.status : null;\r\n\r\n        if (status === 400) {\r\n          alert(\"이미 답변이 등록되어 있습니다.\");\r\n        } else if (status === 403) {\r\n          alert(\"접근할 수 있는 사용자가 아닙니다.\");\r\n        } else {\r\n          console.log(\"알 수 없는 서버 오류가 발생했습니다.\", error);\r\n        }\r\n      } else {\r\n        // AxiosError가 아닌 다른 오류 처리\r\n        console.log(\"예상하지 못한 오류가 발생했습니다.\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 댓글 get HOOK\r\n  const getFeedback = useCallback(async () => {\r\n    try {\r\n      const response = await getFeed(answerId); // get API 호출\r\n      let passCount = 0;\r\n      setFeedbacks(response);\r\n      for (let i = 0; i < response.length; i++) {\r\n        if (response[i].commentPassFail === 1) {\r\n          passCount++;\r\n        }\r\n      }\r\n      setPassCount(passCount);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [answerId]);\r\n\r\n  // 댓글 post HOOK\r\n  const postFeedback = async (comment: string, selected: number) => {\r\n    try {\r\n      const response = await postFeed(answerId, comment, selected);\r\n      getFeedback();\r\n      getAlert(response.status);\r\n      window.location.reload();\r\n    } catch (error: unknown) {\r\n      if (axios.isAxiosError(error)) {\r\n        // AxiosError 타입 확인 후 처리\r\n        const status = error.response?.status;\r\n        if (status === 403) {\r\n          // 403에러 예외처리 추가 by.성임\r\n          alert(\"권한이 없습니다!\");\r\n        } else if (status === 400) {\r\n          alert(\"이미 댓글을 달았어요!\");\r\n        } else {\r\n          console.log(\"알 수 없는 오류가 발생했습니다.\", error);\r\n        }\r\n      } else {\r\n        console.log(\"예상하지 못한 오류가 발생했습니다.\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCodes();\r\n    getQuestions();\r\n  }, [getCodes, getQuestions]);\r\n\r\n  // 피드백 가져오기 HOOK\r\n  useEffect(() => {\r\n    if (state === \"comment\" || state === \"success\" || state === \"fail\") {\r\n      getFeedback();\r\n    }\r\n  }, [state, getFeedback]);\r\n\r\n  return {\r\n    code,\r\n    qnA,\r\n    state,\r\n    feedbacks,\r\n    passCount,\r\n    getCodes,\r\n    getQuestions,\r\n    postAnswer,\r\n    postFeedback,\r\n    setCode,\r\n  };\r\n};\r\n\r\nexport default useQuestionHook;\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useQuestionHook from \"hooks/question/useQuestionHook\";\r\nimport RenderAnswerUI from \"components/question/RenderAnswerUI\";\r\nimport RenderFeed from \"components/question/RenderFeed\";\r\nimport Loading from \"components/common/Loading\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"stores/store\"; // RootState 임포트\r\n\r\nconst QuestionPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // questionId 저장 - 사용자 풀이에 사용\r\n  let url = new URL(window.location.href);\r\n  let answerId = Number(url.pathname.split(\"/\")[2]);\r\n\r\n  // problemId 가져오기 - 해당 문제 정보에 사용\r\n  const problemId = Number(sessionStorage.getItem(\"problemId\"));\r\n\r\n  // 첫번재 답변 관리 - useRef로 필요 시점에만 상태 관리\r\n  const [textFst, setTextFst] = useState<string>(\"\");\r\n\r\n  // 첫번재 답변 작성 핸들러\r\n  const handleTextFstChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setTextFst(e.target.value);\r\n  };\r\n\r\n  // 댓글 제출 결과 alert 함수\r\n  const getAlert = (responseStatus: number) => {\r\n    if (responseStatus === 400) {\r\n      alert(\"이미 댓글을 달았습니다.\");\r\n    } else if (responseStatus === 403) {\r\n      alert(\"접근할 수 있는 사용자가 아닙니다.\");\r\n    }\r\n  };\r\n\r\n  // question 관련 HOOK 호출\r\n  const {\r\n    code,\r\n    qnA,\r\n    state,\r\n    feedbacks,\r\n    passCount,\r\n    postFeedback,\r\n    postAnswer,\r\n    setCode,\r\n  } = useQuestionHook(answerId, getAlert, problemId);\r\n\r\n  // useMemberStatus HOOK 호출 -> 수정: sessionStorage 사용 -> redux사용\r\n  const { memberStatus } = useSelector((state: RootState) => state.user); // redux에서 가져오기\r\n\r\n  useEffect(() => {\r\n    if (memberStatus === null) {\r\n      alert(\"풀이 열람 권한이 없습니다!\");\r\n      navigate(-1);\r\n    }\r\n  }, [memberStatus, qnA, navigate]);\r\n\r\n  if (qnA === null) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    // 성공 or 실패에 따른 배경색\r\n    <div\r\n      className={\r\n        state === \"success\"\r\n          ? \"successPage\"\r\n          : state === \"fail\"\r\n          ? \"failPage\"\r\n          : \"nonePage\"\r\n      }\r\n    >\r\n      <div>\r\n        {/* qnA가 null일 경우 처리 */}\r\n        {qnA ? (\r\n          <>\r\n            <RenderAnswerUI\r\n              navigate={navigate}\r\n              code={code}\r\n              qnA={qnA}\r\n              state={state}\r\n              setCode={setCode}\r\n              textFst={textFst}\r\n              handleTextFstChange={handleTextFstChange}\r\n              postAnswer={postAnswer}\r\n            />\r\n\r\n            <RenderFeed\r\n              navigate={navigate}\r\n              memberStatus={memberStatus}\r\n              feedbacks={feedbacks}\r\n              passCount={passCount}\r\n              state={state}\r\n              postFeedback={postFeedback}\r\n              textFst={textFst}\r\n              handleTextFstChange={handleTextFstChange}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionPage;\r\n","import styled from \"styled-components\";\r\nimport { StyledProps } from \"model/problemType\"; \r\n\r\nexport const StyledProblem = styled.div<StyledProps>`\r\n    .problem_header {\r\n        width: 80%;\r\n        height: 78px;\r\n        display: flex;\r\n        align-items: center;\r\n        margin-top: 40px;\r\n        margin-bottom: 16px;\r\n        position: relative;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        justify-content: space-between;\r\n    }\r\n    .button_group{\r\n        width: 80%;\r\n        margin: 0 auto 32px;\r\n        justify-content: right;\r\n    }\r\n    .problem_group {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .problem_id {\r\n        width: 80px;\r\n        height: fit-content;\r\n        font-size: 19px;\r\n\r\n        padding: 8px 0;\r\n        font-weight: bold;\r\n        // background-color: #ffffff;\r\n        background-color:#3B3B3B;\r\n        color : #ffffff;\r\n        border:solid 3px #3B3B3B; opacity:80%;\r\n        border-radius : 50px;\r\n        text-align: center;\r\n        margin-right: 20px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n    }\r\n    .header_title {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        text-align: left;\r\n        margin-right: 8px;\r\n    }\r\n    .header_score {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        text-align: left;\r\n        margin-left: 20px;\r\n    }\r\n    .header_answer_state {\r\n        width: fit-content;\r\n        padding: 8px 16px;\r\n        // color: ${props => props.state === \"success\" ? \"#5094F9\" : props.state === \"fail\" ? \"rgba(235, 52, 52, 0.8)\" : \"#6A6B6F\"};\r\n        // background-color: #ffffff;\r\n\r\n        /* border: solid 3px ${props => props.state === \"success\" ? \"#5094F9\" \r\n            : props.state === \"fail\" ? \"rgba(235, 52, 52, 0.8)\" \r\n            : \"#DEDEDE\"};\r\n        background-color: ${props => props.state === \"success\" ? \"#0025cae0; opacity:70%;\"\r\n        : props.state === \"fail\" ? \"rgb(255, 53, 53, 0.9)\" \r\n        : \"#3B3B3B; opacity:70%\"}; */\r\n        \r\n        color: ${props => props.state === \"success\" ? \"#0025cae0; opacity:70%;\" \r\n            : props.state === \"fail\" ? \"rgb(255, 53, 53, 0.9)\" \r\n            : \"#3B3B3B; opacity:70%\"};\r\n        border: solid 3px ${props => props.state === \"success\" ? \"#0025cae0; opacity:70%;\"\r\n            : props.state === \"fail\" ? \"rgb(246, 73, 73, 0.9)\" \r\n            : \"#3B3B3B; opacity:70%\"};\r\n\r\n        font-size: 19px;\r\n        font-weight: bold;\r\n        margin-right: 10px;\r\n        border-radius : 50px;\r\n        box-sizing: border-box;\r\n        box-shadow: 1px 2px #CCC9C9;\r\n    }\r\n    .description {\r\n        width: 1376px;\r\n        font-size: 20px;\r\n        align-items: center;\r\n        margin: auto;\r\n        background-color: beige;\r\n        text-align: left;\r\n    }\r\n\r\n    .problem_section{\r\n        width:80%;\r\n        height:100vh;\r\n        margin: 60px auto 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom:20px;\r\n    }\r\n\r\n    &.problem_header_section {\r\n        z-index: 998;\r\n        position: relative;\r\n    }\r\n\r\n    .code_section{\r\n        flex: 5;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        margin: auto 0;\r\n        height:100%;\r\n    }\r\n\r\n    .content_container {\r\n        width: 40%;\r\n        height: auto;\r\n        justify-content: center;\r\n        flex: 4;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-right: 60px;\r\n        // background-color: #ffffff;\r\n        // border-radius : 20px;\r\n        // box-shadow: 1px 3px #CCC9C9;\r\n        //   overflow-y: auto;\r\n\r\n    }\r\n    .content_container > .top,\r\n    .content_container > .bottom{\r\n        background-color: #ffffff;\r\n        border-radius : 20px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n        overflow-y: auto;\r\n        padding:12px;\r\n        width: 100%;\r\n\r\n        min-height: 240px;\r\n    }\r\n\r\n    // 스크롤바 디자인\r\n    ::-webkit-scrollbar {\r\n    width: 10px;  \r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n    background: #c0c0c0; /* 스크롤바 색상 */\r\n    border-radius: 10px; /* 스크롤바 둥근 테두리 */\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n    background: #e7e6f696;  /*스크롤바 뒷 배경 색상*/\r\n    }\r\n\r\n    .content_container > .top{\r\n\r\n        text-align: left;\r\n        margin: 0 auto 4px;\r\n        border-bottom: solid 1px;\r\n        height: 45%;\r\n    }\r\n    .content_container > .bottom{\r\n        height: 55%;\r\n\r\n    }\r\n    .content_container > .bottom > .sample_inputs {\r\n        width: 90%;\r\n        display:flex;\r\n        flex-direction:column;\r\n        align-items: start;\r\n\r\n        text-align: left;\r\n        margin: auto;\r\n    }\r\n    .underline\r\n    {\r\n        font-size:18px;\r\n        text-decoration:underline;\r\n        text-underline-offset : 6px;\r\n        text-decoration-color: #5094F9; opacity:70%;\r\n\r\n        color:#000000;\r\n     \r\n        font-size: 19px;\r\n        // font-weight: bold;\r\n        margin-bottom: 12px;\r\n    }\r\n    .top > .prob_text{\r\n        font-weight:bold;\r\n    }\r\n    .sample_inputs > .input_text{\r\n        font-weight:bold;\r\n    }\r\n    .sample_outputs > .output_text{\r\n        font-weight:bold;\r\n    }\r\n\r\n    // input요소들 중 순서에 따라 색깔 부여\r\n    .input_text > *:nth-child(1),\r\n    .output_text > *:nth-child(1){\r\n        color: rgb(124, 124, 124);\r\n    }\r\n    .input_text > *:nth-child(2n),\r\n    .output_text > *:nth-child(2n){\r\n        color: #a1a1ff;\r\n    }\r\n    .input_text > *:nth-child(3n),\r\n    .output_text > *:nth-child(3n){\r\n        color: #d783ff;\r\n    }\r\n\r\n    .content_container > .bottom > .sample_outputs {\r\n        width: 90%;\r\n        text-align: left;\r\n        margin: auto;\r\n    }\r\n    .sample_outputs > .underline{\r\n        margin-top:40px;\r\n    }\r\n\r\n\r\n    .code_input {\r\n        width: 100%;\r\n        height: 100%;\r\n        min-height: 564px;\r\n        font-size: 18px;\r\n        // color: #ffffff;\r\n        display: flex;\r\n        justify-content: center;\r\n        background-color: #3e3e3e;\r\n        overflow-y: auto;\r\n\r\n        border-radius : 20px;\r\n        padding: 16px 8px 0 12px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n        box-sizing: border-box;\r\n    }\r\n    .submit_button {\r\n        width: fit-content;\r\n        height: fit-content;\r\n        background-color: #9747FF;\r\n        color: white;\r\n        font-size: 20px;\r\n        border-radius: 5px;\r\n        border: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 80px auto 40px;\r\n        padding: 4px 36px;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n    }\r\n    .submit_button.disabled {\r\n        background-color: #dedede;\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    .code_container {\r\n        width: 1376px;\r\n        height: auto;\r\n        display: flex;\r\n        align-items: center;\r\n        margin: auto;\r\n        border-radius: 5px;\r\n        background-color: beige;\r\n        font-size: 20px;\r\n        white-space: pre-line; \r\n    }\r\n   \r\n    .title {\r\n        width: fit-content;\r\n        display: flex;\r\n        font-size: 24px;\r\n        font-weight: bold;\r\n        margin: 0 auto;\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .result_container {\r\n        width: 1376px;\r\n    height: auto;\r\n    background-color: #eee;\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n    white-space: pre-line; \r\n    text-align: left;\r\n    }\r\n    .loading {\r\n        height: 1500px\r\n    }\r\n    .detail_container {\r\n        width: 100%;\r\n        height: auto;\r\n        justify-content: center;\r\n        text-align: left;\r\n        margin-top: 40px;\r\n    }\r\n    .detail_content {\r\n        min-height: 150px;\r\n        text-align: left;\r\n        padding: 16px 8px 0 12px;\r\n        box-shadow: 1px 3px #CCC9C9;\r\n        box-sizing: border-box;\r\n        background-color: rgba(109, 99, 228, 0.3);\r\n        font-size: 20px;\r\n        border-radius: 15px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { StyledQuestionProps } from \"model/questionType\"; \r\n\r\n\r\nexport const StyledQuestion = styled.div<StyledQuestionProps>`\r\n  .code_question_container {\r\n    width: 95%;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 5%;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n  .code_container {\r\n    width: 40%;\r\n    height: 564px;\r\n    font-size: 20px;\r\n  }\r\n  .question_container {\r\n    width: 40%;\r\n  }\r\n  .question_layout {\r\n    width: 100%;\r\n  }\r\n  .question_header {\r\n    width: 100%;\r\n    height: 70px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 20px auto 0;\r\n  }\r\n  .question_id {\r\n    width: 80px;\r\n    padding: 8px 0;\r\n    height: fit-contents;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n    color: #325cc7;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n    border-radius: 50px;\r\n    background-color: #ffffff;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n  }\r\n  .header_title {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    flex: 1;\r\n    text-align: left;\r\n  }\r\n  .answer_input {\r\n    width: 100%;\r\n    height: 181px;\r\n    font-size: 20px;\r\n    display: flex;\r\n    background-color: #ffffff;\r\n    border: solid #ffffff;\r\n    border-radius: 20px;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n    overflow-wrap: break-word;\r\n    padding: 4px 12px;\r\n  }\r\n  .answer_input.display {\r\n    text-align: left;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    /* 내용 초과시 스크롤바 */\r\n    overflow-y: auto;\r\n  }\r\n\r\n  /* 스크롤바 */\r\n  .answer_input.display::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n  .answer_input.display::-webkit-scrollbar-thumb {\r\n    background: #c0c0c0; /* 스크롤바 색상 */\r\n    border-radius: 10px; /* 스크롤바 둥근 테두리 */\r\n  }\r\n  .answer_input.display::-webkit-scrollbar-track {\r\n    background: #e7e6f696; /*스크롤바 뒷 배경 색상*/\r\n  }\r\n\r\n  /* 스크롤바 */\r\n  .answer_input::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n  .answer_input::-webkit-scrollbar-thumb {\r\n    background: #c0c0c0; /* 스크롤바 색상 */\r\n    border-radius: 10px; /* 스크롤바 둥근 테두리 */\r\n  }\r\n  .answer_input::-webkit-scrollbar-track {\r\n    background: #e7e6f696; /*스크롤바 뒷 배경 색상*/\r\n  }\r\n\r\n  .button_group {\r\n    display: flex;\r\n  }\r\n  .button {\r\n    width: fit-content;\r\n    height: fit-content;\r\n    padding: 8px 32px;\r\n    color: white;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    border-radius: 5px;\r\n    border: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n  }\r\n  .button.answer {\r\n    background-color: #ac6dfd;\r\n    margin: 60px auto;\r\n    &:hover {\r\n      background-color: #9747ff;\r\n    }\r\n  }\r\n  .btn_container {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    width: 80%;\r\n    margin: 28px auto;\r\n  }\r\n\r\n  .button_problem {\r\n    width: fit-content;\r\n    height: fit-content;\r\n    position: relative;\r\n    padding: 8px 20px;\r\n    color: white;\r\n    font-weight: bold;\r\n    border-radius: 50px;\r\n    border: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n\r\n    background-color: #3b3b3b;\r\n    font-size: 16px;\r\n  }\r\n  .button_problem:hover {\r\n    background-color: #3b3b3b;\r\n    opacity: 80%;\r\n  }\r\n  .button_solution {\r\n    width: fit-content;\r\n    height: fit-content;\r\n    padding: 8px 20px;\r\n    color: white;\r\n    font-weight: bold;\r\n    border-radius: 50px;\r\n    border: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n\r\n    background-color: rgba(109, 99, 228, 0.6);\r\n    margin-left: 20px;\r\n    font-size: 16px;\r\n  }\r\n  .button_solution:hover {\r\n    background-color: rgba(109, 99, 228, 0.8);\r\n  }\r\n  /* feedback (comment) */\r\n  .feedback_section {\r\n    width: 80%;\r\n    justify-content: space-between;\r\n    display: flex;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    position: relative;\r\n  }\r\n  .feedback_waiting_bar {\r\n    width: 60%;\r\n    margin: 100px auto;\r\n    padding: 12px 0;\r\n    background-color: rgba(109, 99, 228, 0.6);\r\n    color: #ffffff;\r\n    border-radius: 15px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n\r\n    cursor: pointer;\r\n  }\r\n  .feedback_container {\r\n    margin-top: 88px;\r\n    width: 45%;\r\n  }\r\n  .feedback_result_pass,\r\n  .feedback_result_fail {\r\n    width: 100px;\r\n    text-align: left;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    margin-bottom: 12px;\r\n  }\r\n  .feedback_result_pass {\r\n    color: #04ca00;\r\n  }\r\n  .feedback_result_fail {\r\n    color: rgba(244, 117, 117, 0.9);\r\n  }\r\n  .feedback_index {\r\n    width: fit-content;\r\n    height: fit-content;\r\n    padding: 8px 24px;\r\n    border-radius: 50px;\r\n    text-align: center;\r\n    // background-color: #9747FF; opacity:60%;\r\n    background-color: #3b3b3b;\r\n    color: #ffffff;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  .feedback_writer {\r\n    margin-left: 20px;\r\n    font-size: 20px;\r\n    color: #3e3e3e;\r\n    font-weight: bold;\r\n  }\r\n  .feedback_content {\r\n    width: 100%;\r\n    font-size: 20px;\r\n    background-color: #ffffff;\r\n    border: solid #ffffff;\r\n    border-radius: 20px;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n    overflow-wrap: break-word;\r\n    margin-top: 10px;\r\n    color: #3e3e3e;\r\n  }\r\n  .feed_section {\r\n    width: 40%;\r\n  }\r\n  .feedback_content.input {\r\n    height: 270px;\r\n    padding: 12px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  .feedback_content.display {\r\n    height: 250px;\r\n    text-align: left;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    /* 내용 초과시 스크롤바 */\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .feedback_content.display::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n  .feedback_content.display::-webkit-scrollbar-thumb {\r\n    background: #c0c0c0; /* 스크롤바 색상 */\r\n    border-radius: 10px; /* 스크롤바 둥근 테두리 */\r\n  }\r\n  .feedback_content.display::-webkit-scrollbar-track {\r\n    background: #e7e6f696; /*스크롤바 뒷 배경 색상*/\r\n  }\r\n\r\n  // 수정하기\r\n  .feedback_content::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n  .feedback_content::-webkit-scrollbar-thumb {\r\n    background: #c0c0c0; /* 스크롤바 색상 */\r\n    border-radius: 10px; /* 스크롤바 둥근 테두리 */\r\n  }\r\n  .feedback_content::-webkit-scrollbar-track {\r\n    background: #e7e6f696; /*스크롤바 뒷 배경 색상*/\r\n  }\r\n\r\n  .feedback_select_section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .button_container {\r\n    width: fit-content;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    margin: 40px 0 40px;\r\n  }\r\n  .select_button {\r\n    font-size: 36px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n  }\r\n  .select_button.pass {\r\n    color: ${(props) =>\r\n      props.isSelected ? \"rgba(4, 202, 0, 1)\" : \"rgba(4, 202, 0, 0.6)\"};\r\n    &:hover {\r\n      color: rgba(4, 202, 0, 1);\r\n    }\r\n    margin-right: 20px;\r\n  }\r\n  .select_button.fail {\r\n    color: ${(props) =>\r\n      props.isSelected ? \"rgba(244, 117, 117, 1)\" : \"rgba(244, 117, 117, 0.6)\"};\r\n    &:hover {\r\n      color: rgba(244, 117, 117, 1);\r\n    }\r\n  }\r\n  .select_comment {\r\n    font-size: 20px;\r\n    color: #6f6f6f;\r\n  }\r\n  .feedback_button {\r\n    width: 100%;\r\n    height: fit-content;\r\n    padding: 10px 0;\r\n    border: solid 1px rgba(109, 99, 228, 0.6);\r\n    border-radius: 60px;\r\n    background-color: rgba(109, 99, 228, 0.6);\r\n    color: #ffffff;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .feedback_button:hover {\r\n    background-color: rgba(109, 99, 228, 1);\r\n  }\r\n\r\n  .result_container > p {\r\n    color: #665f5f;\r\n    opacity: 60%;\r\n  }\r\n  .result.success {\r\n    width: 70%;\r\n    height: fit-content;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 120px auto 10px;\r\n    padding: 12px 0;\r\n\r\n    // background-color: #04ca00; opacity:57%;\r\n    background-color: #0025cae0;\r\n    opacity: 57%;\r\n    color: #ffffff;\r\n    border-radius: 15px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #0025cae0;\r\n      opacity: 70%;\r\n    }\r\n  }\r\n  .result.fail {\r\n    width: 70%;\r\n    height: fit-content;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 120px auto 10px;\r\n    padding: 12px 0;\r\n\r\n    background-color: rgba(244, 117, 117, 0.8);\r\n    color: #ffffff;\r\n    border-radius: 15px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    box-shadow: 1px 3px #ccc9c9;\r\n\r\n    cursor: pointer;\r\n  }\r\n  .result.fail:hover {\r\n    background-color: rgba(244, 117, 117, 1);\r\n  }\r\n  .loading {\r\n    height: 1500px;\r\n  }\r\n\r\n  .dropdown_content {\r\n    background-color: #fefdfd;\r\n    border: 2px solid #c8c8c8;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 0;\r\n    padding: 40px 20px;\r\n    position: absolute;\r\n    top: 40px;\r\n    right: -10px;\r\n\r\n    width: 520px;\r\n    min-width: 200px;\r\n    z-index: 999;\r\n    color: black;\r\n\r\n    // 글자 튀어나옴 방지_ by성임\r\n    word-break: break-all;\r\n  }\r\n\r\n  .dropdown_content > .content {\r\n    text-align: left;\r\n  }\r\n\r\n  .sample_inputs {\r\n    text-align: left;\r\n  }\r\n  .sample_outputs {\r\n    text-align: left;\r\n  }\r\n`;\r\n"],"names":["axios","getProbContent","problemId","data","get","withCredentials","error","console","log","getProbTitle","res","postSubmitCode","request","response","post","code","status","isAxiosError","getCode","answerId","getFeed","getQues","default","postAnswers","postFeed","answerFst","answerSec","comment","selected","commentPassFail","React","jsx","_jsx","jsxs","_jsxs","transferTime","time","replace","goBack","window","history","back","renderNewlines","text","split","map","line","index","Fragment","children","renderStyledNewlines","lines","Suspense","Loading","_Fragment","CodeEditor","lazy","ProbCode","_ref","FstHandler","SecHandler","qnA","setCode","className","fallback","onChange","readOnly","answerState","questionContentFst","questionContentSec","useState","useProbPage","StyledProblem","ProbHeader","state","navigate","isDropdownOpen","setIsDropdownOpen","title","problem","toggleDropdown","prevState","titleText","problemTitle","problemContent","sampleInputs","sampleOutputs","onClick","style","whiteSpace","input","output","StyledQuestion","RenderAnswerUI","textFst","handleTextFstChange","postAnswer","Number","sessionStorage","getItem","textSec","setTextSec","handleTextSecChange","e","target","value","submitAnswer","alert","isConfirmed","confirm","RenderFeed","memberStatus","feedbacks","passCount","postFeedback","buttonColor1","setButtonColor1","buttonColor2","setButtonColor2","selectedOption","setSelectedOption","passButtonClick","failButtonClick","handleOption","option","submitComment","parseInt","feedbackArray","Object","values","height","border","backgroundColor","marginTop","length","feedback","writerGen","writerName","commentContent","placeholder","color","useProbContent","useProbTitle","useSubmitCode","useEffect","useCallback","setProblem","fetchProblem","useSelector","textHandler","submitCode","detail","sign","isLogin","setTitle","fetchTitle","titleData","useRef","useNavigate","setDetail","newCode","current","setItem","toString","answer_id","message","useQuestionHook","getAlert","setState","setQnA","setFeedbacks","setPassCount","getCodes","undefined","getQuestions","location","reload","getFeedback","i","QuestionPage","url","URL","href","pathname","setTextFst","responseStatus","user","styled","div","props","isSelected"],"sourceRoot":""}