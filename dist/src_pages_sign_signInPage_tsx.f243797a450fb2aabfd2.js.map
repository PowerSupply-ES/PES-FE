{"version":3,"file":"src_pages_sign_signInPage_tsx.f243797a450fb2aabfd2.js","mappings":"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","sources":["webpack://pes-fe/./src/apis/sign/postLogin.ts","webpack://pes-fe/./src/components/sign/Copyright.tsx","webpack://pes-fe/./src/components/sign/LoginTemp.tsx","webpack://pes-fe/./src/hooks/sign/useSignIn.ts","webpack://pes-fe/./src/pages/sign/signInPage.tsx","webpack://pes-fe/./src/styles/css/intro.css?e8a4"],"sourcesContent":["import axios from \"axios\";\r\nimport { SignInFormData } from \"model/userType\";\r\n\r\nconst postLogin = async (formData: SignInFormData) => {\r\n  const uri = \"/api/signin\";\r\n\r\n  // 로그인 요청 api\r\n  try {\r\n    const res = await axios.post<{ message: string }>(uri, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error: unknown) {\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response && error.response.status === 401) {\r\n        throw new Error(\"일치하는 정보가 없습니다\");\r\n      } else if (error.response) {\r\n        throw new Error(`${error.response.status} ${error.response.statusText}`);\r\n      }\r\n    }\r\n    throw new Error(\"네트워크 오류가 발생했습니다\");\r\n  }\r\n};\r\n\r\nexport default postLogin;\r\n","import { CopyrightProps } from \"model/userType\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\n\r\n// 하단 copyright\r\nconst Copyright: React.FC<CopyrightProps> = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Goto HOME © \"}\r\n      <Link color=\"inherit\" href=\"https://pes23.com/\">\r\n        pes23.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","// MUI이용 로그인 form\r\nimport React from \"react\";\r\nimport logo from \"assets/images/sign_logo.webp\";\r\nimport Copyright from \"./Copyright\";\r\nimport useSignIn from \"hooks/sign/useSignIn\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nconst LoginTemp: React.FC = () => {\r\n  const { formData, handleSubmit, handleInputChange } = useSignIn();\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, width: 56, height: 56 }} src={logo} />\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography>\r\n          \r\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              value={formData.memberId}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              id=\"memberId\"\r\n              label=\"ID\"\r\n              name=\"memberId\"\r\n              autoComplete=\"memberId\"\r\n              autoFocus\r\n              required\r\n              placeholder=\"학번을 입력해주세요\"\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              value={formData.memberPw}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              name=\"memberPw\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              id=\"memberPw\"\r\n              autoComplete=\"password\"\r\n              required\r\n              placeholder=\"비밀번호를 입력해주세요\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs></Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"아이디가 없으신가요? 회원가입\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default LoginTemp;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\"; // dispatch 추가\r\nimport postLogin from \"apis/sign/postLogin\";\r\nimport { SignInFormData } from \"model/userType\";\r\nimport { loginAction } from \"stores/actions/userAction\"; // login 액션 추가\r\n\r\n// 로그인 관련 HOOK\r\nconst useSignIn = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch(); // dispatch 초기화\r\n  const [formData, setFormData] = useState<SignInFormData>({\r\n    memberId: \"\",\r\n    memberPw: \"\",\r\n  });\r\n\r\n  // 로그인 폼이 제출될 때 호출\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    // 기본 제출 동작 막기\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const responseData = await postLogin(formData);\r\n      const resultMessage = responseData.message;\r\n      alert(resultMessage);\r\n\r\n      // 로그인 성공 후 Redux 상태 변경\r\n      dispatch(loginAction(formData.memberId)); // 로그인 액션 디스패치\r\n\r\n      navigate(\"/\");\r\n      // window.location.reload(); // 페이지 새로고침\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        alert(error.message);\r\n      } else {\r\n        alert(\"알 수 없는 오류가 발생했습니다.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //입력필드 값 변경될때마다 호출\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({\r\n      // formData복사, 변경된 필드만 업데이트\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { formData, handleSubmit, handleInputChange };\r\n};\r\nexport default useSignIn;\r\n","import React from \"react\";\r\nimport \"styles/css/intro.css\";\r\nimport LoginTemp from \"components/sign/LoginTemp\";\r\n\r\nconst Signin: React.FC = () => {\r\n  return (\r\n    <div className=\"sign-wrapper\">\r\n      <LoginTemp />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["axios","postLogin","formData","uri","res","post","headers","data","error","isAxiosError","response","status","Error","statusText","Typography","Link","jsx","_jsx","jsxs","_jsxs","Copyright","props","variant","color","align","children","href","Date","getFullYear","React","logo","useSignIn","Avatar","Button","CssBaseline","TextField","Grid","Box","Container","createTheme","ThemeProvider","defaultTheme","LoginTemp","handleSubmit","handleInputChange","theme","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","width","height","src","onSubmit","mt","margin","value","memberId","onChange","fullWidth","id","label","name","autoComplete","autoFocus","required","placeholder","memberPw","type","mb","container","item","xs","useState","useNavigate","useDispatch","loginAction","navigate","dispatch","setFormData","e","preventDefault","responseData","resultMessage","message","alert","target","Signin","className"],"sourceRoot":""}